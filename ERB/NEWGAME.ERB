;-------------------------------------------------
;タイトル画面
;-------------------------------------------------
@SYSTEM_TITLE
DRAWLINE
ALIGNMENT CENTER
PRINT_IMG "タイトルロゴ", 5330, 1520
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
ALIGNMENT LEFT
DRAWLINE
PRINTFORML Ver0.0{GAMEBASE_VERSION}
PRINTFORML %GAMEBASE_INFO%
DRAWLINE
PRINTBUTTON "[0] 最初から始める", 0
PRINTL
PRINTBUTTON "[1] ロードして始める", 1
PRINTL
PRINTBUTTON "[2] CSVエディタを起動する", 2
PRINTL

BINPUT
SELECTCASE RESULT
	CASE 0
		BEGIN FIRST
	CASE 1
		LOADGAME
	CASE 2
		CSVエディタフラグ = 1
		CALL 従業員素質指定雇用
		CSVエディタフラグ = 0
ENDSELECT

RESTART


;-------------------------------------------------
;ニューゲーム
;-------------------------------------------------
@EVENTFIRST
#DIM 引き継いだキャラ人数
#DIM 引き継いだランダムキャラ, 10
#DIM 設定中キャラ番号
#DIMS 大分割文字列, 10
#DIMS 小分割文字列, 1000
VARSET LOCAL
VARSET LOCALS
VARSET 引き継いだランダムキャラ, -1
VARSET 大分割文字列
VARSET 小分割文字列
TARGET = 0
ASSI = 0

PBAND = 12

CALL DEFAULT_OPTION

;モード選択（後々使うかもしれないから消さずにコメントアウト）
;PRINTL ★★モードを選択してください★★
;PRINTL [0]START
;
;$INPUT_LOOP
;INPUT
;IF RESULT == 0
;	FLAG:5 = 0
;ELSE
;	GOTO INPUT_LOOP
;ENDIF


初期設定中 = 1
LOCAL:1 = 0
LOCAL:2 = 0
IF 引き継ぎ中フラグ
	;あなた登録
	LOADCHARA "あなた"
	FOR LOCAL, 0, 10
		IF 引き継ぎキャラ番号:LOCAL > 0
			;引き継ぎキャラは先に登録
			LOADCHARA TOSTR(LOCAL)
			LOCAL:1 += 1
			IF NO:(LOCAL:1) == 999
				引き継いだランダムキャラ:(LOCAL:2) = ランダムキャラ記録位置判別(LOCAL)
				LOCAL:2 += 1
			ENDIF
		ENDIF
	NEXT
	引き継いだキャラ人数 = LOCAL:1
ELSE
	;あなた登録
	ADDCHARA 0
ENDIF
FOR LOCAL, 1, キャラクタ数上限
	SIF !EXISTCSV(LOCAL)
		CONTINUE
	;ランダムキャラ排除
	SIF LOCAL == 999
		CONTINUE
	;登録済みのキャラ(=引き継ぎキャラ)はスキップ
	GETCHARA LOCAL
	SIF RESULT > -1
		CONTINUE
	ADDCHARA LOCAL
	設定中キャラ番号 = CHARANUM - 1
	IF 引き継ぎ中フラグ && LOCAL != 0
		FOR LOCAL:1, 0, 500
			IF キャラ変数引き継ぎ:(LOCAL:1):キャラ番号 == 設定中キャラ番号
				EXP:設定中キャラ番号:肉体熟知 = キャラ変数引き継ぎ:(LOCAL:1):肉体熟知
				弱点看破:設定中キャラ番号:0 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破0
				弱点看破:設定中キャラ番号:1 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破1
				弱点看破:設定中キャラ番号:2 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破2
				弱点看破:設定中キャラ番号:3 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破3
				弱点看破:設定中キャラ番号:4 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破4
				弱点コマンド枠:設定中キャラ番号:0 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠0
				弱点コマンド枠:設定中キャラ番号:1 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠1
				弱点コマンド枠:設定中キャラ番号:2 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠2
				弱点コマンド枠:設定中キャラ番号:3 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠3
				弱点コマンド枠:設定中キャラ番号:4 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠4
				BREAK
			ENDIF
		NEXT
	ENDIF
NEXT

;引き継ぎランダムキャラの追加
IF 引き継ぎ中フラグ
	FOR LOCAL, 0, 100
		SIF MATCH(引き継いだランダムキャラ, LOCAL) > 0
			CONTINUE
		IF 従業員初期値引き継ぎ:LOCAL != ""
			VARSET 大分割文字列
			VARSET 小分割文字列
			ADDCHARA 999
			設定中キャラ番号 = CHARANUM - 1
			SPLIT 従業員初期値引き継ぎ:LOCAL, "^^^", 大分割文字列
			;弱点
			FOR LOCAL:1, 0, 500
				IF キャラ変数引き継ぎ:(LOCAL:1):キャラ番号 == LOCAL * -1
					EXP:設定中キャラ番号:肉体熟知 = キャラ変数引き継ぎ:(LOCAL:1):肉体熟知
					弱点看破:設定中キャラ番号:0 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破0
					弱点看破:設定中キャラ番号:1 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破1
					弱点看破:設定中キャラ番号:2 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破2
					弱点看破:設定中キャラ番号:3 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破3
					弱点看破:設定中キャラ番号:4 = キャラ変数引き継ぎ:(LOCAL:1):弱点看破4
					弱点コマンド枠:設定中キャラ番号:0 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠0
					弱点コマンド枠:設定中キャラ番号:1 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠1
					弱点コマンド枠:設定中キャラ番号:2 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠2
					弱点コマンド枠:設定中キャラ番号:3 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠3
					弱点コマンド枠:設定中キャラ番号:4 = キャラ文字列引き継ぎ:(LOCAL:1):弱点枠4
					BREAK
				ENDIF
			NEXT
			;名前
			VARSET 小分割文字列
			SPLIT 大分割文字列:1, "_", 小分割文字列
			NAME:設定中キャラ番号 = [一般人]%小分割文字列:1%
			CALLNAME:設定中キャラ番号 = %小分割文字列:1%
			;素質
			VARSET 小分割文字列
			SPLIT 大分割文字列:2, "_", 小分割文字列
			FOR LOCAL:1, 0, 900, 3
				SIF 小分割文字列:(LOCAL:1) == ""
					BREAK
				TALENT:設定中キャラ番号:(TOINT(小分割文字列:(LOCAL:1 + 1))) = TOINT(小分割文字列:(LOCAL:1 + 2))
			NEXT
			;フレーバー素質
			VARSET 小分割文字列
			SPLIT 大分割文字列:3, "_", 小分割文字列
			FOR LOCAL:1, 0, 30, 3
				SIF 小分割文字列:(LOCAL:1) == ""
					BREAK
				フレーバー素質:設定中キャラ番号:(TOINT(小分割文字列:(LOCAL:1 + 1))) = TOINT(小分割文字列:(LOCAL:1 + 2))
			NEXT
			;ABL
			VARSET 小分割文字列
			SPLIT 大分割文字列:4, "_", 小分割文字列
			FOR LOCAL:1, 0, 150, 3
				SIF 小分割文字列:(LOCAL:1) == ""
					BREAK
				ABL:設定中キャラ番号:(TOINT(小分割文字列:(LOCAL:1 + 1))) = TOINT(小分割文字列:(LOCAL:1 + 2))
			NEXT
			;ABL
			VARSET 小分割文字列
			SPLIT 大分割文字列:5, "_", 小分割文字列
			FOR LOCAL:1, 0, 300, 3
				SIF 小分割文字列:(LOCAL:1) == ""
					BREAK
				EXP:設定中キャラ番号:(TOINT(小分割文字列:(LOCAL:1 + 1))) = TOINT(小分割文字列:(LOCAL:1 + 2))
			NEXT
			;戦闘系
			VARSET 小分割文字列
			SPLIT 大分割文字列:6, "_", 小分割文字列
			基礎BATTLE_STATE:設定中キャラ番号:属性 = TOINT(小分割文字列:1)
			基礎BATTLE_STATE:設定中キャラ番号:得意武器 = TOINT(小分割文字列:3)
			CALL 初期ステータス設定_テンプレート適用(タイプ数値文字列変換(TOINT(小分割文字列:5)), 設定中キャラ番号)
			知識素質:設定中キャラ番号:性知識 = TOINT(小分割文字列:7)
		ENDIF
	NEXT
ENDIF

CALL コマンド存在チェック

CALL CUSTOM_CHARAMAKE(MASTER)
SIF TALENT:MASTER:2 & 2
	MAXBASE:MASTER:5 = 1500
ITEM:サプチケ = 1

CALL イベントデータベースセット
CALL 戦闘用データベースセット
IF 引き継ぎ中フラグ
	LOADTEXT "dat/素材DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/素材DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持素材データベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/衣装DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/衣装DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持衣装データベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/指輪DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/指輪DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持指輪データベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/耳飾りDT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/耳飾りDT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持耳飾りデータベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/アイテムDT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/アイテムDT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持アイテムデータベース", LOCALS:1, LOCALS:0

	所持制服文字列 = %制服引き継ぎ%
	MONEY = 所持ルピ引き継ぎ
	FOR LOCAL, 0, 100
		あなた特殊能力:LOCAL = あなた特殊能力引き継ぎ:LOCAL
	NEXT
ELSE
	CALL アイテムデータベースセット
	CALL 指輪データベースセット
	CALL 耳飾りデータベースセット
	CALL 衣装データベースセット
	CALL 素材アイテムデータベースセット

	CALL 制服登録処理("バニー服")
	CALL 制服登録処理("メイド服")

	CALL エロ衣装登録処理("逆バニー")
	CALL エロ衣装登録処理("マイクロビキニ")
	
	MONEY = 5000
	身体項目表示切り替えOPTION = 7
ENDIF
CALL 素材アイテム登録処理

従業員キャラ上限 = 2
施設改造度:0:0 = 1

PRINTW パラメータの初期化処理を行います
PRINTL 
SAVESTR:10 = /
LOCAL:1 = CHARANUM / 10
REDRAW 0
FOR LOCAL, 0, CHARANUM
	IF LOCAL > 0 && LOCAL <= 引き継いだキャラ人数
		CALL キャラクター初期化(LOCAL, 1)
	ELSEIF NO:LOCAL == 999
		CALL キャラクター初期化(LOCAL, 1)
	ELSE
		CALL キャラクター初期化(LOCAL)
	ENDIF
	IF LOCAL % LOCAL:1 == 0
		CLEARLINE 1
		PRINTFORML 進行度……{LOCAL / LOCAL:1 * 10}\%
		AWAIT
		;TWAIT 100, 1
	ENDIF
NEXT
CLEARLINE 1
PRINTL 進行度……100%
;起床時刻
CFLAG:MASTER:現在位置 = CFLAG:MASTER:311
CFLAG:MASTER:滞在期間 = 999
CFLAG:MASTER:起床予定時刻 = 420
CFLAG:MASTER:睡眠 = 1
初体験日:MASTER:初対面 = 999
FLAG:従業員数 = 1
依頼同時最大数 = 1
DAY = 1
汎用喘ぎ使用OPTION = 3

ボタン化用カラーマトリクス:0:0 = 768,256,256,  0,  0
ボタン化用カラーマトリクス:1:0 = 256,768,256,  0,  0
ボタン化用カラーマトリクス:2:0 = 256,256,256,  0,  0
ボタン化用カラーマトリクス:3:0 =   0,  0,  0,256,  0
ボタン化用カラーマトリクス:4:0 =   0,  0,  0,  0,256

REDRAW 1



VARSET 通常キャラ招待
VARSET ＤＭキャラ招待

;初期値設定
滞在キャラ数 = 0
滞在キャラ上限 = 20
モブ観光客数 = 0
;あなたは初期状態で雑務に従事している
現在仕事:0:0 = 1

PRINTW パラメータの初期化処理が終了しました

;素質設定
PRINTL
PRINTW 素質の切り替えオプションを呼び出します。
PRINTL
CALL OPTION_素質切り替え
PRINTL
PRINTW このオプションはゲーム開始後もOPTIONから呼び出すことが出来ます。

;フレーバー設定
PRINTL
PRINTW フレーバー素質の設定を呼び出します。
PRINTL
;先に口上側の設定を読み込んでおく
FOR COUNT, 1, CHARANUM
	TRYCALLFORM フレーバー素質初期設定変更_{COUNT}
NEXT
CALL フレーバー素質初期設定
PRINTL

CALL シナリオ_OP

初期設定中 = 0
IF 引き継ぎ中フラグ
	;使用する変数を掃除
	VARSET キャラ変数引き継ぎ
	VARSET キャラ文字列引き継ぎ
	制服引き継ぎ = 
	所持ルピ引き継ぎ = 0
	VARSET 引き継ぎキャラ番号
	VARSET あなた特殊能力引き継ぎ
	VARSET 従業員初期値引き継ぎ
	引き継ぎ中フラグ = 0
ENDIF
BEGIN SHOP

@EVENTLOAD
CALL VERSION_UP




@キャラクター初期化(ARG, 引き継ぎキャラフラグ = 0)
#DIM 引き継ぎキャラフラグ
#DIMS CSTR切り分け文字列格納, 2
VARSET LOCALS
VARSET CSTR切り分け文字列格納


;全員睡眠状態
CFLAG:ARG:睡眠 = 1
CFLAG:ARG:滞在期間 = -1
CFLAG:ARG:現在位置 = 999
BASE:ARG:酩酊 = 0
MAXBASE:ARG:酩酊 = 1000
BASE:ARG:母乳 = 0
MAXBASE:ARG:母乳 = 10000
BASE:ARG:性欲 = 0
MAXBASE:ARG:性欲 = 10000
CALL CLOTHES_RESET(ARG)
CSTR:ARG:二人称 = %CALLNAME:PLAYER%

;射精、勃起、ムード、理性、怒り
BASE:ARG:射精 = 0
BASE:ARG:勃起 = 0
BASE:ARG:ムード = 0
BASE:ARG:理性 = MAXBASE:ARG:11
BASE:ARG:怒り = 0
BASE:ARG:勃起 = 0
BASE:ARG:満足 = 0
CFLAG:ARG:勃起度 = 0
CFLAG:ARG:同行 = 0
CFLAG:ARG:酔いすぎ = 0
;射精処理用文字列変数
CSTR:ARG:10 = /
CSTR:ARG:11 = /
;発情期
SIF 発情期判定(ARG)
	CFLAG:ARG:発情期フラグ = RAND:9 + 1

IF 引き継ぎキャラフラグ == 0
	VARSET LOCALS
	;招待時同行キャラ
	REPLACE CSTR:ARG:同行キャラ, " ", ""
	SPLIT RESULTS, "%", LOCALS
	LOCAL:2 = RESULT - 1
	FOR LOCAL, 0, LOCAL:2
		SPLIT LOCALS:LOCAL, "_", CSTR切り分け文字列格納
		;同行キャラ格納格納:0に名前、同行キャラ格納:1に確率が入っているはず
		同行候補キャラ番号:ARG:LOCAL = FINDCHARA(NAME, CSTR切り分け文字列格納:0)
		同行候補キャラ確率:ARG:LOCAL = TOINT(CSTR切り分け文字列格納:1)
	NEXT

	VARSET LOCALS
	;知識素質
	SUBSTRING CSTR:ARG:知識素質設定, 1, -1
	SPLIT RESULTS, " ", LOCALS
	LOCAL:2 = RESULT - 1
	FOR LOCAL, 0, LOCAL:2
		SPLIT LOCALS:LOCAL, "Lv", CSTR切り分け文字列格納
		;CSTR切り分け文字列格納:0に素質名、CSTR切り分け文字列格納:1に数値が入っているはず
		知識素質:ARG:(CSTR切り分け文字列格納:0) = TOINT(CSTR切り分け文字列格納:1)
	NEXT

	;素質切り替え
	IF TALENT:LOCAL:陥没乳首 && 素質切り替えOPTION記憶:陥没乳首_なし
		TALENT:LOCAL:陥没乳首 = 0
	ENDIF
	IF TALENT:LOCAL:母乳体質 && 素質切り替えOPTION記憶:母乳体質_なし
		TALENT:LOCAL:母乳体質 = 0
	ENDIF
	IF TALENT:LOCAL:性別 == 3 && 素質切り替えOPTION記憶:ふたなり_女性
		TALENT:LOCAL:性別 = 1
	ENDIF

	VARSET LOCALS
	;戦闘ステータス
	SUBSTRING CSTR:ARG:戦闘基礎ステータス設定, 1, -1
	SPLIT RESULTS, " ", LOCALS
		;属性
		SPLIT LOCALS:0, "_", CSTR切り分け文字列格納
		基礎BATTLE_STATE:ARG:属性 = 属性文字列数値変換(CSTR切り分け文字列格納:1)
		;得意武器
		SPLIT LOCALS:1, "_", CSTR切り分け文字列格納
		基礎BATTLE_STATE:ARG:得意武器 = 得意武器文字列数値変換(CSTR切り分け文字列格納:1)
		;初期ステータス
		SPLIT LOCALS:2, "_", CSTR切り分け文字列格納
		CALL 初期ステータス設定_テンプレート適用(CSTR切り分け文字列格納:1, ARG)

	CALL 弱点コマンド初期設定(ARG)
	IF 従業員追加中フラグ
		従業員追加中フラグ = 0
	ELSE
		CALL INIT_BODYSIZE(ARG)
	ENDIF

	TRYCALLFORM 口上側初期パラメータ変更_{NO:ARG}
ELSEIF !BASE:ARG:身長
	CALL INIT_BODYSIZE(ARG)
ENDIF

@弱点コマンド初期設定(ARG)
#DIMS 弱点候補_セクハラ, 200
#DIMS 弱点候補_うふふ, 200
#DIMS 敏感弱点候補_セクハラ, 200
#DIMS 敏感弱点候補_うふふ, 200
#DIM 敏感セクハラ候補数
#DIM 敏感うふふ候補数
#DIM セクハラ候補数
#DIM うふふ候補数
#DIM チェック完了

;弱点が全て埋まっている場合（=周回中）はここで処理終了
SIF MATCH(弱点コマンド枠:ARG:0, "", 0, 5)==0
	RETURN

;弱点初期化
VARSET 弱点コマンド枠:ARG:0

;まず口上側で弱点の設定があるか見に行く
TRYCCALLFORM 弱点コマンド初期設定変更_{NO:ARG}
	;弱点が全て埋まった場合はここで処理終了
	SIF MATCH(弱点コマンド枠:ARG:0, "", 0, 5)==0
		RETURN
CATCH
ENDCATCH

セクハラ候補数 = 0
うふふ候補数 = 0
敏感セクハラ候補数 = 0
敏感うふふ候補数 = 0


;敏感素質に対応した弱点候補をリスト化
FOR LOCAL, 0, 1000
	;通常コマンド
	IF GETBIT(通常コマンド存在フラグ:LOCAL, 0)
		;口上側と被ってない場合+敏感素質に対応してる場合のみ
		IF !MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}", 0, 5) && 敏感素質対応判定(ARG, @"COMTYPE_{LOCAL}")
			SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}")
				CASE 1
					敏感弱点候補_セクハラ:敏感セクハラ候補数 = {LOCAL}
					敏感セクハラ候補数 += 1
				CASE 2
					敏感弱点候補_うふふ:敏感うふふ候補数 = {LOCAL}
					敏感うふふ候補数 += 1
			ENDSELECT
		ENDIF
		;派生コマンド
		FOR LOCAL:1, 0, 20
			SIF !GETBIT(通常コマンド存在フラグ:LOCAL, LOCAL:1 + 1)
				CONTINUE
			;口上側と被ってるOR敏感素質に対応してないなら飛ばす
			SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:1}", 0, 5) || !敏感素質対応判定(ARG, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				CONTINUE
			SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				CASE 1
					敏感弱点候補_セクハラ:敏感セクハラ候補数 = {LOCAL}_{LOCAL:1}
					敏感セクハラ候補数 += 1
				CASE 2
					敏感弱点候補_うふふ:敏感うふふ候補数 = {LOCAL}_{LOCAL:1}
					敏感うふふ候補数 += 1
			ENDSELECT
		NEXT
	ENDIF
	;専用コマンド
	IF INRANGE(LOCAL, 370, 374)
		SIF !EXISTFUNCTION(@"COMTYPE_{LOCAL}_{NO:ARG}")
			CONTINUE
		;口上側と被ってるOR敏感素質に対応してないなら飛ばす
		SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{NO:ARG}", 0, 5) || !敏感素質対応判定(ARG, @"COMTYPE_{LOCAL}_{NO:ARG}")
			CONTINUE
		SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{NO:ARG}")
			CASE 1
				敏感弱点候補_セクハラ:敏感セクハラ候補数 = {LOCAL}_{NO:ARG}
				敏感セクハラ候補数 += 1
			CASE 2
				敏感弱点候補_うふふ:敏感うふふ候補数 = {LOCAL}_{NO:ARG}
				敏感うふふ候補数 += 1
		ENDSELECT
	;場所固有コマンド
	ELSEIF INRANGE(LOCAL, 380, 384)
		FOR LOCAL:1, 0, 20
			FOR LOCAL:5, 0, 1
				FOR LOCAL:2, 0, 20
					SIF !GETBIT(場所固有コマンド存在フラグ:(LOCAL - 380):(LOCAL:5):(LOCAL:1), LOCAL:2)
						CONTINUE
					LOCAL:3 = LOCAL:1 * 100 + LOCAL : 2 + 1
					;口上側と被ってるなら飛ばす
					SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:5}_{LOCAL:3}", 0, 5) || !敏感素質対応判定(ARG, @"COMTYPE_{LOCAL}_{LOCAL:5}_{LOCAL:3}")
						CONTINUE
					SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{LOCAL:5}_{LOCAL:3}")
						CASE 1
							敏感弱点候補_セクハラ:敏感セクハラ候補数 = {LOCAL}_{LOCAL:3}
							敏感セクハラ候補数 += 1
						CASE 2
							敏感弱点候補_うふふ:敏感うふふ候補数 = {LOCAL}_{LOCAL:3}
							敏感うふふ候補数 += 1
					ENDSELECT
				NEXT
			NEXT
		NEXT
	ENDIF
NEXT


;敏感対応の候補からセクハラとうふふに一つずつ設定
;ただし、以下の条件を守る
;・弱点コマンド枠は最低一つ空ける
;・うふふとセクハラのどちらか一つしか入らないならうふふ優先

;うふふ設定
LOCAL = 0
WHILE 1
	SIF LOCAL > 3 || !敏感うふふ候補数
		BREAK
	IF 弱点コマンド枠:ARG:LOCAL != ""
		LOCAL ++
		CONTINUE
	ENDIF
	LOCAL:1 = RAND:敏感うふふ候補数
	弱点コマンド枠:ARG:LOCAL = %敏感弱点候補_うふふ:(LOCAL:1)%
	BREAK
WEND

;セクハラ設定
LOCAL = 0
WHILE 1
	SIF LOCAL > 3 || !敏感セクハラ候補数
		BREAK
	IF 弱点コマンド枠:ARG:LOCAL != ""
		LOCAL ++
		CONTINUE
	ENDIF
	LOCAL:1 = RAND:敏感セクハラ候補数
	弱点コマンド枠:ARG:LOCAL = %敏感弱点候補_セクハラ:(LOCAL:1)%
	BREAK
WEND

;弱点候補リスト化
FOR LOCAL, 0, 1000
	;通常コマンド
	IF GETBIT(通常コマンド存在フラグ:LOCAL, 0)
		;口上側と被ってない場合のみ
		IF !MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}", 0, 5)
			SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}")
				CASE 1
					弱点候補_セクハラ:セクハラ候補数 = {LOCAL}
					セクハラ候補数 += 1
				CASE 2
					弱点候補_うふふ:うふふ候補数 = {LOCAL}
					うふふ候補数 += 1
			ENDSELECT
		ENDIF
		;派生コマンド
		FOR LOCAL:1, 0, 20
			SIF !GETBIT(通常コマンド存在フラグ:LOCAL, LOCAL:1 + 1)
				CONTINUE
			;口上側と被ってるなら飛ばす
			SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:1}", 0, 5)
				CONTINUE
			SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				CASE 1
					弱点候補_セクハラ:セクハラ候補数 = {LOCAL}_{LOCAL:1}
					セクハラ候補数 += 1
				CASE 2
					弱点候補_うふふ:うふふ候補数 = {LOCAL}_{LOCAL:1}
					うふふ候補数 += 1
			ENDSELECT
		NEXT
	ENDIF
	;専用コマンド
	IF INRANGE(LOCAL, 370, 374)
		SIF !EXISTFUNCTION(@"COMTYPE_{LOCAL}_{NO:ARG}")
			CONTINUE
		;口上側と被ってるなら飛ばす
		SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{NO:ARG}", 0, 5)
			CONTINUE
		SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{NO:ARG}")
			CASE 1
				弱点候補_セクハラ:セクハラ候補数 = {LOCAL}_{NO:ARG}
				セクハラ候補数 += 1
			CASE 2
				弱点候補_うふふ:うふふ候補数 = {LOCAL}_{NO:ARG}
				うふふ候補数 += 1
		ENDSELECT
	;場所固有コマンド
	ELSEIF INRANGE(LOCAL, 380, 384)
		FOR LOCAL:1, 0, 20
			FOR LOCAL:2, 0, 20
				SIF !GETBIT(場所固有コマンド存在フラグ:(LOCAL - 380):(LOCAL:5):(LOCAL:1), LOCAL:2)
					CONTINUE
				LOCAL:3 = LOCAL:1 * 100 + LOCAL : 2 + 1
				;口上側と被ってるなら飛ばす
				SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:5}_{LOCAL:3}", 0, 5)
					CONTINUE
				SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{LOCAL:5}_{LOCAL:3}")
					CASE 1
						弱点候補_セクハラ:セクハラ候補数 = {LOCAL}_{LOCAL:5}_{LOCAL:3}
						セクハラ候補数 += 1
					CASE 2
						弱点候補_うふふ:うふふ候補数 = {LOCAL}_{LOCAL:5}_{LOCAL:3}
						うふふ候補数 += 1
				ENDSELECT
			NEXT
		NEXT
	ENDIF
NEXT

;空いている枠にセクハラ系から２つ、うふふ系から２つ、完全ランダムで１つ設定する

FOR LOCAL, 0, 5
	SIF 弱点コマンド枠:ARG:LOCAL != ""
		CONTINUE
	SELECTCASE LOCAL
		CASE 0 TO 1
			LOCAL:1 = RAND:セクハラ候補数
			弱点コマンド枠:ARG:LOCAL = %弱点候補_セクハラ:(LOCAL:1)%
			FOR LOCAL:2, LOCAL:1, セクハラ候補数
				弱点候補_セクハラ:(LOCAL:2) = %弱点候補_セクハラ:(LOCAL:2 + 1)%
			NEXT
			セクハラ候補数 -= 1
		CASE 2 TO 3
			LOCAL:1 = RAND:うふふ候補数
			弱点コマンド枠:ARG:LOCAL = %弱点候補_うふふ:(LOCAL:1)%
			FOR LOCAL:2, LOCAL:1, うふふ候補数
				弱点候補_うふふ:(LOCAL:2) = %弱点候補_うふふ:(LOCAL:2 + 1)%
			NEXT
			うふふ候補数 -= 1
		CASEELSE
			LOCAL:1 = RAND:(セクハラ候補数 + うふふ候補数)
			IF LOCAL:1 < セクハラ候補数
				弱点コマンド枠:ARG:LOCAL = %弱点候補_セクハラ:(LOCAL:1)%
			ELSE
				弱点コマンド枠:ARG:LOCAL = %弱点候補_うふふ:(LOCAL:1 - セクハラ候補数)%
			ENDIF
	ENDSELECT
NEXT

@弱点コマンド候補判定(ARG, ARGS)
;返り値
;0=候補外
;1=弱点候補_セクハラ
;2=弱点候補_うふふ
#FUNCTION
弱点コマンドカテゴリ = 
TFLAG:コマンドタイプ受渡 = 999
CALLFORMF %ARGS%
SIF 弱点コマンドカテゴリ == ""
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "角") >= 0 && TALENT:ARG:角あり == 0
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "尻尾") >= 0 && TALENT:ARG:尻尾あり == 0
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "ちんこ") >= 0 && GETBIT(TALENT:ARG:性別, 1) == 0
	RETURNF 0
SELECTCASE TFLAG:コマンドタイプ受渡
	CASE 1 TO 3
		RETURNF 1
	CASE 100, 101
		;複数コマンド
		SIF STRFIND(TSTR:複合コマンドタイプ受け渡し, "セクハラ") >= 0
			RETURNF 1
		SIF STRFIND(TSTR:複合コマンドタイプ受け渡し, "うふふ") >= 0 || STRFIND(TSTR:複合コマンドタイプ受け渡し, "Ｖ系") >= 0 || STRFIND(TSTR:複合コマンドタイプ受け渡し,"Ａ系") >= 0 || STRFIND(TSTR:複合コマンドタイプ受け渡し, "道具系") >= 0
			RETURNF 2
	CASEELSE
		;うふふ扱い
		RETURNF 2
ENDSELECT

@敏感素質対応判定(ARG, ARGS)
#FUNCTION
;敏感素質を検出
弱点コマンドカテゴリ = 
CALLFORMF %ARGS%
;弱点コマンドカテゴリに対応する敏感素質があれば1を返す
SIF 弱点コマンドカテゴリ == ""
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "C") >= 0 && TALENT:ARG:Ｃ感度 > 0
	RETURNF 1
SIF STRFIND(弱点コマンドカテゴリ, "V") >= 0 && TALENT:ARG:Ｖ感度 > 0
	RETURNF 1
SIF STRFIND(弱点コマンドカテゴリ, "A") >= 0 && TALENT:ARG:Ａ感度 > 0
	RETURNF 1
SIF STRFIND(弱点コマンドカテゴリ, "B") >= 0 && TALENT:ARG:Ｂ感度 > 0
	RETURNF 1
SIF STRFIND(弱点コマンドカテゴリ, "S") >= 0 && TALENT:ARG:Ｓ感度 > 0
	RETURNF 1
;ここまで来た時点で該当するものがないのでオワリ
RETURNF 0

@コマンド存在チェック
#DIM コマンド総数
#DIM ループ用

コマンド総数 = ENUMFUNCBEGINSWITH("COMTYPE_")

;通常コマンド
FOR LOCAL, 0, 1000
	IF MATCH(RESULTS, @"COMTYPE_{LOCAL}")
		SETBIT 通常コマンド存在フラグ:LOCAL, 0
		;派生コマンド
		FOR LOCAL:1, 0, 20
			SIF MATCH(RESULTS, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				SETBIT 通常コマンド存在フラグ:LOCAL, LOCAL:1 + 1
		NEXT
	ENDIF
NEXT
;場所固有コマンド
FOR LOCAL, 0, 5
	FOR LOCAL:3, 0, 1
		FOR LOCAL:1, 0, 20
			FOR LOCAL:2, 0, 20
				SIF MATCH(RESULTS, @"COMTYPE_{LOCAL + 380}_{LOCAL:3}_{LOCAL:1 * 100 + LOCAL:2 + 1}")
					SETBIT 場所固有コマンド存在フラグ:LOCAL:(LOCAL:3):(LOCAL:1), LOCAL:2
			NEXT
		NEXT
	NEXT
NEXT

@イベントデータベースセット

DT_CREATE "各イベント用変数配列"
DT_COLUMN_ADD "各イベント用変数配列", "イベント名"
DT_COLUMN_ADD "各イベント用変数配列", "イベントカテゴリ"
DT_COLUMN_ADD "各イベント用変数配列", "イベント発生フラグ", 3
DT_COLUMN_ADD "各イベント用変数配列", "イベント完了フラグ", 3
DT_COLUMN_ADD "各イベント用変数配列", "フリー変数１", 3
DT_COLUMN_ADD "各イベント用変数配列", "フリー変数２", 3
DT_COLUMN_ADD "各イベント用変数配列", "フリー変数３", 3
DT_COLUMN_ADD "各イベント用変数配列", "フリー文字列１"
DT_COLUMN_ADD "各イベント用変数配列", "フリー文字列２"
DT_COLUMN_ADD "各イベント用変数配列", "フリー文字列３"
DT_COLUMN_ADD "各イベント用変数配列", "イベント再発生CT", 3
DT_COLUMN_ADD "各イベント用変数配列", "イベント再発生確率", 3
DT_COLUMN_ADD "各イベント用変数配列", "イベント消滅CT", 3
DT_COLUMN_ADD "各イベント用変数配列", "イベント消滅確率", 3
CALL イベント追加チェック


@イベント追加チェック
#DIM イベント数
#DIMS イベント名保存
VARSET LOCAL
VARSET LOCALS

FOR LOCAL, 0, DT_ROW_LENGTH("各イベント用変数配列")
	LOCALS:LOCAL = %DT_CELL_GETS("各イベント用変数配列", LOCAL, "イベント名")%
NEXT

イベント数 = ENUMFUNCBEGINSWITH("イベント関数_メインシナリオ_")

FOR LOCAL, 0, イベント数
	イベント名保存 = %SUBSTRING(RESULTS:LOCAL, 28)%
	IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
		DT_ROW_ADD "各イベント用変数配列", "イベント名", イベント名保存, "イベントカテゴリ", "メインシナリオ"
	ENDIF
NEXT

イベント数 = ENUMFUNCBEGINSWITH("イベント関数_サブイベント_")

FOR LOCAL, 0, イベント数
	イベント名保存 = %SUBSTRING(RESULTS:LOCAL, 26)%
	IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
		DT_ROW_ADD "各イベント用変数配列", "イベント名", イベント名保存, "イベントカテゴリ", "サブイベント"
	ENDIF
NEXT
イベント数 = ENUMFUNCBEGINSWITH("イベント関数_ＥＸイベント_")

FOR LOCAL, 0, イベント数
	イベント名保存 = %SUBSTRING(RESULTS:LOCAL, 26)%
	IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
		DT_ROW_ADD "各イベント用変数配列", "イベント名", イベント名保存, "イベントカテゴリ", "ＥＸイベント"
	ENDIF
NEXT
イベント数 = ENUMFUNCBEGINSWITH("イベント関数_突発イベント_")

FOR LOCAL, 0, イベント数
	イベント名保存 = %SUBSTRING(RESULTS:LOCAL, 26)%
	IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
		DT_ROW_ADD "各イベント用変数配列", "イベント名", イベント名保存, "イベントカテゴリ", "突発イベント"
	ENDIF
NEXT

@イベント削除チェック
#DIM イベント数
#DIMS イベント名保存
VARSET LOCAL

FOR LOCAL, 0, DT_ROW_LENGTH("各イベント用変数配列")
	イベント名保存 = %DT_CELL_GETS("各イベント用変数配列", LOCAL, "イベント名")%
	イベント数 = ENUMFUNCBEGINSWITH(@"イベント関数_メインシナリオ_%イベント名保存%")
	イベント数 += ENUMFUNCBEGINSWITH(@"イベント関数_サブイベント_%イベント名保存%")
	イベント数 += ENUMFUNCBEGINSWITH(@"イベント関数_ＥＸイベント_%イベント名保存%")
	イベント数 += ENUMFUNCBEGINSWITH(@"イベント関数_突発イベント_%イベント名保存%")
	IF イベント数 < 1
		DT_ROW_REMOVE "各イベント用変数配列", DT_CELL_GET("各イベント用変数配列", LOCAL, "id")
	ENDIF
NEXT



@アイテムデータベースセット
DT_CREATE "所持アイテムデータベース"
DT_ROW_ADD "所持アイテムデータベース"
DT_ROW_ADD "所持アイテムデータベース"

@指輪データベースセット
DT_CREATE "所持指輪データベース"
DT_COLUMN_ADD "所持指輪データベース", "指輪名"
DT_COLUMN_ADD "所持指輪データベース", "基礎ステータス補正"
DT_COLUMN_ADD "所持指輪データベース", "特殊ステータス補正"
DT_COLUMN_ADD "所持指輪データベース", "オプションステータス補正"
DT_COLUMN_ADD "所持指輪データベース", "オプション特殊ステータス補正"
DT_COLUMN_ADD "所持指輪データベース", "装備キャラ番号", 3
;DT_COLUMN_ADD "所持指輪データベース", "装備者キャラ番号", 1
;0番にはダミーデータ
LOCAL = DT_ROW_ADD("所持指輪データベース")

@耳飾りデータベースセット
DT_CREATE "所持耳飾りデータベース"
DT_COLUMN_ADD "所持耳飾りデータベース", "耳飾り名"
DT_COLUMN_ADD "所持耳飾りデータベース", "変更属性"
DT_COLUMN_ADD "所持耳飾りデータベース", "奥義補正"
DT_COLUMN_ADD "所持耳飾りデータベース", "奥義名補正"
DT_COLUMN_ADD "所持耳飾りデータベース", "装備キャラ番号", 3
;DT_COLUMN_ADD "所持耳飾りデータベース", "装備者キャラ番号", 1
;0番にはダミーデータ
LOCAL = DT_ROW_ADD("所持耳飾りデータベース")

@衣装データベースセット
DT_CREATE "所持衣装データベース"
DT_COLUMN_ADD "所持衣装データベース", "衣装名"
DT_COLUMN_ADD "所持衣装データベース", "改造履歴"
DT_COLUMN_ADD "所持衣装データベース", "衣装種別"
;0番にはダミーデータ
LOCAL = DT_ROW_ADD("所持衣装データベース")

@戦闘用データベースセット
FOR LOCAL, 0, 4
	DT_CREATE @"バフデータベース_{LOCAL}"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ枠"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ対象能力"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ効果量_割合", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ効果量_固定値", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ名"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続ターン", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続行動回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "消去不可フラグ", 1
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "特殊表示オプション", 1
	DT_CREATE @"デバフデータベース_{LOCAL}"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ枠"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ対象能力"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ効果量_割合", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ効果量_固定値", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ名"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続ターン", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続行動回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "消去不可フラグ", 1
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "特殊表示オプション", 1
NEXT

FOR LOCAL, 10, 20
	DT_CREATE @"バフデータベース_{LOCAL}"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ枠"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ対象能力"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ効果量_割合", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ効果量_固定値", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ名"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続ターン", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続行動回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "消去不可フラグ", 1
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "特殊表示オプション", 1
	DT_CREATE @"デバフデータベース_{LOCAL}"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ枠"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ対象能力"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ効果量_割合", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ効果量_固定値", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ名"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続ターン", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続行動回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "消去不可フラグ", 1
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "特殊表示オプション", 1
NEXT

@素材アイテムデータベースセット
DT_CREATE "所持素材データベース"
DT_COLUMN_ADD "所持素材データベース", "素材アイテム名"
DT_COLUMN_ADD "所持素材データベース", "所持素材数", 3
DT_COLUMN_ADD "所持素材データベース", "累計入手素材数", 3
DT_COLUMN_ADD "所持素材データベース", "素材カテゴリ"
DT_COLUMN_ADD "所持素材データベース", "素材ランク", 1
DT_COLUMN_ADD "所持素材データベース", "素材属性", 1
DT_COLUMN_ADD "所持素材データベース", "素材値相場", 3



@フレーバー素質初期設定
#DIM 全体設定
#DIM 残りキャラ設定

DRAWLINE
PRINTL 陰毛の濃さや乳輪の大きさなど、快楽発生量に直接関わらない素質を設定します。
PRINTL （口上の変動やコマンド発生条件には関わる可能性があります）
PRINTL 
PRINTL またこれらの設定にこだわりがない場合、［全て表示しない］を選ぶことでキャラのイメージを壊さないことが可能です。
DRAWLINE
PRINTL 
PRINT 現在の設定：
SELECTCASE 全体設定
	CASE 0
		PRINTBUTTON "[全て表示しない]", 100
		PRINTL
	CASE 1
		PRINTBUTTON "[初対面時に設定]", 100
		PRINTL
		PRINT 口上側で設定があるキャラについて：
		IF 残りキャラ設定 == 0
			PRINTBUTTON "[口上側の設定を維持]", 101
		ELSE
			PRINTBUTTON "[初対面時に設定]", 101
		ENDIF
		PRINTL
	CASE 2
		PRINTBUTTON "[初うふふ時に設定]", 100
		PRINTL
		PRINT 口上側で設定があるキャラについて：
		IF 残りキャラ設定 == 0
			PRINTBUTTON "[口上側の設定を維持]", 101
		ELSE
			PRINTBUTTON "[初うふふ時に設定]", 101
		ENDIF
		PRINTL
	CASE 3
		PRINTBUTTON "[ランダムに設定]", 100
		PRINTL
		PRINT 口上側で設定があるキャラについて：
		IF 残りキャラ設定 == 0
			PRINTBUTTON "[口上側の設定を維持]", 101
		ELSE
			PRINTBUTTON "[ランダムに設定]", 101
		ENDIF
		PRINTL
ENDSELECT

PRINTL
PRINTBUTTON "[998]口上側の設定があるキャラの一覧を見る", 998
PRINTL
PRINTBUTTON "[999]設定を終える", 999

BINPUT
SELECTCASE RESULT
	CASE 100
		DRAWLINE
		PRINTBUTTON "[全て表示しない]", 0
		PRINTL
		PRINTBUTTON "[初対面時に設定]", 1
		PRINTL
		PRINTBUTTON "[初うふふ時に設定]", 2
		PRINTL
		PRINTBUTTON "[ランダムに設定]", 3
		PRINTL
		DRAWLINE
		PRINTBUTTON "[戻る]", 999
		BINPUT
		IF RESULT == 999
			RESTART
		ENDIF
		残りキャラ設定 = 0
		全体設定 = RESULT
		RESTART
	CASE 101
		DRAWLINE
		SELECTCASE 全体設定
			CASE 1
				PRINTBUTTON "[口上側・引き継ぎキャラの設定を維持]", 0
				PRINTL
				PRINTBUTTON "[初対面時に設定]", 1
				PRINTL
			CASE 2
				PRINTBUTTON "[口上側・引き継ぎキャラの設定を維持]", 0
				PRINTL
				PRINTBUTTON "[初うふふ時に設定]", 1
				PRINTL
			CASE 3
				PRINTBUTTON "[口上側・引き継ぎキャラの設定を維持]", 0
				PRINTL
				PRINTBUTTON "[ランダムに設定]", 1
				PRINTL
		ENDSELECT
		DRAWLINE
		PRINTBUTTON "[戻る]", 999
		BINPUT
		IF RESULT == 999
			RESTART
		ENDIF
		残りキャラ設定 = RESULT
		RESTART
	CASE 998
		CALL フレーバー素質口上設定者表示
		RESTART
ENDSELECT

SELECTCASE 全体設定
	CASE 0
		PRINTL [全て表示しない]の設定でゲームを開始します。
		FOR COUNT, 1, CHARANUM
			フレーバー素質:COUNT:素質表示設定 = 0
		NEXT
		フレーバー素質設定 = 1
	CASE 1
		PRINT [初対面時に設定]、
		IF 残りキャラ設定 == 0
			PRINT 口上存在キャラ・引き継ぎキャラは[設定を維持]
		ELSE
			PRINT 口上存在キャラ・引き継ぎキャラも[初対面時に設定]
		ENDIF
		PRINTL の設定でゲームを開始します。
		FOR COUNT, 1, CHARANUM
			IF 残りキャラ設定 == 0 && フレーバー素質:COUNT:素質表示設定 == 1
				CONTINUE
			ENDIF
			フレーバー素質:COUNT:素質表示設定 = 2
		NEXT
		フレーバー素質設定 = 2
	CASE 2
		PRINT [初うふふ時に設定]、
		IF 残りキャラ設定 == 0
			PRINT 口上存在キャラ・引き継ぎキャラは[設定を維持]
		ELSE
			PRINT 口上存在キャラ・引き継ぎキャラも[初うふふ時に設定]
		ENDIF
		PRINTL の設定でゲームを開始します。
		FOR COUNT, 1, CHARANUM
			IF 残りキャラ設定 == 0 && フレーバー素質:COUNT:素質表示設定 == 1
				CONTINUE
			ENDIF
			フレーバー素質:COUNT:素質表示設定 = 3
		NEXT
		フレーバー素質設定 = 3
	CASE 3
		PRINT [ランダムに設定]、
		IF 残りキャラ設定 == 0
			PRINT 口上存在キャラ・引き継ぎキャラは[設定を維持]
		ELSE
			PRINT 口上存在キャラ・引き継ぎキャラも[ランダムに設定]
		ENDIF
		PRINTL の設定でゲームを開始します。
		FOR COUNT, 1, CHARANUM
			IF 残りキャラ設定 == 0 && フレーバー素質:COUNT:素質表示設定 == 1
				CONTINUE
			ENDIF
			フレーバー素質:COUNT:素質表示設定 = 1
			フレーバー素質:COUNT:陰毛濃さ = RAND:5 + 1
			フレーバー素質:COUNT:乳首大きさ = RAND:5 + 1
			フレーバー素質:COUNT:乳輪大きさ = RAND:5 + 1
			フレーバー素質:COUNT:性器種類 = RAND:5 + 1
			フレーバー素質:COUNT:クリ大きさ = RAND:3 + 1
			LOCAL = RAND:5
			SIF LOCAL == 0
				SETBIT フレーバー素質:COUNT:ほくろ位置, 0
			LOCAL = RAND:5
			SIF LOCAL == 0
				SETBIT フレーバー素質:COUNT:ほくろ位置, 1
			LOCAL = RAND:5
			SIF LOCAL == 0
				SETBIT フレーバー素質:COUNT:ほくろ位置, 2
			LOCAL = RAND:5
			SIF LOCAL == 0 && GETBIT(TALENT:COUNT:性別, 1)
				SETBIT フレーバー素質:COUNT:ほくろ位置, 3
		NEXT
ENDSELECT


@フレーバー素質個別設定画面(キャラ番号)
#DIM キャラ番号
#DIM フレーバー素質数値保存, 10
VARSET フレーバー素質数値保存

$描画_LOOP
DRAWLINE
PRINTL キャラクターのフレーバー素質を手動で設定します。
DRAWLINE
LOCALS = 
LOCALS += "<div rect='10px,0px,620px,600px' border='5px' bcolor='#C0C0C0'></div>"
LOCALS += "<div rect='22px,20px,588px,600px'>"

LOCALS += @"■%NAME:キャラ番号%<br>"
IF 装備ステータス補正保存:キャラ番号:属性
	LOCALS:1 = %カラーパレット_HTML(@"%属性数値文字列変換(装備ステータス補正保存:キャラ番号:属性 - 10)%属性")%
	LOCALS += @"<font color='#%LOCALS:1%'>属性：%属性数値文字列変換(装備ステータス補正保存:キャラ番号:属性 - 10)%</font>"
ELSE
	LOCALS:1 = %カラーパレット_HTML(@"%属性数値文字列変換(基礎BATTLE_STATE:キャラ番号:属性)%属性")%
	LOCALS += @"<font color='#%LOCALS:1%'>属性：%属性数値文字列変換(基礎BATTLE_STATE:キャラ番号:属性)%</font>"
ENDIF
LOCALS += @"　得意武器：%得意武器数値文字列変換(基礎BATTLE_STATE:キャラ番号:得意武器)%　"
LOCALS += @"　タイプ：%タイプ数値文字列変換(基礎BATTLE_STATE:キャラ番号:ステータスタイプ保存)%"
LOCALS += "<br><br>"
LOCALS += "□ 情報 □---------------------------------------------------------------<br>"
LOCALS += @"　種族：%GET_TALENTNAME(200,TALENT:キャラ番号:種族)%"
IF CSTR:キャラ番号:特殊種族 != ""
	LOCALS +=  @"[%CSTR:キャラ番号:特殊種族%]"
ENDIF
SIF TALENT:キャラ番号:角あり
	LOCALS += " （角あり）"
SIF TALENT:キャラ番号:尻尾あり
	LOCALS += " （尻尾）"
SIF TALENT:キャラ番号:エルーン耳
	LOCALS += " （エルーン耳）"
SIF TALENT:キャラ番号:ハーヴィン耳
	LOCALS += " （ハーヴィン耳）"
SIF TALENT:キャラ番号:発情期あり
	LOCALS += " （発情期あり）"
LOCALS += "<br>"
LOCALS += "　性別："
IF TALENT:キャラ番号:性別 == 1
	LOCALS += "女性"
	SIF TALENT:キャラ番号:処女
		LOCALS += "（処女）"
ELSEIF TALENT:キャラ番号:性別 == 2
	LOCALS += "男性"
	SIF TALENT:キャラ番号:童貞 == 0
		LOCALS += "（童貞）"
ELSEIF TALENT:キャラ番号:性別 == 3
	LOCALS += "ふたなり"
	SIF TALENT:キャラ番号:童貞 == 0
		LOCALS += "(童貞)"
	SIF TALENT:キャラ番号:処女
		LOCALS += "（処女）"
ENDIF
LOCALS += @"バストサイズ：%GET_TALENTNAME(205,TALENT:キャラ番号:バストサイズ)%"
LOCALS += "<br>"

LOCALS += @"　性知識レベル：%性知識段階表示(知識素質:キャラ番号:性知識, キャラ番号), 17, LEFT%"
LOCALS += "<br>"

IF TALENT:キャラ番号:性別 & 2
	PRINTFORM 　男性器サイズ：%GET_TALENTNAME(162,TALENT:キャラ番号:男性器サイズ)%
	SIF TALENT:キャラ番号:男性器サイズ == 0
		PRINT 平凡
	PRINTL
ENDIF
LOCALS += "<br>"
LOCALS += "□ 素質 □---------------------------------------------------------------<br>"
LOCALS:1 = 
FOR COUNT,8,160
	IF STRLENS(GET_TALENTNAME(COUNT,TALENT:キャラ番号:COUNT, 0))
		LOCALS += @"[%GET_TALENTNAME(COUNT,TALENT:キャラ番号:COUNT, 0)%]"
	ENDIF
NEXT
FOR COUNT,220,300
	IF STRLENS(GET_TALENTNAME(COUNT,TALENT:キャラ番号:COUNT, 0))
		LOCALS += @"[%GET_TALENTNAME(COUNT,TALENT:キャラ番号:COUNT, 0)%]"
	ENDIF
NEXT
FOR COUNT,1,100
	IF 知識素質:キャラ番号:COUNT
		LOCALS += @"[%ERDNAME(知識素質,COUNT)%Lv{知識素質:キャラ番号:COUNT}]"
	ENDIF
NEXT
LOCALS += "<br>"
LOCALS += "<br>"
LOCALS += "□ フレーバー素質 □-----------------------------------------------------<br>"

FOR COUNT, 1, 6
	SIF ERDNAME(フレーバー素質, COUNT) == ""
		CONTINUE
	LOCALS += @"　%ERDNAME(フレーバー素質, COUNT), 12, LEFT%："
	FOR LOCAL:1, 0, 6
		LOCALS:2 = %GET_フレーバー素質NAME(COUNT,LOCAL:1)%
		IF LOCAL:1 == 0
			LOCALS:2 = 非表示
		ENDIF
		IF COUNT == 5 && LOCAL:1 == 4
			CONTINUE
		ELSEIF LOCALS:2 == ""
			CONTINUE
		ENDIF
		IF フレーバー素質数値保存:COUNT == LOCAL:1
			LOCALS:1 = C0C0C0
		ELSE
			LOCALS:1 = 333333
		ENDIF
		LOCALS += @"<font color='#%LOCALS:1%'><button value='{COUNT * 10 + LOCAL:1}'>[%LOCALS:2%]</button></font>"
	NEXT
	LOCALS += "<br>"
NEXT
LOCALS += @"　%ERDNAME(フレーバー素質, 6), 12, LEFT%：　　　　"
FOR LOCAL:1, 0, 4
	LOCALS:2 = %GET_フレーバー素質NAME(6, POWER(2, LOCAL:1))%
	IF LOCALS:2 == ""
		CONTINUE
	ELSEIF LOCAL:1 == 3 && GETBIT(TALENT:キャラ番号:性別, 1) == 0
		CONTINUE
	ENDIF
	IF GETBIT(フレーバー素質数値保存:6,LOCAL:1)
		LOCALS:1 = C0C0C0
	ELSE
		LOCALS:1 = 333333
	ENDIF
	LOCALS += @"<font color='#%LOCALS:1%'><button value='{60 + LOCAL:1}'>[%LOCALS:2%]</button></font>"
NEXT
LOCALS += "</div>"
LOCALS += "<div rect='450px,570px,300px,50px'><button value='999'>[999] これで決定</button></div>"

HTML_PRINT LOCALS, 1
FOR COUNT, 0, 35
	PRINTL
NEXT

BINPUT
LOCAL = RESULT
SELECTCASE LOCAL
	CASE 0 TO 59
		フレーバー素質数値保存:(LOCAL / 10) = LOCAL % 10
		GOTO 描画_LOOP
	CASE 60 TO 69
		INVERTBIT フレーバー素質数値保存:(LOCAL / 10), LOCAL % 10
		GOTO 描画_LOOP
	CASE 999
		LOCAL:1 = 0
		FOR COUNT, 1, 10
			IF フレーバー素質数値保存:COUNT
				フレーバー素質:キャラ番号:COUNT = フレーバー素質数値保存:COUNT
				LOCAL:1 = 1
			ENDIF
		NEXT
		IF LOCAL:1
			フレーバー素質:キャラ番号:0 = 1
		ELSE
			フレーバー素質:キャラ番号:0 = 0
		ENDIF
ENDSELECT



@フレーバー素質口上設定者表示
#DIM 現在ページ
#DIM 表示候補, 500
#DIM 候補人数
現在ページ = 0

$最初から
;表示候補選定＆ソート処理
LOCAL:1 = 0
VARSET 表示候補
VARSET LOCALS
;フィルタ処理・絞り込み処理
FOR LOCAL, 1, CHARANUM
	SIF フレーバー素質:LOCAL:素質表示設定 != 1
		CONTINUE
	表示候補:(LOCAL:1) = LOCAL
	LOCAL:1 += 1
NEXT
候補人数 = LOCAL:1
LOCAL:1 = 1

$表示処理_LOOP
DRAWLINE
VARSET LOCAL
VARSET LOCALS
;表示処理
FOR LOCAL, 現在ページ * 30, 候補人数
	LOCALS += @"<button value = '{表示候補:LOCAL}'>[{表示候補:LOCAL,3}]%NAME:(表示候補:LOCAL),40,LEFT%</button>"
	LOCALS += "　　　　　　　　"
	LOCAL:1 += 1
	IF LOCAL:1 % 2 == 0
		HTML_PRINT LOCALS
		LOCALS = 
	ENDIF
	SIF LOCAL:1 > 29
		BREAK
NEXT
IF LOCALS != ""
	HTML_PRINT LOCALS
	LOCALS = 
ENDIF
PRINTL 
IF 現在ページ > 0
	PRINTLC  [900]前のページへ
ELSE
	PRINTLC  
ENDIF
IF 現在ページ < 候補人数 / 30
	PRINTLC  [901]次のページへ
ENDIF
PRINTL
DRAWLINE
PRINTBUTTONLC "[1000]戻る", 1000
PRINTL

$INPUT_LOOP
BINPUT
IF RESULT == 1000
	RETURN 0
ELSEIF RESULT == 900
	現在ページ = MAX(現在ページ - 1, 0)
	GOTO 表示処理_LOOP
ELSEIF RESULT == 901
	現在ページ = MIN(現在ページ + 1, 候補人数 / 30)
	GOTO 表示処理_LOOP
ENDIF
LOCAL = RESULT
$再表示
IF 候補人数 == 1
	CALL PRINT_STATE(LOCAL, 0)
ELSEIF 表示候補:0 == LOCAL
	CALL PRINT_STATE(LOCAL, 2)
ELSEIF 表示候補:(候補人数 - 1) == LOCAL
	CALL PRINT_STATE(LOCAL, 1)
ELSE
	CALL PRINT_STATE(LOCAL, 3)
ENDIF
IF RESULT == 100
	FOR LOCAL:1, 0, 候補人数
		IF 表示候補:(LOCAL:1) == LOCAL
			LOCAL = 表示候補:(LOCAL:1 - 1)
			BREAK
		ENDIF 
	NEXT
	GOTO 再表示
ELSEIF RESULT == 101
	FOR LOCAL:1, 0, 候補人数
		IF 表示候補:(LOCAL:1) == LOCAL
			LOCAL = 表示候補:(LOCAL:1 + 1)
			BREAK
		ENDIF 
	NEXT
	GOTO 再表示
ENDIF

GOTO 最初から
