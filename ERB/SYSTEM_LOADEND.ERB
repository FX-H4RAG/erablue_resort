

;-------------------------------------------------------------------------------------------
;ロードの後に実行される一連の処理
;主にキャラのCSVが前回プレイから新たに増えた時など
;-------------------------------------------------------------------------------------------

@SYSTEM_LOADEND
#DIM 追加キャラ保存, 100
#DIM 互換維持用変数, 100
#DIM 同行配列番号
#DIM L_C

#DIMS 比較用一時保存配列, 1000
#DIMS 素材名分割用, 2
#DIMS 同行キャラ文字列一時保存
#DIMS CSTR切り分け文字列格納, 2
VARSET 比較用一時保存配列
VARSET 同時モード_選択キャラ, -1

VARSET 追加キャラ保存
LOCAL:1 = 0

ダンジョン表示モード = 

;旧セーブとの互換処理（キャラの作成前に必要）
;0.038になる頃には不要なはず
CALL 人物データベースセット
CALL 履歴データベース作成

;CSVを全部読んでキャラがADDってなければADDる
FOR LOCAL, 1, キャラクタ数上限
	SIF !EXISTCSV(LOCAL)
		CONTINUE
	SIF LOCAL == 999
		CONTINUE
	SIF GETCHARA(LOCAL) >= 0
		CONTINUE
	追加キャラ保存:(LOCAL:1) = CHARANUM
	ADDCHARA LOCAL
	CALL ADD_PERSON_FROM_CHARA(追加キャラ保存:(LOCAL:1))
	LOCAL:1 += 1
NEXT

SIF LOCAL:1
	CALL コマンド存在チェック

FOR LOCAL, 0, LOCAL:1
	CALL キャラクター初期化(追加キャラ保存:LOCAL)
NEXT

;ロード時処理
FOR LOCAL, 0, CHARANUM
	TRYCALLFORM 口上側LOADENDパラメータ変更_{NO:LOCAL}
	SIF !BASE:LOCAL:身長
		CALL INIT_BODYSIZE(LOCAL)
	IF !RELATION_VAL:0:0 && FINDELEMENT(追加キャラ保存, LOCAL) < 0
		CALL INIT_RELATION(LOCAL)
	ENDIF

	;追加同行キャラチェック
	同行キャラ文字列一時保存 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "同行キャラ"))%
	VARSET LOCALS
	REPLACE 同行キャラ文字列一時保存, " ", ""
	SPLIT RESULTS, "%", LOCALS
	LOCAL:2 = RESULT - 1
	FOR LOCAL:10, 0, LOCAL:2
		VARSET CSTR切り分け文字列格納
		SPLIT LOCALS:(LOCAL:10), "_", CSTR切り分け文字列格納
		CALL SET_RELATION(LOCAL, FINDCHARA(NAME, CSTR切り分け文字列格納:0), TOINT(CSTR切り分け文字列格納:1))
	NEXT

	;固有ステータスチェック
	IF EXISTFUNCTION(@"戦闘初期ステータス設定_{NO:LOCAL}")
		;固有ステがあるのにステタイプが汎用なら修正
		IF 基礎BATTLE_STATE:LOCAL:ステータスタイプ保存 > -1
			CALLFORM 戦闘初期ステータス設定_{NO:LOCAL}(LOCAL)
			CALL レベルアップ処理(LOCAL)
			CALL 口上変数初期化
		ENDIF
	ENDIF
NEXT
SIF !RELATION_VAL:0:0
	RELATION_VAL:0:0 = 1
CALL 戦闘用データベースセット
CALL 従業員業務用マップセット
CALL 体位モードデータベースセット

ボタン化用カラーマトリクス:0:0 = 768,256,256,  0,  0
ボタン化用カラーマトリクス:1:0 = 256,768,256,  0,  0
ボタン化用カラーマトリクス:2:0 = 256,256,256,  0,  0
ボタン化用カラーマトリクス:3:0 =   0,  0,  0,256,  0
ボタン化用カラーマトリクス:4:0 =   0,  0,  0,  0,256

;初期所持服登録
LOCAL:1 = ENUMFUNCBEGINSWITH("CLOTHES_初期所持関数_")
IF LOCAL:1 > 0
	FOR LOCAL, 0, LOCAL:1
		CALLFORM %RESULTS:LOCAL%
	NEXT
ENDIF

;------------------------------------------------------------------------------------------
;旧セーブとの互換のために入れる処理
;------------------------------------------------------------------------------------------

;追加TALENT、追加CSTRのチェック
FOR LOCAL, 1, CHARANUM

	TALENT:LOCAL:無関心 = CSVTALENT(NO:LOCAL, GETNUM(TALENT, "無関心"))
	TALENT:LOCAL:情熱的 = CSVTALENT(NO:LOCAL, GETNUM(TALENT, "情熱的"))

	;ここまで0.038で消す
	;ここまで0.039で消す
NEXT

LOCAL:1 = 0
FOR LOCAL, 0, CHARANUM
	IF !CFLAG:LOCAL:人物番号
		CALL ADD_PERSON_FROM_CHARA(LOCAL)
		LOCAL:1 = 1
	ELSEIF GET_PERSON_出生順(CFLAG:LOCAL:人物番号) == -129
		CALL SET_PERSON_出生順(CFLAG:LOCAL:人物番号, 127)
		LOCAL:1 = 1
	ENDIF
NEXT
SIF LOCAL:1 == 1
	CALL ユニークキャラ親子関係セット

IF STRCOUNT(所持制服文字列, @"汎用/リゾート従業員制服_") == 0
	所持制服文字列 = 汎用/リゾート従業員制服_%所持制服文字列%
	FOR LOCAL, 0, CHARANUM
		SIF !TALENT:LOCAL:ランダムキャラ || !TALENT:LOCAL:従業員 || 現在制服:LOCAL:0 != ""
			CONTINUE
		現在制服:LOCAL:0 = リゾート従業員制服
	NEXT
ENDIF

基礎BATTLE_STATE:FINDCHARA(NO, 165):属性 = 0
基礎BATTLE_STATE:FINDCHARA(NO, 166):属性 = 2

;ここまで0.038にしたとき消す、互換を36に

IF 命のリンクフォロー == 0
	PRINTW ジータ・ルリア・グランについての命のリンク初期設定を開きます。
	CALL OPTION_命のリンク初期切り替え
	命のリンクフォロー = 1
ENDIF
IF 人物データベースGC済 == 0
	CALL 人物データベースGC
	人物データベースGC済 = 1
ENDIF
FOR LOCAL, 1, CHARANUM
	SIF NO:LOCAL != 999
		CONTINUE
	SIF DT_CELL_ISNULL("人物データベース", CFLAG:LOCAL:人物番号, "生年日", 1) == 1
		CONTINUE
	SIF DT_CELL_ISNULL("人物データベース", CFLAG:LOCAL:人物番号, "母親", 1) == 1
		CONTINUE
	CALL 子供相性設定確認(LOCAL)
NEXT

;ここまで0.039にしたとき消す、互換を37に

;------------------------------------------------------------------------------------------
;ここまで互換のための処理
;------------------------------------------------------------------------------------------


FOR LOCAL, 1, CHARANUM
	;キャラ体力再計算
	CALL 体力変動素質適用処理(LOCAL)

	SIF CFLAG:LOCAL:滞在期間 < 0
		CONTINUE
	;部屋の無いキャラがいないかチェック
	IF キャラクター部屋検索(LOCAL) == -1 && CFLAG:LOCAL:スイートルーム滞在フラグ == 0
		IF TALENT:LOCAL:従業員
			FOR LOCAL:1, 0, 従業員キャラ上限
				IF 従業員部屋割り配列:(LOCAL:1) < 1
					従業員部屋割り配列:(LOCAL:1) = LOCAL
					CFLAG:LOCAL:現在マップ種別 = 999
					CFLAG:LOCAL:現在位置 = LOCAL:1 + 1000
					RETURN 1
				ENDIF
			NEXT
		ELSE
			CALL 滞在者部屋割り配列挿入処理(LOCAL)
		ENDIF
	ENDIF

	;複数の部屋に入っちゃってないかチェック
	LOCAL:2 = 0
	IF TALENT:LOCAL:従業員
		FOR LOCAL:1, 0, 従業員キャラ上限
			IF 従業員部屋割り配列:(LOCAL:1) == LOCAL
				IF LOCAL:2
					従業員部屋割り配列:(LOCAL:1) = 0
				ELSE
					LOCAL:2 = 1
				ENDIF
			ENDIF
		NEXT
	ELSE
		FOR LOCAL:1, 0, 100
			IF 滞在者部屋割り配列:(LOCAL:1) == LOCAL
				IF LOCAL:2
					滞在者部屋割り配列:(LOCAL:1) = 0
				ELSE
					LOCAL:2 = 1
				ENDIF
			ENDIF
		NEXT
	ENDIF

	;弱点コマンドの設定がされているかどうかチェック
	IF EXISTFUNCTION(@"弱点コマンド変更_{NO:LOCAL}")
		VARSET 弱点コマンド枠:LOCAL:0
		TRYCALLFORM 弱点コマンド変更_{NO:LOCAL}
	ENDIF

	;画像フォルダが有効かチェック
	CALL 画像フォルダ有効チェック(LOCAL)
NEXT

CALL イベント追加チェック
CALL イベント削除チェック
IF TFLAG:ゲームフェイズ管理 == 0
	CALL イベント発生条件チェック
ENDIF

;新しく素材アイテムが増えてないかチェック
CALL 素材アイテム登録処理

;念のため変数リセット
CALL TRAIN_VAR_RESET
CALL TURN_RESET
CALL 最大レベル算出保存
