

;-------------------------------------------------------------------------------------------
;ロードの後に実行される一連の処理
;主にキャラのCSVが前回プレイから新たに増えた時など
;-------------------------------------------------------------------------------------------

@SYSTEM_LOADEND
#DIM 追加キャラ保存, 100
#DIM 互換維持用変数, 100
#DIMS 弱点一時保存, 50
#DIM 同行配列番号
#DIM L_C
#DIM F_NUM

#DIMS 比較用一時保存配列, 1000
#DIMS 素材名分割用, 2
#DIMS 同行キャラ文字列一時保存
#DIMS CSTR切り分け文字列格納, 2
VARSET 比較用一時保存配列
VARSET 同時モード_選択キャラ, -1

VARSET 追加キャラ保存
LOCAL:1 = 0

ダンジョン表示モード = 

;旧セーブとの互換処理（キャラの作成前に必要）
;0.038になる頃には不要なはず
CALL 人物データベースセット
CALL 履歴データベース作成

;CSVを全部読んでキャラがADDってなければADDる
FOR LOCAL, 1, キャラクタ数上限
	SIF !EXISTCSV(LOCAL)
		CONTINUE
	SIF LOCAL == 999
		CONTINUE
	SIF GETCHARA(LOCAL) >= 0
		CONTINUE
	追加キャラ保存:(LOCAL:1) = CHARANUM
	ADDCHARA LOCAL
	CALL ADD_PERSON_FROM_CHARA(追加キャラ保存:(LOCAL:1))
	LOCAL:1 += 1
NEXT

SIF LOCAL:1
	CALL コマンド存在チェック

FOR LOCAL, 0, LOCAL:1
	CALL キャラクター初期化(追加キャラ保存:LOCAL)
NEXT

;ロード時処理
FOR LOCAL, 0, CHARANUM
	TRYCALLFORM 口上側LOADENDパラメータ変更_{NO:LOCAL}
	SIF !BASE:LOCAL:身長
		CALL INIT_BODYSIZE(LOCAL)
	IF !RELATION_VAL:0:0 && FINDELEMENT(追加キャラ保存, LOCAL) < 0
		CALL INIT_RELATION(LOCAL)
	ENDIF

	;追加同行キャラチェック
	同行キャラ文字列一時保存 = %CSVCSTR(NO:LOCAL, GETNUM(CSTR, "同行キャラ"))%
	VARSET LOCALS
	REPLACE 同行キャラ文字列一時保存, " ", ""
	SPLIT RESULTS, "%", LOCALS
	LOCAL:2 = RESULT - 1
	FOR LOCAL:10, 0, LOCAL:2
		VARSET CSTR切り分け文字列格納
		SPLIT LOCALS:(LOCAL:10), "_", CSTR切り分け文字列格納
		CALL SET_RELATION(LOCAL, FINDCHARA(NAME, CSTR切り分け文字列格納:0), TOINT(CSTR切り分け文字列格納:1))
	NEXT

	;固有ステータスチェック
	IF EXISTFUNCTION(@"戦闘初期ステータス設定_{NO:LOCAL}")
		;固有ステがあるのにステタイプが汎用なら修正
		IF 基礎BATTLE_STATE:LOCAL:ステータスタイプ保存 > -1
			CALLFORM 戦闘初期ステータス設定_{NO:LOCAL}(LOCAL)
			CALL レベルアップ処理(LOCAL)
			CALL 口上変数初期化
		ENDIF
	ENDIF

	;画像フォルダが空っぽならセット
	SIF CSTR:LOCAL:画像フォルダ == ""
		CSTR:LOCAL:画像フォルダ = {NO:LOCAL}%CALLNAME:LOCAL%
	;選択先の画像フォルダが有効かどうかをチェック
	LOCALS '= "resources\\" + CSTR:LOCAL:画像フォルダ
	F_NUM = ENUMFILES(LOCALS, "顔_デフォルト.png", 0)
	IF F_NUM < 1
		;有効でない場合、有効なフォルダを探して来て入れ込む
		LOCALS '= "resources\\" + TOSTR(NO:LOCAL) + CALLNAME:LOCAL
		F_NUM = ENUMFILES(LOCALS, "顔_デフォルト.png", 1)
		IF F_NUM > 0
			CSTR:LOCAL:画像フォルダ '= SUBSTRING(RESULTS:0, 10, STRLENS(RESULTS:0)-28)
		ELSE
			;有効なフォルダが一個も無いならCSTRをデフォ値にしておく
			CSTR:LOCAL:画像フォルダ = {NO:LOCAL}%CALLNAME:LOCAL%
		ENDIF
	ENDIF
NEXT
SIF !RELATION_VAL:0:0
	RELATION_VAL:0:0 = 1
CALL 戦闘用データベースセット
CALL 従業員業務用マップセット
CALL 体位モードデータベースセット

ボタン化用カラーマトリクス:0:0 = 768,256,256,  0,  0
ボタン化用カラーマトリクス:1:0 = 256,768,256,  0,  0
ボタン化用カラーマトリクス:2:0 = 256,256,256,  0,  0
ボタン化用カラーマトリクス:3:0 =   0,  0,  0,256,  0
ボタン化用カラーマトリクス:4:0 =   0,  0,  0,  0,256

;初期所持服登録
LOCAL:1 = ENUMFUNCBEGINSWITH("CLOTHES_初期所持関数_")
IF LOCAL:1 > 0
	FOR LOCAL, 0, LOCAL:1
		CALLFORM %RESULTS:LOCAL%
	NEXT
ENDIF

;------------------------------------------------------------------------------------------
;旧セーブとの互換のために入れる処理
;------------------------------------------------------------------------------------------

;追加TALENT、追加CSTRのチェック
FOR LOCAL, 1, CHARANUM

	SIF イキやすさフォロー == 0
		TALENT:LOCAL:イキやすさ = CSVTALENT(NO:LOCAL, GETNUM(TALENT, "イキやすさ"))
	
	IF 分身関係性フォロー == 0
		;分身が関係性取得しちゃってたのでここで消す
		FOR LOCAL:1, 0, 100
			SIF RELATION_NO:LOCAL:(LOCAL:1) >= CHARANUM
				CALL DEL_RELATION(LOCAL, LOCAL:1)
		NEXT
	ENDIF

	;ここまで0.039で消す

	;異常経験を殺す
	EXP:LOCAL:53 = 0

	SIF キャラ一致チェック(LOCAL, "[十天衆]オクトー")
		TALENT:LOCAL:母乳体質 = 0
	SIF キャラ一致チェック(LOCAL, "[冥闇の剛刃]バザラガ")
		TALENT:LOCAL:母乳体質 = 0
	;ここまで0.040で消す
NEXT
イキやすさフォロー = 1
分身関係性フォロー = 1

IF 命のリンクフォロー == 0
	PRINTW ジータ・ルリア・グランについての命のリンク初期設定を開きます。
	CALL OPTION_命のリンク初期切り替え
	命のリンクフォロー = 1
ENDIF
IF 人物データベースGC済 == 0
	CALL 人物データベースGC
	人物データベースGC済 = 1
ENDIF
FOR LOCAL, 1, CHARANUM
	SIF NO:LOCAL != 999
		CONTINUE
	SIF DT_CELL_ISNULL("人物データベース", CFLAG:LOCAL:人物番号, "生年日", 1) == 1
		CONTINUE
	SIF DT_CELL_ISNULL("人物データベース", CFLAG:LOCAL:人物番号, "母親", 1) == 1
		CONTINUE
	CALL 子供相性設定確認(LOCAL)
NEXT

;ここまで0.039にしたとき消す、互換を37に
IF 従業員部屋数 > 0
	従業員フォロー = 1
ENDIF
IF 従業員フォロー == 0
	従業員部屋数 = 従業員キャラ上限
	従業員フォロー = 1
ENDIF

CALL 制服登録処理("リゾート従業員制服")
CALL 制服登録処理("バニー服")
CALL 制服登録処理("メイド服")
CALL 制服登録処理("チャイナドレス")
CALL 制服登録処理("ミニチャイナ")

CALL エロ衣装登録処理("逆バニー")
CALL エロ衣装登録処理("マイクロビキニ")
CALL エロ衣装登録処理("セクシーランジェリー")

IF ジョブ証フォロー == 0
	CALL ジョブ証データベースセット
	FOR LOCAL, 1, DT_ROW_LENGTH("所持衣装データベース")
		DT_ROW_ADD "所持ジョブ証データベース", "ジョブ証名", REPLACE(DT_CELL_GETS("所持衣装データベース", LOCAL, "衣装名"), "服", "証"), "ジョブ証種別", "通常ジョブ"
		FOR LOCAL:1, 1, CHARANUM
			IF 装備ステータス補正保存:(LOCAL:1):装備証番号 == DT_CELL_GET("所持衣装データベース", LOCAL, "id")
				装備ステータス補正保存:(LOCAL:1):装備証番号 = DT_CELL_GET("所持ジョブ証データベース", LOCAL, "id")
			ENDIF
		NEXT
	NEXT
	ジョブ証フォロー = 1
ENDIF

TALENT:(FINDCHARA(NO, 101)):死者 = 1


SIF 居住区初来訪イベントフラグ
	CALL 制服登録処理("スモック")

;ここまで0.040にしたとき消す、互換を38に

;------------------------------------------------------------------------------------------
;ここまで互換のための処理
;------------------------------------------------------------------------------------------

CALL コマンド存在チェック()

FOR LOCAL, 1, CHARANUM
	;キャラ体力再計算
	CALL 体力変動素質適用処理(LOCAL)

	;弱点コマンドの設定がされているかどうかチェック
	VARSET 弱点一時保存
	IF EXISTFUNCTION(@"弱点コマンド変更_{NO:LOCAL}")
		FOR LOCAL:1, 0, 50
			弱点一時保存:(LOCAL:1) = %弱点コマンド枠:LOCAL:(LOCAL:1)%
		NEXT
		VARSET 弱点コマンド枠:LOCAL:0
		TRYCALLFORM 弱点コマンド変更_{NO:LOCAL}
		FOR LOCAL:1, 0, 50
			IF 弱点コマンド枠:LOCAL:(LOCAL:1) == "-1"
				弱点コマンド枠:LOCAL:(LOCAL:1) = %弱点一時保存:(LOCAL:1)%
				IF 弱点コマンド枠:LOCAL:(LOCAL:1) == "-1" || 弱点コマンド枠:LOCAL:(LOCAL:1) == ""
					RESULTS = 
					CALL 弱点コマンドランダム選出(LOCAL)
					弱点コマンド枠:LOCAL:(LOCAL:1) = %RESULTS%
				ENDIF
			ENDIF
		NEXT
	ENDIF

	;画像フォルダが有効かチェック
	CALL 画像フォルダ有効チェック(LOCAL)

	SIF CFLAG:LOCAL:滞在期間 < 0
		CONTINUE
	;部屋の無いキャラがいないかチェック
	IF キャラクター部屋検索(LOCAL) == -1 && CFLAG:LOCAL:スイートルーム滞在フラグ == 0
		IF TALENT:LOCAL:従業員
			FOR LOCAL:1, 0, 従業員部屋数
				IF 従業員部屋割り配列:(LOCAL:1) < 1
					従業員部屋割り配列:(LOCAL:1) = LOCAL
					CFLAG:LOCAL:現在マップ種別 = 999
					CFLAG:LOCAL:現在位置 = LOCAL:1 + 1000
					RETURN 1
				ENDIF
			NEXT
		ELSE
			CALL 滞在者部屋割り配列挿入処理(LOCAL)
		ENDIF
	ENDIF

	;複数の部屋に入っちゃってないかチェック
	LOCAL:2 = 0
	IF TALENT:LOCAL:従業員
		FOR LOCAL:1, 0, 従業員部屋数
			IF 従業員部屋割り配列:(LOCAL:1) == LOCAL
				IF LOCAL:2
					従業員部屋割り配列:(LOCAL:1) = 0
				ELSE
					LOCAL:2 = 1
				ENDIF
			ENDIF
		NEXT
	ELSE
		FOR LOCAL:1, 0, 100
			IF 滞在者部屋割り配列:(LOCAL:1) == LOCAL
				IF LOCAL:2
					滞在者部屋割り配列:(LOCAL:1) = 0
				ELSE
					LOCAL:2 = 1
				ENDIF
			ENDIF
		NEXT
	ENDIF
NEXT

CALL イベント追加チェック
CALL イベント削除チェック
IF TFLAG:ゲームフェイズ管理 == 0
	CALL イベント発生条件チェック
ENDIF

;新しく素材アイテムが増えてないかチェック
CALL 素材アイテム登録処理

;念のため変数リセット
CALL TRAIN_VAR_RESET
CALL TURN_RESET
CALL 最大レベル算出保存

;ログボ処理
LOCAL = GETSECOND() / 3600
;日単位
LOCAL:1 = (LOCAL + 19) / 24

IF (REAL_TIME < LOCAL:1)
	REAL_TIME = LOCAL:1
	CALL ログインボーナス処理
ENDIF
