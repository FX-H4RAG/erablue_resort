@MODE_確認_プレイヤー側(判定モード名, 判定キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 判定キャラ番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = PLAYER
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 判定キャラ番号
		IF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 判定モード名
			RETURNF 配列番号
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 判定モード名)
			RETURNF 配列番号
		ELSEIF 判定モード名 == "ALL"
			RETURNF 配列番号
		ENDIF
	ENDIF
NEXT

RETURNF -1

@MODE_確認_ターゲット側(判定モード名, 判定キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 判定キャラ番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = TARGET
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 判定キャラ番号
		IF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 判定モード名
			RETURNF 配列番号
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 判定モード名)
			RETURNF 配列番号
		ELSEIF 判定モード名 == "ALL"
			RETURNF 配列番号
		ENDIF
	ENDIF
NEXT

RETURNF -1

@MODE_確認_完全一致(判定モード名, 実行キャラ番号 = -1, 対象キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 実行キャラ番号
#DIM 対象キャラ番号

IF 実行キャラ番号 == -1
	実行キャラ番号 = PLAYER
ENDIF
IF 対象キャラ番号 == -1
	対象キャラ番号 = TARGET
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		IF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 判定モード名
			RETURNF 配列番号
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 判定モード名)
			RETURNF 配列番号
		ELSEIF 判定モード名 == "ALL"
			RETURNF 配列番号
		ENDIF
	ENDIF
NEXT

RETURNF -1

@MODE_確認_部位届くかチェック(判定部位, 実行キャラ番号 = -1, 対象キャラ番号 = -1)
#DIM 配列番号
#DIM 判定部位
#DIM 実行キャラ番号
#DIM 対象キャラ番号

IF 実行キャラ番号 == -1
	実行キャラ番号 = PLAYER
ENDIF
IF 対象キャラ番号 == -1
	対象キャラ番号 = TARGET
ENDIF

;判定部位名をチェック
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		CALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(判定部位, "ターゲット", 実行キャラ番号, 対象キャラ番号)
		SIF RESULT == 2
			RETURN 0
	ENDIF
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 実行キャラ番号
		CALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(判定部位, "プレイヤー", 対象キャラ番号, 実行キャラ番号)
		SIF RESULT == 2
			RETURN 0
	ENDIF
NEXT

RETURN 1


@MODE系統確認(モード名, 系統名)
#FUNCTION
#DIMS モード名
#DIMS 系統名
モード確認結果 = 0
TRYCALLFORMF 系統リスト_%系統名%(モード名)
RETURNF モード確認結果


@SHOW_MODE()
#DIM 配列番号
#DIM 配列番号受け渡し
#DIM 表示番号
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIMS 実行モード名
#DIM ソート用番号_実行者PLAYER
#DIM ソート用番号_対象者PLAYER
#DIM ソート用番号_実行者TARGET
#DIM ソート用番号_対象者TARGET
#DIM ソート用番号_その他
#DIM ソート用配列_実行者PLAYER, 体位モード上限
#DIM ソート用配列_対象者PLAYER, 体位モード上限
#DIM ソート用配列_実行者TARGET, 体位モード上限
#DIM ソート用配列_対象者TARGET, 体位モード上限
#DIM ソート用配列_その他, 体位モード上限
#DIM CONST 表示上限 = 10

ソート用番号_実行者PLAYER = 0
ソート用番号_対象者PLAYER = 0
ソート用番号_実行者TARGET = 0
ソート用番号_対象者TARGET = 0
ソート用番号_その他 = 0
VARSET ソート用配列_実行者PLAYER, -1
VARSET ソート用配列_対象者PLAYER, -1
VARSET ソート用配列_実行者TARGET, -1
VARSET ソート用配列_対象者TARGET, -1
VARSET ソート用配列_その他, -1

;モードを振り分け
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == PLAYER
		ソート用配列_実行者PLAYER:ソート用番号_実行者PLAYER = 配列番号
		ソート用番号_実行者PLAYER += 1
	ELSEIF DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == PLAYER
		ソート用配列_対象者PLAYER:ソート用番号_対象者PLAYER = 配列番号
		ソート用番号_対象者PLAYER += 1
	ELSEIF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == TARGET
		ソート用配列_実行者TARGET:ソート用番号_実行者TARGET = 配列番号
		ソート用番号_実行者TARGET += 1
	ELSEIF DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == TARGET
		ソート用配列_対象者TARGET:ソート用番号_対象者TARGET = 配列番号
		ソート用番号_対象者TARGET += 1
	ELSEIF IS_SAME_ROOM(PLAYER, DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ"))
		ソート用配列_その他:ソート用番号_その他 = 配列番号
		ソート用番号_その他 += 1
	ENDIF
NEXT

SIF ソート用番号_実行者PLAYER + ソート用番号_対象者PLAYER + ソート用番号_実行者TARGET + ソート用番号_対象者TARGET + ソート用番号_その他 > 0
	DRAWLINE

;優先度の高いモードから順に表示上限まで表示
表示番号 = 0
ソート用番号_実行者PLAYER = 0
ソート用番号_対象者PLAYER = 0
ソート用番号_実行者TARGET = 0
ソート用番号_対象者TARGET = 0
ソート用番号_その他 = 0
FOR 配列番号, 0, 表示上限	
	配列番号受け渡し = 0
	実行キャラ番号 = 0
	対象キャラ番号 = 0
	実行モード名 = 
	IF ソート用配列_実行者PLAYER:配列番号 > -1
		実行キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_実行者PLAYER:配列番号), "実行キャラ")
		対象キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_実行者PLAYER:配列番号), "対象キャラ")
		実行モード名 = %DT_CELL_GETS("体位モードデータベース", (ソート用配列_実行者PLAYER:配列番号), "モード名")%
		配列番号受け渡し = ソート用配列_実行者PLAYER:配列番号
		ソート用番号_実行者PLAYER += 1
	ELSEIF ソート用配列_対象者PLAYER:(配列番号 - ソート用番号_実行者PLAYER) > -1
		表示番号 = 配列番号 - ソート用番号_実行者PLAYER
		実行キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_対象者PLAYER:表示番号), "実行キャラ")
		対象キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_対象者PLAYER:表示番号), "対象キャラ")
		実行モード名 = %DT_CELL_GETS("体位モードデータベース", (ソート用配列_対象者PLAYER:表示番号), "モード名")%
		配列番号受け渡し = ソート用配列_対象者PLAYER:表示番号
		ソート用番号_対象者PLAYER += 1
	ELSEIF ソート用配列_実行者TARGET:(配列番号 - ソート用番号_実行者PLAYER - ソート用番号_対象者PLAYER) > -1
		表示番号 = 配列番号 - ソート用番号_実行者PLAYER - ソート用番号_対象者PLAYER
		実行キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_実行者TARGET:表示番号), "実行キャラ")
		対象キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_実行者TARGET:表示番号), "対象キャラ")
		実行モード名 = %DT_CELL_GETS("体位モードデータベース", (ソート用配列_実行者TARGET:表示番号), "モード名")%
		配列番号受け渡し = ソート用配列_実行者TARGET:表示番号
		ソート用番号_実行者TARGET += 1
	ELSEIF ソート用配列_対象者TARGET:(配列番号 - ソート用番号_実行者PLAYER - ソート用番号_対象者PLAYER - ソート用番号_実行者TARGET) > -1
		表示番号 = 配列番号 - ソート用番号_実行者PLAYER - ソート用番号_対象者PLAYER - ソート用番号_実行者TARGET
		実行キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_対象者TARGET:表示番号), "実行キャラ")
		対象キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_対象者TARGET:表示番号), "対象キャラ")
		実行モード名 = %DT_CELL_GETS("体位モードデータベース", (ソート用配列_対象者TARGET:表示番号), "モード名")%
		配列番号受け渡し = ソート用配列_対象者TARGET:表示番号
		ソート用番号_対象者TARGET += 1
	ELSEIF ソート用配列_その他:(配列番号 - ソート用番号_実行者PLAYER - ソート用番号_対象者PLAYER - ソート用番号_実行者TARGET - ソート用番号_対象者TARGET) > -1
		表示番号 = 配列番号 - ソート用番号_実行者PLAYER - ソート用番号_対象者PLAYER - ソート用番号_実行者TARGET - ソート用番号_対象者TARGET
		実行キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_その他:表示番号), "実行キャラ")
		対象キャラ番号 = DT_CELL_GET("体位モードデータベース", (ソート用配列_その他:表示番号), "対象キャラ")
		配列番号受け渡し = ソート用配列_その他:表示番号
		実行モード名 = %DT_CELL_GETS("体位モードデータベース", (ソート用配列_その他:表示番号), "モード名")%
		ソート用番号_その他 += 1
	ENDIF
	
	SIF 実行モード名 == ""
		BREAK

	SETCOLOR カラーパレット("えっちな色")
	IF 系統リスト_アイテム系(実行モード名)
		PRINTFORM [%CALLNAME:対象キャラ番号%が%実行モード名%装着中
	ELSEIF 系統リスト_触手系(実行モード名)
		PRINTFORM [触手が%CALLNAME:対象キャラ番号%に%実行モード名%中
	ELSEIF 系統リスト_自慰系(実行モード名)
		PRINTFORM [%CALLNAME:対象キャラ番号%が%実行モード名%中
	ELSE
		PRINTFORM [%CALLNAME:実行キャラ番号%が%CALLNAME:対象キャラ番号%に%実行モード名%中
	ENDIF
	PRINT_IMG "えっちハート"
	PRINT ]
	RESETCOLOR
	IF 系統リスト_ハーヴィンオナホ系(実行モード名) == 0
		PRINTBUTTON "[✕]", @"モード中断_{配列番号受け渡し}"
	ENDIF
	CALL MODE詳細設定処理(対象キャラ番号, 実行モード名, 実行キャラ番号)
	PRINTL 
NEXT

@MODE詳細設定処理(対象キャラ番号, 体位モード, 実行キャラ番号)
#DIM 対象キャラ番号
#DIM 実行キャラ番号
#DIM 判定数値保存
#DIMS 体位モード

IF 実行キャラ番号 == PLAYER
	IF MODE系統確認(体位モード, "Ｖ挿入系")
		PRINT 　　Ｖ挿入強さ：
		PRINTBUTTON "[-]", @"MODE詳細設定処理_V挿入強さ_{対象キャラ番号}_下降"
		FOR LOCAL, 0, 6
			IF V挿入強さ:対象キャラ番号:0 >= LOCAL
				PRINTBUTTON "■", @"MODE詳細設定処理_V挿入強さ_{対象キャラ番号}_{LOCAL}"
			ELSE
				PRINTBUTTON "□", @"MODE詳細設定処理_V挿入強さ_{対象キャラ番号}_{LOCAL}"
			ENDIF
		NEXT
		PRINTBUTTON "[+]", @"MODE詳細設定処理_V挿入強さ_{対象キャラ番号}_上昇"
		PRINT 　　
		PRINT Ｖ挿入速さ：
		PRINTBUTTON "[-]", @"MODE詳細設定処理_V挿入速さ_{対象キャラ番号}_下降"
		FOR LOCAL, 0, 6
			IF V挿入速さ:対象キャラ番号:0 >= LOCAL
				PRINTBUTTON "■", @"MODE詳細設定処理_V挿入速さ_{対象キャラ番号}_{LOCAL}"
			ELSE
				PRINTBUTTON "□", @"MODE詳細設定処理_V挿入速さ_{対象キャラ番号}_{LOCAL}"
			ENDIF
		NEXT
		PRINTBUTTON "[+]", @"MODE詳細設定処理_V挿入速さ_{対象キャラ番号}_上昇"
	ENDIF
	IF MODE系統確認(体位モード, "Ａ挿入系")
		PRINT 　　Ａ挿入強さ：
		PRINTBUTTON "[-]", @"MODE詳細設定処理_A挿入強さ_{対象キャラ番号}_下降"
		FOR LOCAL, 0, 6
			IF A挿入強さ:対象キャラ番号:0 >= LOCAL
				PRINTBUTTON "■", @"MODE詳細設定処理_A挿入強さ_{対象キャラ番号}_{LOCAL}"
			ELSE
				PRINTBUTTON "□", @"MODE詳細設定処理_A挿入強さ_{対象キャラ番号}_{LOCAL}"
			ENDIF
		NEXT
		PRINTBUTTON "[+]", @"MODE詳細設定処理_A挿入強さ_{対象キャラ番号}_上昇"
		PRINT 　　
		PRINT Ａ挿入速さ：
		PRINTBUTTON "[-]", @"MODE詳細設定処理_A挿入速さ_{対象キャラ番号}_下降"
		FOR LOCAL, 0, 6
			IF A挿入速さ:対象キャラ番号:0 >= LOCAL
				PRINTBUTTON "■", @"MODE詳細設定処理_A挿入速さ_{対象キャラ番号}_{LOCAL}"
			ELSE
				PRINTBUTTON "□", @"MODE詳細設定処理_A挿入速さ_{対象キャラ番号}_{LOCAL}"
			ENDIF
		NEXT
		PRINTBUTTON "[+]", @"MODE詳細設定処理_A挿入速さ_{対象キャラ番号}_上昇"
	ENDIF
ELSE
	IF MODE系統確認(体位モード, "Ｖ挿入系")
		PRINT 　　Ｖ挿入強さ：   
		FOR LOCAL, 0, 6
			IF V挿入強さ:対象キャラ番号:0 >= LOCAL
				PRINT ■
			ELSE
				PRINT □
			ENDIF
		NEXT
		PRINT 　   　
		PRINT Ｖ挿入速さ：   
		FOR LOCAL, 0, 6
			IF V挿入速さ:対象キャラ番号:0 >= LOCAL
				PRINT ■
			ELSE
				PRINT □
			ENDIF
		NEXT
	ENDIF
	IF MODE系統確認(体位モード, "Ａ挿入系")
		PRINT 　　Ａ挿入強さ：   
		FOR LOCAL, 0, 6
			IF A挿入強さ:対象キャラ番号:0 >= LOCAL
				PRINT ■
			ELSE
				PRINT □
			ENDIF
		NEXT
		PRINT 　   　
		PRINT Ａ挿入速さ：   
		FOR LOCAL, 0, 6
			IF A挿入速さ:対象キャラ番号:0 >= LOCAL
				PRINT ■
			ELSE
				PRINT □
			ENDIF
		NEXT
	ENDIF
ENDIF
IF 実行キャラ番号 == PLAYER || 対象キャラ番号 == PLAYER
	IF 系統リスト_アイテム系(体位モード) && 体位モード != "アナルビーズ" && 体位モード != "ペニスバンド"
		PRINTFORM 　　%体位モード%強さ：
		PRINTBUTTON "[-]", @"MODE詳細設定処理_%体位モード%強さ_{対象キャラ番号}_下降"
		判定数値保存 = GETVAR(@"%体位モード%強さ:{対象キャラ番号}:0")
		FOR LOCAL, 0, 6
			IF 判定数値保存 >= LOCAL
				PRINTBUTTON "■", @"MODE詳細設定処理_%体位モード%強さ_{対象キャラ番号}_{LOCAL}"
			ELSE
				PRINTBUTTON "□", @"MODE詳細設定処理_%体位モード%強さ_{対象キャラ番号}_{LOCAL}"
			ENDIF
		NEXT
		PRINTBUTTON "[+]", @"MODE詳細設定処理_%体位モード%強さ_{対象キャラ番号}_上昇"
	ENDIF
ELSE
	IF 系統リスト_アイテム系(体位モード) && 体位モード != "アナルビーズ" && 体位モード != "ペニスバンド"
		PRINTFORM 　　%体位モード%強さ：   
		判定数値保存 = GETVAR(@"%体位モード%強さ:{対象キャラ番号}:0")
		FOR LOCAL, 0, 6
			IF 判定数値保存 >= LOCAL
				PRINT ■
			ELSE
				PRINT □
			ENDIF
		NEXT
	ENDIF
ENDIF

@MODE_CHECK
;モードが持続している間、特定の快楽が発生し続ける
;すべてのモードをチェック
#DIM 配列番号

FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	TRYCALLFORM MODE_持続快楽_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ"), DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ"))
NEXT

RETURN 1

@MODE_DELETE_配列詰め(削除番号)
#DIM 削除番号

DT_ROW_REMOVE "体位モードデータベース", DT_CELL_GET("体位モードデータベース", 削除番号, "id")
CALL 部位専有再計算()


@MODE_DELETE_プレイヤー側(削除モード名, 判定キャラ番号 = -1)
#DIM 判定キャラ番号
#DIMS 削除モード名
#DIM 配列番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = PLAYER
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK
	;アイテム系はプレイヤー側の値は関係ないのでスルー
	SIF 系統リスト_アイテム系(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"))
		CONTINUE
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 判定キャラ番号
		IF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 削除モード名
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 削除モード名)
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ENDIF
	ENDIF
NEXT

@MODE_DELETE_ターゲット側(削除モード名, 判定キャラ番号 = -1)
#DIM 判定キャラ番号
#DIMS 削除モード名
#DIM 配列番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = TARGET
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 判定キャラ番号
		IF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 削除モード名
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 削除モード名)
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ENDIF
	ENDIF
NEXT

@特定キャラモードリセット(対象キャラ番号)
#DIM 対象キャラ番号
#DIM 配列番号

SIF 対象キャラ番号 < 0
	RETURN -1

FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		CALL MODE_DELETE_配列詰め(配列番号)
		配列番号 -= 1
	ENDIF
NEXT

@MODE_CHANGE(実行モード名, 実行キャラ番号, 対象キャラ番号, フリー変数 = 0, フリー文字列 = "")
#DIM 対象キャラ番号
#DIM 実行キャラ番号
#DIMS 実行モード名
#DIM フリー変数
#DIMS フリー文字列
#DIM 配列番号
#DIM 例外配列
#DIM 消去フラグ
#DIM スキップフラグ
;ARGS=実行しようとしているモード名

LOCALS =

IF 実行モード名 != ""
	IF !初体験日:実行キャラ番号:実行モード名
		初体験日:実行キャラ番号:実行モード名 = DAY
		CALL 履歴データベース登録(CFLAG:実行キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初めて%CALLNAME:対象キャラ番号%に[%実行モード名%]をした</font>","うふふ")
		SIF GROUPMATCH(実行モード名, "キス", "ディープキス", "シックスナイン")
			初体験日:実行キャラ番号:(GETNUM(初体験日, 実行モード名) + 100) = DAY
	ENDIF
	IF !初体験日:対象キャラ番号:(GETNUM(初体験日, 実行モード名) + 100)
		初体験日:対象キャラ番号:(GETNUM(初体験日, 実行モード名) + 100) = DAY
		IF GROUPMATCH(実行モード名, "キス", "ディープキス", "シックスナイン")
			初体験日:対象キャラ番号:実行モード名 = DAY
			CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初めて%CALLNAME:実行キャラ番号%に[%実行モード名%]をした</font>","うふふ")
		ELSEIF 系統リスト_自慰系(実行モード名)
			CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初めてえっち中に[%実行モード名%]をした</font>","うふふ")
		ELSE
			CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初めて%CALLNAME:実行キャラ番号%から[%実行モード名%]をされた</font>","うふふ")
		ENDIF
	ENDIF
ENDIF
SIF LOCALS != ""
	実行モード名 = %LOCALS%

;現在のモードとの比較・消去
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")	
	消去フラグ = 0
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK
	
	SIF MATCH(体位モード例外配列, DT_CELL_GET("体位モードデータベース", 配列番号, "id"))
		CONTINUE

	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 実行キャラ番号
		CALL MODE_競合判定_プレイヤー(実行モード名, 配列番号, 実行キャラ番号, 対象キャラ番号)
		消去フラグ += RESULT
	ENDIF
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		CALL MODE_競合判定_ターゲット(実行モード名, 配列番号, 実行キャラ番号, 対象キャラ番号)
		消去フラグ += RESULT
	ENDIF
	;競合するならモード消去
	IF 消去フラグ
		CALL MODE_DELETE_配列詰め(配列番号)
		配列番号 -= 1
	ENDIF
NEXT

;モード格納
DT_ROW_ADD "体位モードデータベース", "モード名", 実行モード名, "実行キャラ", 実行キャラ番号, "対象キャラ", 対象キャラ番号, "フリー変数", フリー変数, "フリー文字列", フリー文字列
IF FLAG:モード管理 == 2
	FOR 例外配列, 0, 体位モード上限
		;同時モード中は同タイミングで入れたモードは競合判定を見ない
		IF 体位モード例外配列:例外配列 == 0
			体位モード例外配列:例外配列 = DT_CELL_GET("体位モードデータベース", DT_ROW_LENGTH("体位モードデータベース") - 1, "id")
			BREAK
		ENDIF
	NEXT
ENDIF
CALL 部位専有再計算()


@部位専有再計算
#DIM 対象キャラ番号
#DIM 実行キャラ番号
#DIM 配列番号

;現在あるモードを参照して部位専有を入れ直す
;助手も全員リセット
FOR LOCAL, 0, 7
	TEQUIP:MASTER:(101 + LOCAL) = 0
	FOR 配列番号, 0, CHARANUM
		SIF TARGET:配列番号 < 1
			BREAK
		TEQUIP:(TARGET:配列番号):(101 + LOCAL) = 0
	NEXT
NEXT

FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	FOR LOCAL:1, 0, 7
		実行キャラ番号 = DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ")
		対象キャラ番号 = DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ")
		RESULT = 0
		;部位専有が１の場合突っ込む
		TRYCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(LOCAL:1, "プレイヤー", 実行キャラ番号, 対象キャラ番号)
		SIF RESULT == 1
			TEQUIP:実行キャラ番号:(101 + LOCAL:1) = 1
		RESULT = 0
		TRYCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(LOCAL:1, "ターゲット", 実行キャラ番号, 対象キャラ番号)
		SIF RESULT == 1
			TEQUIP:対象キャラ番号:(101 + LOCAL:1) = 1
	NEXT
NEXT


@MODE_競合判定_プレイヤー(判定モード名, 判定配列番号, 実行キャラ番号, 対象キャラ番号)
#DIMS 判定モード名
#DIM 判定配列番号
#DIM 部位番号
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 判定側_プレイヤー部位状況
#DIM 存在側_部位状況

;各モードがどの部位を専有しているかを持ってくる
FOR 部位番号, 0, 7
	判定側_プレイヤー部位状況 = 0
	存在側_部位状況 = 0

	TRYCCALLFORM MODETYPE_%判定モード名%(部位番号, "プレイヤー")
		判定側_プレイヤー部位状況 = RESULT
	CATCH
		判定側_プレイヤー部位状況 = 0
	ENDCATCH
	IF DT_CELL_GET("体位モードデータベース", 判定配列番号, "実行キャラ") == 実行キャラ番号
		TRYCCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名")%(部位番号, "プレイヤー")
			存在側_部位状況 = RESULT
		CATCH
			存在側_部位状況 = 0
		ENDCATCH
	ELSEIF DT_CELL_GET("体位モードデータベース", 判定配列番号, "対象キャラ") == 実行キャラ番号
		TRYCCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名")%(部位番号, "ターゲット")
			存在側_部位状況 = RESULT
		CATCH
			存在側_部位状況 = 0
		ENDCATCH
	ENDIF

	;競合比較
	IF 判定側_プレイヤー部位状況 == 1 && 存在側_部位状況 == 1
		;競合する
		RETURN 1
	ENDIF
	IF 判定側_プレイヤー部位状況 && 存在側_部位状況
		;実行対象の組み合わせが一致するなら競合する
		IF GROUPMATCH(対象キャラ番号, DT_CELL_GET("体位モードデータベース", 判定配列番号, "実行キャラ"), DT_CELL_GET("体位モードデータベース", 判定配列番号, "対象キャラ"))
			;例外処理
			IF MODE_競合除外(判定モード名, DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名"))
				RETURN 0
			ELSE
				RETURN 2
			ENDIF
		ENDIF
	ENDIF
NEXT

RETURN 0

@MODE_競合判定_ターゲット(判定モード名, 判定配列番号, 実行キャラ番号, 対象キャラ番号)
#DIMS 判定モード名
#DIM 判定配列番号
#DIM 部位番号
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 判定側_ターゲット部位状況
#DIM 存在側_部位状況

;各モードがどの部位を専有しているかを持ってくる
FOR 部位番号, 0, 7
	判定側_ターゲット部位状況 = 0
	存在側_部位状況 = 0

	TRYCCALLFORM MODETYPE_%判定モード名%(部位番号, "ターゲット")
		判定側_ターゲット部位状況 = RESULT
	CATCH
		判定側_ターゲット部位状況 = 0
	ENDCATCH
	IF DT_CELL_GET("体位モードデータベース", 判定配列番号, "実行キャラ") == 対象キャラ番号
		TRYCCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名")%(部位番号, "プレイヤー")
			存在側_部位状況 = RESULT
		CATCH
			存在側_部位状況 = 0
		ENDCATCH
	ELSEIF DT_CELL_GET("体位モードデータベース", 判定配列番号, "対象キャラ") == 対象キャラ番号
		TRYCCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名")%(部位番号, "ターゲット")
			存在側_部位状況 = RESULT
		CATCH
			存在側_部位状況 = 0
		ENDCATCH
	ENDIF

	;競合比較
	IF 判定側_ターゲット部位状況 == 1 && 存在側_部位状況 == 1
		;競合する
		RETURN 1
	ENDIF
	IF 判定側_ターゲット部位状況 && 存在側_部位状況
		;実行対象の組み合わせが一致するなら競合する
		IF GROUPMATCH(実行キャラ番号, DT_CELL_GET("体位モードデータベース", 判定配列番号, "実行キャラ"), DT_CELL_GET("体位モードデータベース", 判定配列番号, "対象キャラ"))
			IF MODE_競合除外(判定モード名, DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名"))
				RETURN 0
			ELSE
				RETURN 2
			ENDIF
		ENDIF
	ENDIF
NEXT

RETURN 0

@MODE_競合判定_3P用(ARGS, ARGS:1)
#DIM 部位専有配列PLAYER１
#DIM 部位専有配列PLAYER２
#DIM 部位専有配列TARGET１
#DIM 部位専有配列TARGET２

;各モードがどの部位を専有しているかを持ってくる
;3P用のため、TARGET分は無し
FOR LOCAL, 0, 7
	部位専有配列PLAYER１ = 0
	部位専有配列PLAYER２ = 0

	TRYCCALLFORM MODETYPE_%ARGS%(LOCAL, "プレイヤー")
		部位専有配列PLAYER１ = RESULT
	CATCH
		部位専有配列PLAYER１ = 0
	ENDCATCH
	TRYCCALLFORM MODETYPE_%ARGS:1%(LOCAL, "プレイヤー")
		部位専有配列PLAYER２ = RESULT
	CATCH
		部位専有配列PLAYER２ = 0
	ENDCATCH

	;競合比較
	SIF 部位専有配列PLAYER１ == 1 && 部位専有配列PLAYER２ == 1
		RETURN 1
NEXT

RETURN 0

@MODE_競合除外(判定モード, 競合モード)
#FUNCTION
#DIMS 判定モード
#DIMS 競合モード
;ARGS：実行しようとしているモード名
;競合から除外する体位の組み合わせなら1を返す

;フェラorパイズリorパイズリフェラ同士なら除外
SIF GROUPMATCH(判定モード, "フェラチオ", "パイズリ", "パイズリフェラ") && GROUPMATCH(競合モード, "フェラチオ", "パイズリ", "パイズリフェラ")
	RETURNF 1
;触手系は「届かない」の場合を無視する
SIF 系統リスト_触手系(判定モード) || 系統リスト_触手系(競合モード)
	RETURNF 1
;アイテム系は「届かない」の場合を無視する
SIF 系統リスト_アイテム系(判定モード) || 系統リスト_アイテム系(競合モード)
	RETURNF 1


@移動時モード消去(移動キャラ)
#DIM キャラ番号
#DIM 移動キャラ
#DIM 配列番号
#DIM 体位番号
;同室にいる、相手が必要なモードを全部消す

FOR キャラ番号, 0, CHARANUM
	SIF TARGET:キャラ番号 < 1
		BREAK
	FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
		SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
			BREAK
		SIF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") != 移動キャラ && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") != 移動キャラ
			CONTINUE
		SIF 系統リスト_アイテム系(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"))
			CONTINUE
		SIF 系統リスト_触手系(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"))
			CONTINUE
		SIF 系統リスト_ハーヴィンオナホ系(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"))
			CONTINUE
		CALL MODE_DELETE_配列詰め(配列番号)
		配列番号 -= 1
	NEXT
NEXT
