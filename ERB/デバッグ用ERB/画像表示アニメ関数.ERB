
@画像表示アニメ(アニメパターン, ファイルパス = "", 画像位置タイプ = "", 補正X = 0, 補正Y = 0)
#DIM CONST レイヤー番号 = 50
#DIMS アニメパターン
#DIMS ファイルパス
#DIMS 画像位置タイプ
#DIM 補正X
#DIM 補正Y
#DIM 画像位置,2

IF ファイルパス == ""
    GOTO 削除処理
ENDIF

GDISPOSE レイヤー番号 + 10 
SIF !GCREATEFROMFILE(レイヤー番号 + 10 , ファイルパス)
    RETURN

SELECTCASE 画像位置タイプ
    CASE "ダンジョン"
        画像位置 = 22, 248
    CASE "バトル"
        画像位置 = 22, 228
        CALL 画面再描画
    CASEELSE
        画像位置 = 20, 220
ENDSELECT
画像位置:0 += 補正X
画像位置:1 += 補正Y


SELECTCASE アニメパターン
    CASE "フラッシュ"
        GOTO フラッシュ
ENDSELECT

LOCAL:1 = 0
LOCAL:2 = 0
LOCAL:3 = 0

LOCAL:1 -= STRCOUNT(アニメパターン, "左")
LOCAL:1 += STRCOUNT(アニメパターン, "右")
LOCAL:2 -= STRCOUNT(アニメパターン, "上")
LOCAL:2 += STRCOUNT(アニメパターン, "下")
LOCAL:3 += STRCOUNT(アニメパターン, "ズームイン")
LOCAL:3 -= STRCOUNT(アニメパターン, "ズームアウト")
;パラメタ調整用
LOCAL:5 = 40 ;最大移動幅
LOCAL:6 = 40 ;最大透明度
LOCAL:7 = 40 ;最大拡大PX
LOCAL:11 = 5 ;総フレーム数
LOCAL:15 = LOCAL:5 / LOCAL:11 ;移動幅毎フレーム
LOCAL:17 = LOCAL:7 / LOCAL:11 * 2 ;拡大PX毎フレーム


FOR LOCAL, 1, LOCAL:11 + 1
    CBGREMOVERANGE -1, -1
    GDISPOSE レイヤー番号 + 1 
    GCREATE レイヤー番号 + 1 , 1600, 900
    CALL カットイン用カラーマトリクス取得(LOCAL:6 - LOCAL * (LOCAL:6 / LOCAL:11))
    {
    GDRAWG レイヤー番号 + 1 , レイヤー番号 + 10 , 
    画像位置:0 + LOCAL:1 * (LOCAL:5 - LOCAL:15 * LOCAL) + (LOCAL:11 - LOCAL) * LOCAL:3 * LOCAL:17 / 2, 
    画像位置:1 + LOCAL:2 * (LOCAL:5 - LOCAL:15 * LOCAL) + (LOCAL:11 - LOCAL) * LOCAL:3 * LOCAL:17 / 2, 
    GWIDTH(レイヤー番号 + 10 ) - (LOCAL:11 - LOCAL) * (LOCAL:3 * LOCAL:17), 
    GHEIGHT(レイヤー番号 + 10 ) - (LOCAL:11 - LOCAL) * (LOCAL:3 * LOCAL:17), 
    0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), カットイン用カラーマトリクス:0:0
    }
    CBGSETG レイヤー番号 + 1 , 0, 0, -1
    AWAIT 20
NEXT

GDISPOSE レイヤー番号 + 0 
GCREATE レイヤー番号 + 0 , 1600, 900
GDRAWG レイヤー番号 + 0 , レイヤー番号 + 10 , 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), 0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )

RETURN

$フラッシュ

LOCAL:1 = 0
LOCAL:2 = 0
LOCAL:3 = 0

;パラメタ調整用
LOCAL:5 = 40 ;最大移動幅
LOCAL:6 = 40 ;最大透明度
LOCAL:7 = 40 ;最大拡大PX
LOCAL:11 = 10 ;総フレーム数
LOCAL:15 = LOCAL:5 / LOCAL:11 ;移動幅毎フレーム
LOCAL:17 = LOCAL:7 / LOCAL:11 * 2 ;拡大PX毎フレーム

FOR LOCAL, 0, 5
    CBGREMOVERANGE -2, -2
    GDISPOSE レイヤー番号 + 2
    GCREATE レイヤー番号 + 2, 1600, 900
    GSETBRUSH レイヤー番号 + 2, 0xAFF0F0F0 + 0x10000000 * LOCAL
    GFILLRECTANGLE レイヤー番号 + 2, 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )
    CBGSETG レイヤー番号 + 2, 0, 0, -2
    AWAIT 10
NEXT

GDISPOSE レイヤー番号 + 1 
GCREATE レイヤー番号 + 1 , 1600, 900
GDRAWG レイヤー番号 + 1 , レイヤー番号 + 10 , 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), 0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )
CBGSETG レイヤー番号 + 1 , 0, 0, -1

FOR LOCAL, 0, 8
CBGREMOVERANGE -2, -2
    GDISPOSE レイヤー番号 + 2
    GCREATE レイヤー番号 + 2, 1600, 900
    GSETBRUSH レイヤー番号 + 2, 0xFFF0F0F0 - 0x20000000 * LOCAL
    GFILLRECTANGLE レイヤー番号 + 2, 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )
    CBGSETG レイヤー番号 + 2, 0, 0, -2
    AWAIT 50
NEXT
CBGREMOVERANGE -2, -2

GDISPOSE レイヤー番号 + 0 
GCREATE レイヤー番号 + 0 , 1600, 900
GDRAWG レイヤー番号 + 0 , レイヤー番号 + 10 , 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), 0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )

RETURN

$削除処理

CALL 画面再描画

SELECTCASE アニメパターン
    CASE "フェードアウト"
        GOTO フェードアウト
    CASE "ホワイトアウト"
        GOTO ホワイトアウト
ENDSELECT

LOCAL:1 = 0
LOCAL:2 = 0
LOCAL:3 = 0

LOCAL:1 -= STRCOUNT(アニメパターン, "左")
LOCAL:1 += STRCOUNT(アニメパターン, "右")
LOCAL:2 -= STRCOUNT(アニメパターン, "上")
LOCAL:2 += STRCOUNT(アニメパターン, "下")
LOCAL:3 += STRCOUNT(アニメパターン, "ズームイン")
LOCAL:3 -= STRCOUNT(アニメパターン, "ズームアウト")

;パラメタ調整用
LOCAL:5 = 40 ;最大移動幅
LOCAL:6 = 40 ;最大透明度
LOCAL:7 = 40 ;最大拡大PX
LOCAL:11 = 10 ;総フレーム数
LOCAL:15 = LOCAL:5 / LOCAL:11 ;移動幅毎フレーム
LOCAL:17 = LOCAL:7 / LOCAL:11 * 2 ;拡大PX毎フレーム

FOR LOCAL, 1, LOCAL:11 + 1
    CBGREMOVERANGE -1, -1
    GDISPOSE レイヤー番号 + 1 
    GCREATE レイヤー番号 + 1 , 1600, 900
    CALL カットイン用カラーマトリクス取得(LOCAL * 10)
    {
    GDRAWG レイヤー番号 + 1 , レイヤー番号 + 10 , 
    画像位置:0 + LOCAL:1 * (LOCAL:15 * LOCAL) + (LOCAL) * LOCAL:3 * LOCAL:17 / 2, 
    画像位置:1 + LOCAL:2 * (LOCAL:15 * LOCAL) + (LOCAL) * LOCAL:3 * LOCAL:17 / 2, 
    GWIDTH(レイヤー番号 + 10 ) - (LOCAL) * (LOCAL:3 * LOCAL:17), 
    GHEIGHT(レイヤー番号 + 10 ) - (LOCAL) * (LOCAL:3 * LOCAL:17), 
    0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), カットイン用カラーマトリクス:0:0
    }
    CBGSETG レイヤー番号 + 1 , 0, 0, -1
    AWAIT 10
NEXT

CBGREMOVERANGE -1, -1
GDISPOSE レイヤー番号 + 0 
GDISPOSE レイヤー番号 + 1 
GDISPOSE レイヤー番号 + 2 
GDISPOSE レイヤー番号 + 10 

RETURN

$フェードアウト

FOR LOCAL, 0, 10
    CBGREMOVERANGE -1, -1
    GDISPOSE レイヤー番号 + 1
    GCREATE レイヤー番号 + 1 , 1600, 900
    CALL カットイン用カラーマトリクス取得(LOCAL * 10)
    GDRAWG レイヤー番号 + 1 , レイヤー番号 + 0 , 0, 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
    CBGSETG レイヤー番号 + 1 , 0, 0, -1
    AWAIT 10
NEXT

CBGREMOVERANGE -1, -1
GDISPOSE レイヤー番号 + 0 
GDISPOSE レイヤー番号 + 1 
GDISPOSE レイヤー番号 + 2 
GDISPOSE レイヤー番号 + 10 

RETURN

$ホワイトアウト

FOR LOCAL, 0, 8
    CBGREMOVERANGE -2, -2
    GDISPOSE レイヤー番号 + 2
    GCREATE レイヤー番号 + 2, 1600, 900
    GSETBRUSH レイヤー番号 + 2, 0x1FF0F0F0 + 0x20000000 * LOCAL
    GFILLRECTANGLE レイヤー番号 + 2, 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )
    CBGSETG レイヤー番号 + 2, 0, 0, -2
    AWAIT 50
NEXT
CBGREMOVERANGE -2, -2

FOR LOCAL, 0, 10
    CBGREMOVERANGE -1, -1
    GDISPOSE レイヤー番号 + 1
    GCREATE レイヤー番号 + 1 , 1600, 900
    CALL カットイン用カラーマトリクス取得(LOCAL * 10)
    GDRAWG レイヤー番号 + 1 , レイヤー番号 + 2 , 0, 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
    CBGSETG レイヤー番号 + 1 , 0, 0, -1
    AWAIT 10
NEXT

CBGREMOVERANGE -1, -1

GDISPOSE レイヤー番号 + 0 
GDISPOSE レイヤー番号 + 1 
GDISPOSE レイヤー番号 + 2 
GDISPOSE レイヤー番号 + 10 

RETURN
