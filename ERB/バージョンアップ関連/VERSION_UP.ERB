;変数の書き換えなどを伴なうバージョンアップ用
@VERSION_UP

@バージョンアップ準備処理
#DIM NEW_VERSION
#DIM NEW_ALLOWVERSION
#DIM VERCOUNT

PRINTL erablue_resort バージョンアップアシスタントです(開発者用)
PRINTL バージョンアップの準備を行いますか？
PRINTBUTTONLC "[0]はい", 0
PRINTBUTTONLC "[1]いいえ", 1

BINPUT
SIF RESULT == 1
	RETURN

NEW_VERSION = GAMEBASE_VERSION + 1
NEW_ALLOWVERSION = MAX(GAMEBASE_ALLOWVERSION, NEW_VERSION - 2)

CALL VERUP用ファイル生成(NEW_VERSION)

PRINTFORML ./CSV/GameBase.csv の"バージョン,{GAMEBASE_VERSION}"を"バージョン,{NEW_VERSION}"に
PRINTFORML "バージョン違い認める,{GAMEBASE_ALLOWVERSION}"を"バージョン違い認める,{NEW_ALLOWVERSION}"に書き換えてください
PRINTL 
PRINTFORML ./ERB_EDITFILE/VERUP_{NEW_VERSION}.ERB を ./ERB/バージョンアップ関連/ に置き、代わりに以下を削除してください：
FOR VERCOUNT, GAMEBASE_ALLOWVERSION, NEW_ALLOWVERSION
	PRINTFORML ./ERB/バージョンアップ関連/VERUP_{VERCOUNT}.ERB
NEXT
PRINTL 
PRINTL 内部で使用されているフォロー変数の定義も適宜削除してください
WAIT

CLEARLINE LINECOUNT
RETURN 0

@VERUP用ファイル生成(バージョン)
#DIM バージョン

REDRAW 0
CLEARLINE LINECOUNT

PRINTFORML ;Ver%TOSTR(バージョン, "0,.000")%と旧バージョンとの互換のための処理
PRINTFORML ;Ver%TOSTR(バージョン+3, "0,.000")%にしたとき消す、互換を{バージョン+1}に
PRINTL 
PRINTL ;追加TALENT、追加CSTRのチェック
PRINTFORML @VERUP_{バージョン}_CHARA(ARG)
PRINTL 
PRINTL ;その他広域変数の書き換えなど
PRINTFORML @VERUP_{バージョン}()
PRINTL 
PRINTL ; IF なんらかフォロー == 0
PRINTL ; 	;なんらかのフォロー処理
PRINTL ; 	;ここで"なんらかフォロー = 1"しない
PRINTL ; ENDIF
PRINTL 
PRINTL ;対応処理用フラグを対応済状態にセット
PRINTFORML @VERUP_{バージョン}_FINISH()
PRINTL ; なんらかフォロー = 1
PRINTL 

OUTPUTLOG @"ERB_EDITFILE/VERUP_{バージョン}.ERB", 1
CLEARLINE LINECOUNT
REDRAW 1
