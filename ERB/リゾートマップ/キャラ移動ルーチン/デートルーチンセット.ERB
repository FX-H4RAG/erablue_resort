
; @デートルーチンセット決定()
; #DIM DB番号
; #DIM デートキャラ１
; #DIM デートキャラ２
; #DIMS CONST デート置き換えルーチン = "プールで遊ぶ", "外で遊ぶ", "遊戯室で遊ぶ", "学校で勉強", "居住区エリアで日常生活", "あなた自宅で日常生活"


; ;まずは成立してる関係性から
; FOR DB番号, 0, DT_ROW_LENGTH("関係性データベース")
; 	;恋慕でもセフレでもないならスキップ
; 	SIF DT_CELL_GET("関係性データベース", DB番号, "関係性種別") != "恋慕" && DT_CELL_GET("関係性データベース", DB番号, "関係性種別") != "セフレ"
; 		CONTINUE
; 	;デート発生率は50％
; 	SIF RAND:2
; 		CONTINUE
; 	デートキャラ１ = FIND_CHARA_FROM_PERSON_ID(DT_CELL_GET("関係性データベース", DB番号, "対象キャラ１"))
; 	デートキャラ２ = FIND_CHARA_FROM_PERSON_ID(DT_CELL_GET("関係性データベース", DB番号, "対象キャラ２"))
; 	;既にデートセット済みならスキップ
; 	SIF CFLAG:デートキャラ１:デート
; 		CONTINUE
; 	SIF CFLAG:デートキャラ２:デート
; 		CONTINUE
; 	;汎用ルーチン以外ならスキップ
; 	SIF MATCH(デート置き換えルーチン, 移動ルーチン:デートキャラ１:ルーチンID) == 0
; 		CONTINUE
; 	SIF MATCH(デート置き換えルーチン, 移動ルーチン:デートキャラ２:ルーチンID) == 0
; 		CONTINUE
; 	;デートフラグをセット
; 	IF RAND:2
; 		CFLAG:デートキャラ１:デート = デートキャラ２
; 		CFLAG:デートキャラ２:デート = デートキャラ１ * -1
; 		;ルーチンIDを書き換えてルーチンセット
; 		移動ルーチン:デートキャラ１:ルーチンID = デート先導
; 		移動ルーチン:デートキャラ１:PMルーチンID = 
; 		移動ルーチン:デートキャラ２:ルーチンID = デート追従
; 		移動ルーチン:デートキャラ２:PMルーチンID = 
; 		CALL ROUTINE_SCHEDULE_デートルーチン(デートキャラ１, デートキャラ２)
; 	ELSE
; 		CFLAG:デートキャラ１:デート = デートキャラ２ * -1
; 		CFLAG:デートキャラ２:デート = デートキャラ１
; 		;ルーチンIDを書き換えてルーチンセット
; 		移動ルーチン:デートキャラ１:ルーチンID = デート追従
; 		移動ルーチン:デートキャラ１:PMルーチンID = 
; 		移動ルーチン:デートキャラ２:ルーチンID = デート先導
; 		移動ルーチン:デートキャラ２:PMルーチンID = 
; 		CALL ROUTINE_SCHEDULE_デートルーチン(デートキャラ２, デートキャラ１)
; 	ENDIF
; NEXT








; @ROUTINE_SCHEDULE_デートルーチン(先導キャラ, 追従キャラ)
; #DIM 先導キャラ
; #DIM 追従キャラ
; #DIM スケジュール番号_先導
; #DIM スケジュール番号_追従

; CALL RESET_SCHEDULE(先導キャラ)
; CALL RESET_SCHEDULE(追従キャラ)
; スケジュール番号_先導 = 0
; スケジュール番号_追従 = 0

; ;起床後はロビーへ
; CALL SET_SCHEDULE(先導キャラ, スケジュール番号, 0, "交流")
; CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 0, "交流")
; スケジュール番号_先導++
; スケジュール番号_追従++

; ;以下の行動は先導キャラの行動ゆらぎに合わせて行動

; 	LOCAL = 3
; 	ルーチン候補配列:0 '= "プールで遊ぶ"
; 	ルーチン候補配列:1 '= "外で遊ぶ"
; 	ルーチン候補配列:2 '= "遊戯室で遊ぶ"

; 	SELECTCASE RAND:4
; 	;9時からプール
; 	CALL SET_SCHEDULE(先導キャラ, スケジュール番号_先導, 540 + TCVAR:先導キャラ:行動時間ゆらぎ, "プールで遊ぶ", "所要時間", "120")
; 	CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 540 + TCVAR:先導キャラ:行動時間ゆらぎ, "プールで遊ぶ", "所要時間", "120")
; 	スケジュール番号_先導++
; 	スケジュール番号_追従++

; 	;12時の15分前(着替え時間)から食堂
; 	CALL SET_SCHEDULE(先導キャラ, スケジュール番号_先導, 705 + TCVAR:先導キャラ:行動時間ゆらぎ, "食事", "所要時間", "60", "優先度", "4")
; 	CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 705 + TCVAR:先導キャラ:行動時間ゆらぎ, "食事", "所要時間", "60", "優先度", "4")
; 	スケジュール番号_先導++
; 	スケジュール番号_追従++

; 	;13時半からプール
; 	CALL SET_SCHEDULE(先導キャラ, スケジュール番号_先導, 810 + TCVAR:先導キャラ:行動時間ゆらぎ, "プールで遊ぶ", "所要時間", "180")
; 	CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 810 + TCVAR:先導キャラ:行動時間ゆらぎ, "プールで遊ぶ", "所要時間", "180")
; 	スケジュール番号_先導++
; 	スケジュール番号_追従++

; 	;18時の15分前(着替え時間)から食堂
; 	CALL SET_SCHEDULE(先導キャラ, スケジュール番号_先導, 1065 + TCVAR:先導キャラ:行動時間ゆらぎ, "食事", "所要時間", "60", "優先度", "4")
; 	CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 1065 + TCVAR:先導キャラ:行動時間ゆらぎ, "食事", "所要時間", "60", "優先度", "4")
; 	スケジュール番号_先導++
; 	スケジュール番号_追従++

; 	;19時半からお風呂
; 	CALL SET_SCHEDULE(先導キャラ, スケジュール番号_先導, 1170 + TCVAR:先導キャラ:行動時間ゆらぎ, "お風呂", "所要時間", "60", "優先度", "2")
; 	CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 1170 + TCVAR:先導キャラ:行動時間ゆらぎ, "お風呂", "所要時間", "60", "優先度", "2")
; 	スケジュール番号_先導++
; 	スケジュール番号_追従++

; ;ここまで先導キャラのゆらぎに合わせて行動

; IF TALENT:先導キャラ:早寝 > 0
; 	;早寝のキャラは21時の15分前(着替え時間)から寝るまでは自室
; 	CALL SET_SCHEDULE(先導キャラ, スケジュール番号_先導, 1245 + TCVAR:先導キャラ:行動時間ゆらぎ, "休憩")
; 	スケジュール番号_先導++
; ELSE
; 	;21時からロビーへ
; 	CALL SET_SCHEDULE(先導キャラ, スケジュール番号_先導, 1260 + TCVAR:先導キャラ:行動時間ゆらぎ, "交流")
; 	スケジュール番号_先導++

; 	;21時30分から寝るまでは自室
; 	CALL SET_SCHEDULE(先導キャラ, スケジュール番号_先導, 1290 + TCVAR:先導キャラ:行動時間ゆらぎ, "休憩")
; 	スケジュール番号_先導++
; ENDIF

; IF TALENT:追従キャラ:早寝 > 0
; 	;早寝のキャラは21時の15分前(着替え時間)から寝るまでは自室
; 	CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 1245 + TCVAR:追従キャラ:行動時間ゆらぎ, "休憩")
; 	スケジュール番号_追従++
; ELSE
; 	;21時からロビーへ
; 	CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 1260 + TCVAR:追従キャラ:行動時間ゆらぎ, "交流")
; 	スケジュール番号_追従++

; 	;21時30分から寝るまでは自室
; 	CALL SET_SCHEDULE(追従キャラ, スケジュール番号, 1290 + TCVAR:追従キャラ:行動時間ゆらぎ, "休憩")
; 	スケジュール番号_追従++
; ENDIF







