
@固有アビ_3_1(ARGS, キャラ番号)
#DIM キャラ番号
#DIM 消費ＭＰ
#DIMS アビ名
#DIM 効果数値
#DIM 効果数値２
#DIM 効果上限
#DIM 対象キャラ
#DIM 鼓レベル

IF 基礎BATTLE_STATE:キャラ番号:Lv >= 20
	アビ名 = 鼓舞激励＋＋
	消費ＭＰ = 60
	効果数値 = 15
	効果数値２ = 5
	効果上限 = 5
ELSEIF 基礎BATTLE_STATE:キャラ番号:Lv >= 8
	アビ名 = 鼓舞激励＋
	消費ＭＰ = 50
	効果数値 = 10
	効果数値２ = 4
	効果上限 = 4
ELSE
	アビ名 = 鼓舞激励
	消費ＭＰ = 40
	効果数値 = 5
	効果数値２ = 3
	効果上限 = 3
ENDIF

SELECTCASE ARGS
	CASE "アビ名"
		TSTR:コマンド名受渡 = %アビ名%
	CASE "アビ説明文"
		詳細文文字列受け渡し変数 = 消費ＭＰ：{消費ＭＰ}　味方全体に永続する鼓の音Lv1［独自枠/消去不可］効果を与える。
		詳細文文字列受け渡し変数 += @"<br>鼓の音Lvは通常攻撃５回ごとに上昇（SAは１回、DAは２回、TAは３回）し、"
		詳細文文字列受け渡し変数 += @"<br>それぞれ対象の攻撃力［鼓の音Lv✕{効果数値}％/独自枠］・防御力［鼓の音Lv✕{効果数値}％/独自枠］"
		詳細文文字列受け渡し変数 += @"<br>連続攻撃率［鼓の音Lv✕{効果数値}％/独自枠］・奥義ダメージ［鼓の音Lv✕{効果数値２}％/独自枠］上昇させる。"
		詳細文文字列受け渡し変数 += @"<br>鼓の音Lvは{効果上限}Lvまで上昇する。"

		RETURN 消費ＭＰ
	CASE "アビ効果"
		IF バフ番号取得_枠("鼓の音", キャラ隊列検索(キャラ番号)) == -1
			;鼓が無い時、Lv1で張る
			CALL アビ対象選択テンプレート_味方全体_生者のみ
			アビ汎用変数:効果量 = 0
			アビ汎用変数:効果割合 = 効果上限
			アビ汎用変数:特殊表示オプション = 1
			アビ汎用変数:消去不可オプション = 1
			アビ汎用文字列:バフ・デバフ枠 = 鼓の音
			アビ汎用文字列:バフ・デバフ対象能力 = 鼓の音Lv1
			アビ汎用変数:持続ターン = -1
			CALL アビテンプレート_有利効果_バフ効果セット
			
			CALL アビ汎用変数文字列リセット
			アビ汎用変数:効果割合 = 効果数値
			アビ汎用文字列:バフ・デバフ枠 = 鼓の音_攻撃力
			アビ汎用文字列:バフ・デバフ対象能力 = 攻撃力
			アビ汎用変数:持続ターン = -1
			CALL アビテンプレート_有利効果_バフ効果セット
			
			CALL アビ汎用変数文字列リセット
			アビ汎用変数:効果割合 = 効果数値
			アビ汎用文字列:バフ・デバフ枠 = 鼓の音_防御力
			アビ汎用文字列:バフ・デバフ対象能力 = 防御力
			アビ汎用変数:持続ターン = -1
			CALL アビテンプレート_有利効果_バフ効果セット
			
			CALL アビ汎用変数文字列リセット
			アビ汎用変数:効果量 = 効果数値
			アビ汎用文字列:バフ・デバフ枠 = 鼓の音_連続攻撃率
			アビ汎用文字列:バフ・デバフ対象能力 = 連続攻撃率
			アビ汎用変数:持続ターン = -1
			CALL アビテンプレート_有利効果_バフ効果セット
			
			CALL アビ汎用変数文字列リセット
			アビ汎用変数:効果割合 = 効果数値２
			アビ汎用文字列:バフ・デバフ枠 = 鼓の音_奥義ダメージ補正_割合
			アビ汎用文字列:バフ・デバフ対象能力 = 奥義ダメージ補正_割合
			アビ汎用変数:持続ターン = -1
			CALL アビテンプレート_有利効果_バフ効果セット
		ELSE
			;鼓がある時、鼓Lvに合わせてバフを張る
			FOR 対象キャラ, 0, 4
				SIF BATTLE_STATE:対象キャラ:0 < 1
					CONTINUE
				SIF BATTLE_STATE:対象キャラ:ＨＰ < 1
					CONTINUE

				CALL アビ対象選択テンプレート_指定(対象キャラ)
				LOCAL = バフ番号取得_枠("鼓の音", 対象キャラ)
				SPLIT DT_CELL_GETS(@"バフデータベース_{対象キャラ}", LOCAL, "バフ対象能力"), "Lv", LOCALS
				鼓レベル = TOINT(LOCALS:1)

				;バフ貼り直し
				CALL アビ汎用変数文字列リセット
				アビ汎用変数:効果割合 = 効果数値 * 鼓レベル
				アビ汎用文字列:バフ・デバフ枠 = 鼓の音_攻撃力
				アビ汎用文字列:バフ・デバフ対象能力 = 攻撃力
				アビ汎用変数:持続ターン = -1
				CALL アビテンプレート_有利効果_バフ効果セット
					
				CALL アビ汎用変数文字列リセット
				アビ汎用変数:効果割合 = 効果数値 * 鼓レベル
				アビ汎用文字列:バフ・デバフ枠 = 鼓の音_防御力
				アビ汎用文字列:バフ・デバフ対象能力 = 防御力
				アビ汎用変数:持続ターン = -1
				CALL アビテンプレート_有利効果_バフ効果セット
					
				CALL アビ汎用変数文字列リセット
				アビ汎用変数:効果量 = 効果数値 * 鼓レベル
				アビ汎用文字列:バフ・デバフ枠 = 鼓の音_連続攻撃率
				アビ汎用文字列:バフ・デバフ対象能力 = 連続攻撃率
				アビ汎用変数:持続ターン = -1
				CALL アビテンプレート_有利効果_バフ効果セット
					
				CALL アビ汎用変数文字列リセット
				アビ汎用変数:効果割合 = 効果数値２ * 鼓レベル
				アビ汎用文字列:バフ・デバフ枠 = 鼓の音_奥義ダメージ補正_割合
				アビ汎用文字列:バフ・デバフ対象能力 = 奥義ダメージ補正_割合
				アビ汎用変数:持続ターン = -1
				CALL アビテンプレート_有利効果_バフ効果セット
			NEXT
		ENDIF
ENDSELECT

@バフ・デバフ特殊表示_鼓の音(隊列番号, バフ・デバフ行数)
#DIM 隊列番号
#DIM バフ・デバフ行数
VARSET LOCALS

PRINTFORM 鼓の音バフ
PRINTFORML ：%DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ・デバフ行数, "バフ名")%
SPLIT DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ・デバフ行数, "バフ対象能力"), "Lv", LOCALS
PRINTFORM 鼓の音Lv：%LOCALS:1, 18, LEFT%
PRINTFORML 通常攻撃回数：{DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ・デバフ行数, "バフ効果量_固定値"), 4}
PRINTFORML 持続ターン：永続　　　　　　鼓の音Lv上限：{DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ・デバフ行数, "バフ効果量_割合")}

@固有通常攻撃後処理_バフ_鼓の音(バフ・デバフ行数, 全滅フラグ, 連撃数)
;通常攻撃後処理関数から飛んでくる
#DIM 連撃数
#DIM 全滅フラグ
#DIM バフ・デバフ行数
#DIM バフ番号
#DIM 攻撃前数値
#DIM 攻撃後Lv
#DIM 効果数値
#DIM 効果数値２
#DIM 対象一時保存, アビ対象最大数
#DIM キャラ番号取得

SIF 全滅フラグ
	RETURN 0

攻撃前数値 = DT_CELL_GET(@"バフデータベース_{戦闘行動キャラ}", バフ・デバフ行数, "バフ効果量_固定値")
DT_CELL_SET @"バフデータベース_{戦闘行動キャラ}", バフ・デバフ行数, "バフ効果量_固定値", 攻撃前数値 + 連撃数
IF DT_CELL_GET(@"バフデータベース_{戦闘行動キャラ}", バフ・デバフ行数, "バフ効果量_割合") <= (攻撃前数値 + 5) / 5
	;既にLv上限の場合何もしない
ELSE
	;上限でない場合、攻撃前値と攻撃後数値を比較する
	IF (攻撃前数値 + 5) / 5 == (攻撃前数値 + 連撃数 + 5) / 5
		;Lvが上がらない場合は何もしない
	ELSE
		;Lvが上がる場合はバフを貼りなおす
		攻撃後Lv = (攻撃前数値 + 連撃数 + 5) / 5
		DT_CELL_SET @"バフデータベース_{戦闘行動キャラ}", バフ・デバフ行数, "バフ対象能力", @"鼓の音Lv{攻撃後Lv}"

		;該当バフ全削除
		バフ番号 = バフ番号取得_枠("鼓の音_攻撃力", 戦闘行動キャラ)
		IF バフ番号 > -1
			DT_ROW_REMOVE @"バフデータベース_{戦闘行動キャラ}", DT_CELL_GET(@"バフデータベース_{戦闘行動キャラ}", バフ番号, "id")
		ENDIF
		バフ番号 = バフ番号取得_枠("鼓の音_防御力", 戦闘行動キャラ)
		IF バフ番号 > -1
			DT_ROW_REMOVE @"バフデータベース_{戦闘行動キャラ}", DT_CELL_GET(@"バフデータベース_{戦闘行動キャラ}", バフ番号, "id")
		ENDIF
		バフ番号 = バフ番号取得_枠("鼓の音_連続攻撃率", 戦闘行動キャラ)
		IF バフ番号 > -1
			DT_ROW_REMOVE @"バフデータベース_{戦闘行動キャラ}", DT_CELL_GET(@"バフデータベース_{戦闘行動キャラ}", バフ番号, "id")
		ENDIF
		バフ番号 = バフ番号取得_枠("鼓の音_奥義ダメージ補正_割合", 戦闘行動キャラ)
		IF バフ番号 > -1
			DT_ROW_REMOVE @"バフデータベース_{戦闘行動キャラ}", DT_CELL_GET(@"バフデータベース_{戦闘行動キャラ}", バフ番号, "id")
		ENDIF

		;他の処理に影響を与えないために一旦対象を退避
		ARRAYCOPY "アビテンプレート用_対象保存", "対象一時保存"
		CALL アビ汎用変数文字列リセット
		CALL アビ対象選択テンプレート_指定(戦闘行動キャラ)

		;マキラのレベル依存で効果変動
		キャラ番号取得 = FINDCHARA(NO, 3)
		IF 基礎BATTLE_STATE:キャラ番号取得:Lv >= 20
			効果数値 = 15
			効果数値２ = 5
		ELSEIF 基礎BATTLE_STATE:キャラ番号取得:Lv >= 8
			効果数値 = 10
			効果数値２ = 4
		ELSE
			効果数値 = 5
			効果数値２ = 3
		ENDIF

		;バフ貼り直し
		アビ汎用変数:効果割合 = 効果数値 * 攻撃後Lv
		アビ汎用文字列:バフ・デバフ枠 = 鼓の音_攻撃力
		アビ汎用文字列:バフ・デバフ対象能力 = 攻撃力
		アビ汎用変数:持続ターン = -1
		CALL アビテンプレート_有利効果_バフ効果セット
			
		CALL アビ汎用変数文字列リセット
		アビ汎用変数:効果割合 = 効果数値 * 攻撃後Lv
		アビ汎用文字列:バフ・デバフ枠 = 鼓の音_防御力
		アビ汎用文字列:バフ・デバフ対象能力 = 防御力
		アビ汎用変数:持続ターン = -1
		CALL アビテンプレート_有利効果_バフ効果セット
			
		CALL アビ汎用変数文字列リセット
		アビ汎用変数:効果量 = 効果数値 * 攻撃後Lv
		アビ汎用文字列:バフ・デバフ枠 = 鼓の音_連続攻撃率
		アビ汎用文字列:バフ・デバフ対象能力 = 連続攻撃率
		アビ汎用変数:持続ターン = -1
		CALL アビテンプレート_有利効果_バフ効果セット
			
		CALL アビ汎用変数文字列リセット
		アビ汎用変数:効果量 = 効果数値２ * 攻撃後Lv
		アビ汎用文字列:バフ・デバフ枠 = 鼓の音_奥義ダメージ補正_割合
		アビ汎用文字列:バフ・デバフ対象能力 = 奥義ダメージ補正_割合
		アビ汎用変数:持続ターン = -1
		CALL アビテンプレート_有利効果_バフ効果セット

		;対象を戻す
		CALL アビ汎用変数文字列リセット
		ARRAYCOPY "対象一時保存", "アビテンプレート用_対象保存"
	ENDIF
ENDIF

@固有アビ_3_2(ARGS, キャラ番号)
#DIM キャラ番号
#DIM 消費ＭＰ
#DIM 効果数値
#DIM 効果数値２
#DIMS アビ名

IF 基礎BATTLE_STATE:キャラ番号:Lv >= 28
	アビ名 = 飛花落葉＋＋
	効果数値 = 250
	効果数値２ = 25
	消費ＭＰ = 30
ELSEIF 基礎BATTLE_STATE:キャラ番号:Lv >= 16
	アビ名 = 飛花落葉＋
	効果数値 = 200
	効果数値２ = 15
	消費ＭＰ = 25
ELSEIF 基礎BATTLE_STATE:キャラ番号:Lv >= 4
	アビ名 = 飛花落葉
	効果数値 = 200
	効果数値２ = 10
	消費ＭＰ = 20
ELSE
	アビ名 = 
ENDIF

SELECTCASE ARGS
	CASE "アビ名"
		TSTR:コマンド名受渡 = %アビ名%
	CASE "アビ説明文"
		詳細文文字列受け渡し変数 = 消費ＭＰ：{消費ＭＰ}<br>敵単体に自属性の［攻撃力✕{効果数値}％］ダメージを与える。
		詳細文文字列受け渡し変数 += @"<br>対象の防御力を3ターン［{効果数値２}％/B枠］減少させる。基礎成功率85％"
		RETURN 消費ＭＰ
	CASE "アビ効果"
		CALL アビ対象選択テンプレート_敵単体
		アビ汎用変数:効果割合 = 効果数値
		CALL アビテンプレート_ダメージ処理_自属性
		
		CALL アビ汎用変数文字列リセット
		アビ汎用変数:効果割合 = 効果数値２
		アビ汎用文字列:バフ・デバフ枠 = 防御力B
		アビ汎用文字列:バフ・デバフ対象能力 = 防御力
		アビ汎用変数:基礎成功確率 = 85
		アビ汎用変数:持続ターン = 3
		CALL アビテンプレート_不利効果_デバフ効果セット
ENDSELECT

@固有アビ_3_3(ARGS, キャラ番号)
#DIM キャラ番号
#DIM 消費ＭＰ
#DIMS アビ名
#DIM 効果数値
#DIM 効果数値２

IF 基礎BATTLE_STATE:キャラ番号:Lv >= 32
	アビ名 = 花鳥風月＋＋
	消費ＭＰ = 70
	効果数値 = 30
	効果数値２ = 25
ELSEIF 基礎BATTLE_STATE:キャラ番号:Lv >= 24
	アビ名 = 花鳥風月＋
	消費ＭＰ = 50
	効果数値 = 20
	効果数値２ = 15
ELSEIF 基礎BATTLE_STATE:キャラ番号:Lv >= 12
	アビ名 = 花鳥風月
	消費ＭＰ = 30
	効果数値 = 20
	効果数値２ = 10
ELSE
	アビ名 = 
ENDIF

SELECTCASE ARGS
	CASE "アビ名"
		TSTR:コマンド名受渡 = %アビ名%
	CASE "アビ説明文"
		IF 基礎BATTLE_STATE:キャラ番号:Lv < 24
			詳細文文字列受け渡し変数 = 消費ＭＰ：{消費ＭＰ}<br>味方単体の
		ELSE
			詳細文文字列受け渡し変数 = 消費ＭＰ：{消費ＭＰ}<br>味方全体の
		ENDIF
		詳細文文字列受け渡し変数 += @"攻撃力を3ターン［{効果数値}％/A枠］上昇させる。"
		詳細文文字列受け渡し変数 += @"<br>対象に3ターンの追撃［{効果数値２}％/A枠］効果を与える。"
		RETURN 消費ＭＰ
	CASE "アビ効果"
		IF 基礎BATTLE_STATE:キャラ番号:Lv < 24
			CALL アビ対象選択テンプレート_味方単体_生者のみ
		ELSE
			CALL アビ対象選択テンプレート_味方全体_生者のみ
		ENDIF
		アビ汎用変数:効果割合 = 効果数値
		アビ汎用文字列:バフ・デバフ枠 = 攻撃力A
		アビ汎用文字列:バフ・デバフ対象能力 = 攻撃力
		アビ汎用変数:持続ターン = 3
		CALL アビテンプレート_有利効果_バフ効果セット
		
		CALL アビ汎用変数文字列リセット
		アビ汎用変数:効果割合 = 効果数値２
		アビ汎用文字列:バフ・デバフ枠 = 追撃A
		アビ汎用文字列:バフ・デバフ対象能力 = 追撃
		アビ汎用変数:持続ターン = 3
		CALL アビテンプレート_有利効果_バフ効果セット
ENDSELECT
