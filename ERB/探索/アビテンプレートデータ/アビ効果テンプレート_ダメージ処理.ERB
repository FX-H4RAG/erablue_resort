@アビテンプレート_ダメージ処理_自属性
;RETURNにダメージ量の合計値を突っ込む
#DIM 対象番号
#DIM ダメージ量計算値
#DIM 総ダメージ量
#DIM かばう済フラグ
#DIM 死亡フラグ
#DIM バフ番号
#DIM バリア耐久
#DIM バリア行数
#DIMS 属性文字色
#DIM 属性番号
かばう済フラグ = 0
死亡フラグ = 0

CALL アビテンプレート_効果共通処理
SIF RESULT == -1
	RETURN -1

総ダメージ量 = 0
FOR 対象番号, 0, 10
	死亡フラグ = 0
	かばう済フラグ = 0
	SIF アビテンプレート用_対象保存:対象番号 < 0
		CONTINUE
	IF アビテンプレート用_対象保存:対象番号 < 10
		;既に死んでたらスキップ
		IF BATTLE_STATE:(アビテンプレート用_対象保存:対象番号):ＨＰ < 1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%はすでに倒れている！
			CONTINUE
		ENDIF
	ELSE
		IF 敵BATTLE_STATE:(アビテンプレート用_対象保存:対象番号 - 10):ＨＰ < 1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%はすでに倒れている！
			CONTINUE
		ENDIF
	ENDIF
	IF アビテンプレート用_全体フラグ
		;全体時は全体かばう以外は元々無視
		IF GETBIT(アビ汎用変数:かばう無視オプション, 1) == 0
			IF アビテンプレート用_対象保存:対象番号 < 10
				CALL かばうチェック_味方("全体かばう")
			ELSE
				CALL かばうチェック_敵("全体かばう")
			ENDIF
			IF RESULT > -1
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%が攻撃をかばった！
				かばう済フラグ = 1
			ENDIF
		ENDIF
	ELSE
		;非全体時は通常かばうも起動可能
		IF GETBIT(アビ汎用変数:かばう無視オプション, 1) == 0
			IF アビテンプレート用_対象保存:対象番号 < 10
				CALL かばうチェック_味方("全体かばう")
			ELSE
				CALL かばうチェック_敵("全体かばう")
			ENDIF
			IF RESULT > -1
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%が攻撃をかばった！
				かばう済フラグ = 1
			ENDIF
		ENDIF
		IF GETBIT(アビ汎用変数:かばう無視オプション, 0) == 0 && かばう済フラグ == 0
			IF アビテンプレート用_対象保存:対象番号 < 10
				CALL かばうチェック_味方("")
			ELSE
				CALL かばうチェック_敵("")
			ENDIF
			IF RESULT > -1
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%が攻撃をかばった！
				かばう済フラグ = 1
			ENDIF
		ENDIF
	ENDIF

	戦闘行動対象 = アビテンプレート用_対象保存:対象番号
	CALL ダメージ計算処理(アビ汎用変数:効果割合, アビ汎用文字列:攻撃側使用能力値, アビ汎用文字列:防御側使用能力値, アビ汎用変数:数値乱数幅)
	ダメージ量計算値 = RESULT + アビ汎用変数:効果量
	IF アビ汎用文字列:ダメージ種類 != "奥義ダメージ"
		;奥義ダメージじゃないのにこの関数を通る＝アビダメ
		CALL バフ・デバフ測定(戦闘行動キャラ, "アビリティダメージ補正_割合")
		ダメージ量計算値 = ダメージ量計算値 * (RESULT + 100) / 100
		IF ダメージ量計算値 > 0
			CALL バフ・デバフ測定(戦闘行動キャラ, "アビリティダメージ補正_固定値")
			ダメージ量計算値 = ダメージ量計算値 + RESULT
		ENDIF
	ENDIF

	
	IF かばう済フラグ == 0
		;かばってない場合は回避判定が発生
		CALL 回避判定チェック(戦闘行動キャラ, 戦闘行動対象, アビ汎用変数:命中率補正値, アビ汎用変数:回避率補正値)
		IF RESULT
			;回避パターン
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%は攻撃を回避した！
			アビテンプレート用_回避フラグ = 1
			CALL 回避時効果処理(対象番号)
			CONTINUE
		ENDIF
	ENDIF

	総ダメージ量 += ダメージ量計算値
	LOCALS = 

	;ダメージの属性に応じて文字色変化
	IF 戦闘行動キャラ < 10
		属性番号 = BATTLE_STATE:戦闘行動キャラ:属性
	ELSE
		属性番号 = 敵BATTLE_STATE:(戦闘行動キャラ - 10):属性
	ENDIF
	SELECTCASE 属性番号
		CASE 0
			属性文字色 = %カラーパレット_HTML("火属性")%
		CASE 1
			属性文字色 = %カラーパレット_HTML("水属性")%
		CASE 2
			属性文字色 = %カラーパレット_HTML("風属性")%
		CASE 3
			属性文字色 = %カラーパレット_HTML("土属性")%
		CASE 4
			属性文字色 = %カラーパレット_HTML("光属性")%
		CASE 5
			属性文字色 = %カラーパレット_HTML("闇属性")%
		CASEELSE
			属性文字色 = C0C0C0
	ENDSELECT

	SIF アビ汎用変数:クリティカルフラグ
		LOCALS += "クリティカル！　"
	バリア行数 = バフ存在チェック("バリア", 戦闘行動対象)
	IF バリア行数 > -1
		バリア耐久 = DT_CELL_GET(@"バフデータベース_{戦闘行動対象}", バリア行数, "バフ効果量_固定値")
		IF バリア耐久 > ダメージ量計算値
			LOCALS += @"%戦闘キャラ名前取得(戦闘行動対象)%のバリアに<font color='#%属性文字色%'>{ダメージ量計算値}</font>のダメージ！"
			ダメージ量計算値 = 0
			DT_CELL_SET @"バフデータベース_{戦闘行動対象}", バリア行数, "バフ効果量_固定値", バリア耐久 - ダメージ量計算値
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %LOCALS%
			CONTINUE
		ELSE
			LOCALS += @"%戦闘キャラ名前取得(戦闘行動対象)%のバリアに<font color='#%属性文字色%'>{ダメージ量計算値}</font>のダメージ！　バリアは壊れた！"
			ダメージ量計算値 -= バリア耐久
			CALL バフ削除(戦闘行動対象, バリア行数)
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %LOCALS%
			LOCALS = 
			SIF ダメージ量計算値 == 0
				CONTINUE
		ENDIF
	ENDIF
	LOCALS += @"%戦闘キャラ名前取得(戦闘行動対象)%に<font color='#%属性文字色%'>{ダメージ量計算値}</font>のダメージ！"
	アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %LOCALS%
	IF 戦闘行動対象 < 10
		BATTLE_STATE:戦闘行動対象:ＨＰ = MAX(BATTLE_STATE:戦闘行動対象:ＨＰ - ダメージ量計算値, 0)
		SIF BATTLE_STATE:戦闘行動対象:ＨＰ < 1
			死亡フラグ = 1
	ELSE
		敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ = MAX(敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ - ダメージ量計算値, 0)
		SIF 敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ < 1
			死亡フラグ = 1
	ENDIF
	IF 死亡フラグ
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%は倒れた！
		CALL 戦闘不能時処理(戦闘行動対象, 対象番号)
	ELSE
		CALL 被ダメージ時効果処理(対象番号)
	ENDIF
NEXT
アビ汎用変数:クリティカル率計算値保存 = -1
アビ汎用変数:クリティカルダメージ計算値保存 = -1

RETURN 総ダメージ量

@アビテンプレート_ダメージ処理_属性付き(属性番号)
#DIM 属性一時保存
#DIM 属性番号

IF 戦闘行動キャラ < 10
	属性一時保存 = BATTLE_STATE:戦闘行動キャラ:属性
	BATTLE_STATE:戦闘行動キャラ:属性 = 属性番号
	CALL アビテンプレート_ダメージ処理_自属性
	BATTLE_STATE:戦闘行動キャラ:属性 = 属性一時保存
ELSE
	属性一時保存 = 敵BATTLE_STATE:(戦闘行動キャラ - 10):属性
	敵BATTLE_STATE:(戦闘行動キャラ - 10):属性 = 属性番号
	CALL アビテンプレート_ダメージ処理_自属性
	敵BATTLE_STATE:(戦闘行動キャラ - 10):属性 = 属性一時保存
ENDIF
RETURN RESULT

@アビテンプレート_ダメージ処理_火属性
CALL アビテンプレート_ダメージ処理_属性付き(0)
RETURN RESULT

@アビテンプレート_ダメージ処理_水属性
CALL アビテンプレート_ダメージ処理_属性付き(1)
RETURN RESULT

@アビテンプレート_ダメージ処理_風属性
CALL アビテンプレート_ダメージ処理_属性付き(2)
RETURN RESULT

@アビテンプレート_ダメージ処理_土属性
CALL アビテンプレート_ダメージ処理_属性付き(3)
RETURN RESULT

@アビテンプレート_ダメージ処理_光属性
CALL アビテンプレート_ダメージ処理_属性付き(4)
RETURN RESULT

@アビテンプレート_ダメージ処理_闇属性
CALL アビテンプレート_ダメージ処理_属性付き(5)
RETURN RESULT

@アビテンプレート_通常攻撃処理
#DIM DA率計算値
#DIM TA率計算値
#DIM 連撃率加算値
#DIM ゲージ上昇率計算値
#DIMS 表示文章一時格納
#DIM 連撃数
#DIM 死亡フラグ
#DIM ダメージ量計算値
#DIM 総ダメージ量
#DIM 追撃ダメージ
#DIM 追撃ダメージ合計値
#DIM 対象番号
#DIM 追撃効果量, 10
#DIM 追撃効果割合, 10
#DIM 追撃数
#DIM データベース行数
#DIM かばう済フラグ
#DIM バリア耐久
#DIM バリア行数
#DIMS 効果種類
#DIM 補正割合
#DIM 補正固定値
#DIM 属性番号
#DIMS 属性文字色

総ダメージ量 = 0
対象番号 = 0

CALL アビテンプレート_効果共通処理
SIF RESULT == -1
	RETURN -1

;攻撃回数決定
LOCAL = RAND:100
CALL バフ・デバフ測定(戦闘行動キャラ, "DA率")
DA率計算値 = RESULT + アビ汎用変数:DA率補正値
CALL バフ・デバフ測定(戦闘行動キャラ, "TA率")
TA率計算値 = RESULT + アビ汎用変数:TA率補正値
CALL バフ・デバフ測定(戦闘行動キャラ, "連続攻撃率")
連撃率加算値 = RESULT
CALL バフ・デバフ測定(戦闘行動キャラ, "ゲージ上昇効率")
ゲージ上昇率計算値 = RESULT
IF TA率計算値 + 連撃率加算値 > LOCAL
	アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = トリプルアタック！
	連撃数 = 3
	IF 戦闘行動キャラ < 10
		BATTLE_STATE:戦闘行動キャラ:奥義ゲージ += 10 * (ゲージ上昇率計算値) / 100
		BATTLE_STATE:戦闘行動キャラ:奥義ゲージ += 12 * (ゲージ上昇率計算値) / 100
		BATTLE_STATE:戦闘行動キャラ:奥義ゲージ += 15 * (ゲージ上昇率計算値) / 100
	ENDIF
ELSE
	LOCAL = RAND:100
	IF DA率計算値 + 連撃率加算値 > LOCAL
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = ダブルアタック！
		連撃数 = 2
		IF 戦闘行動キャラ < 10
			BATTLE_STATE:戦闘行動キャラ:奥義ゲージ += 10 * (ゲージ上昇率計算値) / 100
			BATTLE_STATE:戦闘行動キャラ:奥義ゲージ += 12 * (ゲージ上昇率計算値) / 100
		ENDIF
	ELSE
		連撃数 = 1
		IF 戦闘行動キャラ < 10
			BATTLE_STATE:戦闘行動キャラ:奥義ゲージ += 10 * (ゲージ上昇率計算値) / 100
		ENDIF
	ENDIF
ENDIF

;通常攻撃ダメージ補正、連撃や全体攻撃で回数を余計に消費しないためにここで参照する
CALL バフ・デバフ測定(戦闘行動キャラ, "通常攻撃ダメージ補正_割合")
補正割合 = RESULT
CALL バフ・デバフ測定(戦闘行動キャラ, "通常攻撃ダメージ補正_固定値")
補正固定値 = RESULT

FOR 対象番号, 0, 10
	表示文章一時格納 = 
	死亡フラグ = 0
	かばう済フラグ = 0
	SIF アビテンプレート用_対象保存:対象番号 < 0
		CONTINUE
	IF アビテンプレート用_対象保存:対象番号 < 10
		;既に死んでたらスキップ
		IF BATTLE_STATE:(アビテンプレート用_対象保存:対象番号):ＨＰ < 1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%はすでに倒れている！
			CONTINUE
		ENDIF
	ELSE
		IF 敵BATTLE_STATE:(アビテンプレート用_対象保存:対象番号 - 10):ＨＰ < 1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%はすでに倒れている！
			CONTINUE
		ENDIF
	ENDIF
	IF アビテンプレート用_全体フラグ
		;全体時は全体かばう以外は元々無視
		IF GETBIT(アビ汎用変数:かばう無視オプション, 1) == 0
			IF アビテンプレート用_対象保存:対象番号 < 10
				CALL かばうチェック_味方("全体かばう")
			ELSE
				CALL かばうチェック_敵("全体かばう")
			ENDIF
			IF RESULT > -1
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%が攻撃をかばった！
				かばう済フラグ = 1
			ENDIF
		ENDIF
	ELSE
		;非全体時は通常かばうも起動可能
		IF GETBIT(アビ汎用変数:かばう無視オプション, 1) == 0
			IF アビテンプレート用_対象保存:対象番号 < 10
				CALL かばうチェック_味方("全体かばう")
			ELSE
				CALL かばうチェック_敵("全体かばう")
			ENDIF
			IF RESULT > -1
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%が攻撃をかばった！
				かばう済フラグ = 1
			ENDIF
		ENDIF
		IF GETBIT(アビ汎用変数:かばう無視オプション, 0) == 0 && かばう済フラグ == 0
			IF アビテンプレート用_対象保存:対象番号 < 10
				CALL かばうチェック_味方("")
			ELSE
				CALL かばうチェック_敵("")
			ENDIF
			IF RESULT > -1
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%が攻撃をかばった！
				かばう済フラグ = 1
			ENDIF
		ENDIF
	ENDIF

	戦闘行動対象 = アビテンプレート用_対象保存:対象番号	
	IF かばう済フラグ == 0
		;かばってない場合は回避判定が発生
		CALL 回避判定チェック(戦闘行動キャラ, 戦闘行動対象, アビ汎用変数:命中率補正値, アビ汎用変数:回避率補正値)
		IF RESULT
			;回避パターン
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%は攻撃を回避した！
			CALL 回避時効果処理(対象番号)
			アビテンプレート用_回避フラグ = 1
			CONTINUE
		ENDIF
		;通常攻撃は暗闇もチェック
		CALL バフ・デバフ測定(戦闘行動キャラ, "暗闇")
		IF RAND:100 < RESULT
			;暗闇で外したパターン、回避時効果は発動しない
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動キャラ)%の攻撃は当たらなかった！
			CONTINUE
		ENDIF
	ENDIF

	;クリティカル判定
	CALL ダメージ計算処理(アビ汎用変数:効果割合, アビ汎用文字列:攻撃側使用能力値, アビ汎用文字列:防御側使用能力値, アビ汎用変数:数値乱数幅)
	IF アビ汎用変数:クリティカルフラグ
		表示文章一時格納 += "クリティカル！　"
		;DAやTAでも全部クリティカルにするために、クリティカルフラグ999を入れる
		アビ汎用変数:クリティカルフラグ = 999
	ENDIF

	;ダメージの属性に応じて文字色変化
	IF 戦闘行動キャラ < 10
		属性番号 = BATTLE_STATE:戦闘行動キャラ:属性
	ELSE
		属性番号 = 敵BATTLE_STATE:(戦闘行動キャラ - 10):属性
	ENDIF
	SELECTCASE 属性番号
		CASE 0
			属性文字色 = %カラーパレット_HTML("火属性")%
		CASE 1
			属性文字色 = %カラーパレット_HTML("水属性")%
		CASE 2
			属性文字色 = %カラーパレット_HTML("風属性")%
		CASE 3
			属性文字色 = %カラーパレット_HTML("土属性")%
		CASE 4
			属性文字色 = %カラーパレット_HTML("光属性")%
		CASE 5
			属性文字色 = %カラーパレット_HTML("闇属性")%
		CASEELSE
			属性文字色 = C0C0C0
	ENDSELECT

	表示文章一時格納 += @"%戦闘キャラ名前取得(戦闘行動対象)%"
	FOR LOCAL, 0, 連撃数
		CALL ダメージ計算処理(アビ汎用変数:効果割合, アビ汎用文字列:攻撃側使用能力値, アビ汎用文字列:防御側使用能力値, アビ汎用変数:数値乱数幅)
		ダメージ量計算値 = RESULT + アビ汎用変数:効果量

		;通常攻撃ダメージ補正
		ダメージ量計算値 = ダメージ量計算値 * (補正割合 + 100) / 100
		IF ダメージ量計算値 > 0
			ダメージ量計算値 = ダメージ量計算値 + 補正固定値
		ENDIF

		総ダメージ量 += ダメージ量計算値

		バリア行数 = バフ存在チェック("バリア", 戦闘行動対象)
		IF バリア行数 > -1
			SIF LOCAL == 0
				表示文章一時格納 += "の"
			バリア耐久 = DT_CELL_GET(@"バフデータベース_{戦闘行動対象}", バリア行数, "バフ効果量_固定値")
			IF バリア耐久 > ダメージ量計算値
				表示文章一時格納 += @"バリアに<font color='#%属性文字色%'>{ダメージ量計算値}</font>のダメージ！　"
				DT_CELL_SET @"バフデータベース_{戦闘行動対象}", バリア行数, "バフ効果量_固定値", バリア耐久 - ダメージ量計算値
				CONTINUE
			ELSE
				表示文章一時格納 += @"バリアに<font color='#%属性文字色%'>{ダメージ量計算値}</font>のダメージ！　バリアは壊れた！"
				ダメージ量計算値 -= バリア耐久
				CALL バフ削除(戦闘行動対象, バリア行数)
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %表示文章一時格納%
				表示文章一時格納 = 
				SIF ダメージ量計算値 == 0
					CONTINUE
			ENDIF
		ELSE
			SIF LOCAL == 0
				表示文章一時格納 += "に"
		ENDIF

		表示文章一時格納 += @"<font color='#%属性文字色%'>{ダメージ量計算値}</font>のダメージ！　"

		;追撃チェック
		VARSET 追撃効果量
		VARSET 追撃効果割合
		追撃ダメージ合計値 = 0
		追撃数 = 0
		データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{戦闘行動キャラ}")
		FOR LOCAL:1, 0, データベース行数
			効果種類 = %DT_CELL_GETS(@"バフデータベース_{戦闘行動キャラ}", LOCAL:1, "バフ対象能力")%
			IF 効果種類 == "追撃"
				;ダメージ量決定
				追撃効果量:追撃数 = DT_CELL_GET(@"バフデータベース_{戦闘行動キャラ}", LOCAL:1, "バフ効果量_固定値")
				追撃効果割合:追撃数 = DT_CELL_GET(@"バフデータベース_{戦闘行動キャラ}", LOCAL:1, "バフ効果量_割合")
				追撃数 += 1
			ENDIF
		NEXT
		FOR LOCAL:1, 0, 追撃数
			追撃ダメージ = 追撃効果割合:(LOCAL:1) * ダメージ量計算値 / 100 + 追撃効果量:(LOCAL:1)
			表示文章一時格納 += @"<font color='#%属性文字色%'>{追撃ダメージ}</font>のダメージ！　"
			総ダメージ量 += 追撃ダメージ
			追撃ダメージ合計値 += 追撃ダメージ
		NEXT

		IF 戦闘行動対象 < 10
			BATTLE_STATE:戦闘行動対象:ＨＰ = MAX(BATTLE_STATE:戦闘行動対象:ＨＰ - ダメージ量計算値 - 追撃ダメージ合計値, 0)
			SIF BATTLE_STATE:戦闘行動対象:ＨＰ < 1
				死亡フラグ = 1
		ELSE
			敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ = MAX(敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ - ダメージ量計算値 - 追撃ダメージ合計値, 0)
			SIF 敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ < 1
				死亡フラグ = 1
		ENDIF
		IF 死亡フラグ
			表示文章一時格納 += @"<br>%戦闘キャラ名前取得(戦闘行動対象)%は倒れた！"
			BREAK
		ELSE
			CALL 被ダメージ時効果処理(対象番号)
		ENDIF
	NEXT
	アビ汎用変数:クリティカルフラグ = 0
	アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %表示文章一時格納%
	IF 死亡フラグ
		;自動復活の都合上、ここに戦闘不能時処理を突っ込む
		CALL 戦闘不能時処理(戦闘行動対象, 対象番号)
	ENDIF
NEXT

CALL 通常攻撃後処理関数(連撃数)

アビ汎用変数:クリティカル率計算値保存 = -1
アビ汎用変数:クリティカルダメージ計算値保存 = -1
RETURN 総ダメージ量

