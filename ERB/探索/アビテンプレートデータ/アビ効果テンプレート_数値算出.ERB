@バフ込み数値算出(対象能力, 対象キャラ = -1, 補正前数値)
#FUNCTION
#DIMS 対象能力
#DIM 対象キャラ
#DIM 補正前数値

IF 対象キャラ == -1
	対象キャラ = 戦闘行動キャラ
ENDIF

RETURNF バフ・デバフ測定(対象キャラ, 対象能力, 補正前数値, 1)

@バフ存在チェック(対象バフ, 対象キャラ = -1)
#FUNCTION
;あるなら行数を、ないなら-1を返す

#DIM 対象キャラ
#DIMS 対象バフ
#DIM データベース行数
#DIM バフ番号

IF 対象キャラ == -1
	対象キャラ = 戦闘行動対象
ENDIF

データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{対象キャラ}")
FOR バフ番号, 0, データベース行数
	IF DT_CELL_GETS(@"バフデータベース_{対象キャラ}", バフ番号, "バフ対象能力") == 対象バフ
		RETURNF バフ番号
	ENDIF
NEXT

RETURNF -1

@バフ存在チェック_枠(対象バフ, 対象キャラ = -1)
#FUNCTION
;あるなら行数を、ないなら-1を返す

#DIM 対象キャラ
#DIMS 対象バフ
#DIM データベース行数
#DIM バフ番号

IF 対象キャラ == -1
	対象キャラ = 戦闘行動対象
ENDIF

データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{対象キャラ}")
FOR バフ番号, 0, データベース行数
	IF DT_CELL_GETS(@"バフデータベース_{対象キャラ}", バフ番号, "バフ枠") == 対象バフ
		RETURNF バフ番号
	ENDIF
NEXT

RETURNF -1

@デバフ存在チェック(対象デバフ, 対象キャラ = -1)
#FUNCTION
;あるなら行数を、ないなら-1を返す

#DIM 対象キャラ
#DIMS 対象デバフ
#DIM データベース行数
#DIM デバフ番号

IF 対象キャラ == -1
	対象キャラ = 戦闘行動対象
ENDIF

データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{対象キャラ}")
FOR デバフ番号, 0, データベース行数
	IF DT_CELL_GETS(@"デバフデータベース_{対象キャラ}", デバフ番号, "デバフ対象能力") == 対象デバフ
		RETURNF デバフ番号
	ENDIF
NEXT

RETURNF -1

@デバフ存在チェック_枠(対象デバフ, 対象キャラ = -1)
#FUNCTION
;あるなら行数を、ないなら-1を返す

#DIM 対象キャラ
#DIMS 対象デバフ
#DIM データベース行数
#DIM デバフ番号

IF 対象キャラ == -1
	対象キャラ = 戦闘行動対象
ENDIF

データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{対象キャラ}")
FOR デバフ番号, 0, データベース行数
	IF DT_CELL_GETS(@"デバフデータベース_{対象キャラ}", デバフ番号, "デバフ枠") == 対象デバフ
		RETURNF デバフ番号
	ENDIF
NEXT

RETURNF -1
