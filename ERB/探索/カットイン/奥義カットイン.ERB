@奥義カットイン
;アニメが作成できれば1、できなかったときは0を返す
#DIM レイヤー番号
#DIM キャラTEMP
#DIMS 作成アニメ種類
#DIMS 奥義メッセージ前
#DIMS 奥義メッセージ後
VARSET 奥義メッセージ前
VARSET 奥義メッセージ後
VARSET 作成アニメ種類

レイヤー番号 = 50
;+20 読み込み +40 背景素材に使用

;戦闘行動キャラを対象に
キャラTEMP = BATTLE_STATE:戦闘行動キャラ:キャラ番号
CSTR:キャラTEMP:画像フォルダ = {NO:キャラTEMP}%CALLNAME:キャラTEMP%


;アニメ選択オプションを確認する
; SELECTCASE アニメ選択オプション
; 	CASE アニメ選択オプションが横カットイン優先のとき
;		IF EXISTFILE(@"resources/%CSTR:キャラTEMP:画像フォルダ%/横カットイン.png")
;			作成アニメ種類 = 横カットイン
;		ELSEIF EXISTFILE(@"resources/%CSTR:キャラTEMP:画像フォルダ%/縦カットイン.png")
;			作成アニメ種類 = 縦カットイン
;		ENDIF
; 	CASE アニメ選択オプションが縦カットイン優先のとき
;		IF EXISTFILE(@"resources/%CSTR:キャラTEMP:画像フォルダ%/縦カットイン.png")
;			作成アニメ種類 = 縦カットイン
;		ELSEIF EXISTFILE(@"resources/%CSTR:キャラTEMP:画像フォルダ%/横カットイン.png")
;			作成アニメ種類 = 横カットイン
;		ENDIF
; ENDSELECT

;選択オプションまだ作ってないのでとりあえず直でファイルがあるかを見る
IF EXISTFILE(@"resources/%CSTR:キャラTEMP:画像フォルダ%/横カットイン.png")
	作成アニメ種類 = 横カットイン
ELSEIF EXISTFILE(@"resources/%CSTR:キャラTEMP:画像フォルダ%/縦カットイン.png")
	作成アニメ種類 = 縦カットイン
ENDIF

IF 作成アニメ種類 == ""
;画像がないまたはアニメ選択オプションがデフォルトならデフォルト画像を使う
	IF EXISTFILE(@"resources/%CSTR:キャラTEMP:画像フォルダ%/顔_デフォルト.png")
		作成アニメ種類 = デフォルト
	ELSE
		RETURN 0
	ENDIF
ENDIF

;カットイン発生が確定したので演出に依らない共通データ読み込み

;セリフをもらってくる
;-----------------------------------------------
;テストエリア
;セリフもらえないので代入
IF 口上なしフラグ
	CALL 奥義名呼び出し(キャラTEMP)
	FOR LOCAL, 0, (26 - STRLENSU(@"%TSTR:コマンド名受渡%")) / 2
		奥義メッセージ前 += "　"
	NEXT	
	奥義メッセージ前 += @"%TSTR:コマンド名受渡%"
ELSE
	FOR LOCAL, 0, (26 - STRLENSU(@"%KSTR:0%")) / 2
		奥義メッセージ前 += "　"
	NEXT	
	奥義メッセージ前 += @"%KSTR:0%"
ENDIF
;----------------------------------------------

;中央揃え
CALL 奥義名呼び出し(キャラTEMP)
FOR LOCAL, 0, (26 - STRLENSU(@"%TSTR:コマンド名受渡%")) / 2
	奥義メッセージ後 += "　"
NEXT	
奥義メッセージ後 += @"%TSTR:コマンド名受渡%"

;字幕背景
GDISPOSE レイヤー番号 + 41
SELECTCASE BATTLE_STATE:戦闘行動キャラ:属性
	CASE 0
		GCREATEFROMFILE レイヤー番号 + 41, @"カットイン素材/subtitle火.png"
	CASE 1
		GCREATEFROMFILE レイヤー番号 + 41, @"カットイン素材/subtitle水.png"
	CASE 2
		GCREATEFROMFILE レイヤー番号 + 41, @"カットイン素材/subtitle風.png"
	CASE 3
		GCREATEFROMFILE レイヤー番号 + 41, @"カットイン素材/subtitle土.png"
	CASE 4
		GCREATEFROMFILE レイヤー番号 + 41, @"カットイン素材/subtitle光.png"
	CASE 5
		GCREATEFROMFILE レイヤー番号 + 41, @"カットイン素材/subtitle闇.png"
ENDSELECT



SELECTCASE 作成アニメ種類
;-----------------横カットイン
	CASE "横カットイン"
		FOR LOCAL ,0 ,13
			GDISPOSE レイヤー番号 + LOCAL
			GCREATE レイヤー番号 + LOCAL, 900, 900
		NEXT

		GDISPOSE レイヤー番号 + 20
		GCREATEFROMFILE レイヤー番号 + 20, @"%CSTR:キャラTEMP:画像フォルダ%/横カットイン.png"
		CALL グラフィックトリミング(レイヤー番号 + 20, 900, 450)

		;二枚目があるかを見る
		GDISPOSE レイヤー番号 + 21
		IF EXISTFILE (@"resources/%CSTR:キャラTEMP:画像フォルダ%/横カットイン1.png")
			GCREATEFROMFILE レイヤー番号 + 21, @"%CSTR:キャラTEMP:画像フォルダ%/横カットイン1.png"
		ELSE
			GCREATEFROMFILE レイヤー番号 + 21, @"%CSTR:キャラTEMP:画像フォルダ%/横カットイン.png"
		ENDIF
		CALL グラフィックトリミング(レイヤー番号 + 21, 900, 450)

		;-------------描画と透明化処理
;前編
		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 0, レイヤー番号 + 20, 180, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 1, レイヤー番号 + 0, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 1, レイヤー番号 + 20, 150, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 2, レイヤー番号 + 1, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 2, レイヤー番号 + 20, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 3, レイヤー番号 + 20, 90,  300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 3, レイヤー番号 + 2, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 4, レイヤー番号 + 20, 60,  300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 4, レイヤー番号 + 3, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
;後編
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 5, レイヤー番号 + 21, 105, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 5, レイヤー番号 + 21, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 105, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 90, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21, 90, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21, 60, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21, 60, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21, 0, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0


;字帯書き込み
		FOR LOCAL, 0, 12
			CALL カットイン用カラーマトリクス取得(0)
			GDRAWG レイヤー番号 + LOCAL, レイヤー番号 + 41, 0, 0, 900, 900, 0, 0,  GWIDTH (レイヤー番号 + 41), GHEIGHT(レイヤー番号 + 41), カットイン用カラーマトリクス:0:0
		NEXT
		
		FOR LOCAL, 0, 5
			GSETPEN レイヤー番号 + LOCAL, 0X80FFFFFF, 1
			GSETFONT レイヤー番号 + LOCAL, GETFONT(), 24
			GDRAWTEXT レイヤー番号 + LOCAL, @"%奥義メッセージ前%", 140, 620
		NEXT

		FOR LOCAL, 5, 9
			GSETPEN レイヤー番号 + LOCAL, 0X80FFFFFF, 1
			GSETFONT レイヤー番号 + LOCAL, GETFONT(), 24
			GDRAWTEXT レイヤー番号 + LOCAL, @"%奥義メッセージ後%", 140, 620
		NEXT

		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 9, レイヤー番号 + 8, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 10, レイヤー番号 + 9, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 11, レイヤー番号 + 10, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0

		SPRITEDISPOSE "カットインアニメ_0"

		;----------アニメーション画像の合成
		SPRITEANIMECREATE "カットインアニメ_0", 900, 900
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 0, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 1, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 2, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 3, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 4, 0, 0, 900, 900,   0,   0,  10000
		
		SPRITEDISPOSE "カットインアニメ_1"

		;----------アニメーション画像の合成
		SPRITEANIMECREATE "カットインアニメ_1", 900, 900
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 5, 0, 0, 900, 900,   0,   0, 400
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 6, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 7, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 8, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 9, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 10, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 11, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 12, 0, 0, 900, 900,   0,   0, 10000


		待機フレーム数 = 0, 40, 0, 0, 0, 0, 0, 0
		
;------------縦カットイン
	CASE "縦カットイン"
		FOR LOCAL ,0 ,13
			GDISPOSE レイヤー番号 + LOCAL
			GCREATE レイヤー番号 + LOCAL, 900, 900
		NEXT

		GDISPOSE レイヤー番号 + 20
		GCREATEFROMFILE レイヤー番号 + 20, @"%CSTR:キャラTEMP:画像フォルダ%/縦カットイン.png"
		CALL グラフィックトリミング(レイヤー番号 + 20, 450, 900)

		;二枚目があれば読み込む
		GDISPOSE レイヤー番号 + 21
		IF EXISTFILE (@"resources/%CSTR:キャラTEMP:画像フォルダ%/縦カットイン1.png")
			GCREATEFROMFILE レイヤー番号 + 21, @"%CSTR:キャラTEMP:画像フォルダ%/縦カットイン1.png"
		ELSE
			GCREATEFROMFILE レイヤー番号 + 21, @"%CSTR:キャラTEMP:画像フォルダ%/縦カットイン.png"
		ENDIF
		CALL グラフィックトリミング(レイヤー番号 + 21, 450, 900)

		;-------------描画と透明化処理
;前編
		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 0, レイヤー番号 + 20, 210, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 1, レイヤー番号 + 0, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 1, レイヤー番号 + 20, 180, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 2, レイヤー番号 + 1, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 2, レイヤー番号 + 20, 150, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 3, レイヤー番号 + 20, 120,  210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 3, レイヤー番号 + 2, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 4, レイヤー番号 + 20,  90,  210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 4, レイヤー番号 + 3, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
;後編
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 5, レイヤー番号 + 21, 135, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 5, レイヤー番号 + 21, 150, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 150, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 135, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 120, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21, 150, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21, 120, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21,  90, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21, 150, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21,  90, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21,  30, 210, 270, 540, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0


;字帯書き込み
		FOR LOCAL, 0, 12
			CALL カットイン用カラーマトリクス取得(0)
			GDRAWG レイヤー番号 + LOCAL, レイヤー番号 + 41, 0, 0, 900, 900, 0, 0,  GWIDTH (レイヤー番号 + 41), GHEIGHT(レイヤー番号 + 41), カットイン用カラーマトリクス:0:0
		NEXT

		FOR LOCAL, 0, 5
			GSETPEN レイヤー番号 + LOCAL, 0X80FFFFFF, 1
			GSETFONT レイヤー番号 + LOCAL, GETFONT(), 24
			GDRAWTEXT レイヤー番号 + LOCAL, @"%奥義メッセージ前%", 140, 620
		NEXT

		FOR LOCAL, 5, 9
			GSETPEN レイヤー番号 + LOCAL, 0X80FFFFFF, 1
			GSETFONT レイヤー番号 + LOCAL, GETFONT(), 24
			GDRAWTEXT レイヤー番号 + LOCAL, @"%奥義メッセージ後%", 140, 620
		NEXT

		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 9, レイヤー番号 + 8, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 10, レイヤー番号 + 9, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 11, レイヤー番号 + 10, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0

		SPRITEDISPOSE "カットインアニメ_0"

		;----------アニメーション画像の合成
		SPRITEANIMECREATE "カットインアニメ_0", 900, 900
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 0, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 1, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 2, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 3, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 4, 0, 0, 900, 900,   0,   0,  10000
		
		SPRITEDISPOSE "カットインアニメ_1"

		;----------アニメーション画像の合成
		SPRITEANIMECREATE "カットインアニメ_1", 900, 900
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 5, 0, 0, 900, 900,   0,   0, 400
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 6, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 7, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 8, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 9, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 10, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 11, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 12, 0, 0, 900, 900,   0,   0, 10000

		待機フレーム数 = 0, 40, 0, 0, 0, 0, 0, 0
		
		;----------------デフォルトカットイン
	CASE "デフォルト"
		FOR LOCAL ,0 ,13
			GDISPOSE レイヤー番号 + LOCAL
			GCREATE レイヤー番号 + LOCAL, 900, 900
		NEXT
		GDISPOSE レイヤー番号 + 20
		GCREATEFROMFILE レイヤー番号 + 20, @"%CSTR:キャラTEMP:画像フォルダ%/顔_デフォルト.png"
		CALL グラフィックトリミング(レイヤー番号 + 20, 900, 450)
		GDISPOSE レイヤー番号 + 21
		IF EXISTFILE (@"resources/%CSTR:キャラTEMP:画像フォルダ%/顔_デフォルト_差分_表情.png")
			GCREATEFROMFILE レイヤー番号 + 21, @"%CSTR:キャラTEMP:画像フォルダ%/顔_デフォルト_差分_表情.png"
		ELSE
			GCREATEFROMFILE レイヤー番号 + 21, @"%CSTR:キャラTEMP:画像フォルダ%/顔_デフォルト.png"
		ENDIF
		CALL グラフィックトリミング(レイヤー番号 + 21, 900, 450)

		;-------------描画と透明化処理
;前編
		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 0, レイヤー番号 + 20, 180, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 1, レイヤー番号 + 0, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 1, レイヤー番号 + 20, 150, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 2, レイヤー番号 + 1, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 2, レイヤー番号 + 20, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 3, レイヤー番号 + 20, 90,  300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 3, レイヤー番号 + 2, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 4, レイヤー番号 + 20, 60,  300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 20), GHEIGHT(レイヤー番号 + 20), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 4, レイヤー番号 + 3, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
;後編
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 5, レイヤー番号 + 21, 105, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 5, レイヤー番号 + 21, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 105, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 6, レイヤー番号 + 21, 90, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21, 90, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 7, レイヤー番号 + 21, 60, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

		CALL カットイン用カラーマトリクス取得(80)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21, 120, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(40)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21, 60, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(0)
		GDRAWG レイヤー番号 + 8, レイヤー番号 + 21, 0, 300, 630, 315, 0, 0,  GWIDTH (レイヤー番号 + 21), GHEIGHT(レイヤー番号 + 21), カットイン用カラーマトリクス:0:0

;字帯書き込み
		FOR LOCAL, 0, 12
			CALL カットイン用カラーマトリクス取得(0)
			GDRAWG レイヤー番号 + LOCAL, レイヤー番号 + 41, 0, 0, 900, 900, 0, 0,  GWIDTH (レイヤー番号 + 41), GHEIGHT(レイヤー番号 + 41), カットイン用カラーマトリクス:0:0
		NEXT

		FOR LOCAL, 0, 5
			GSETPEN レイヤー番号 + LOCAL, 0X80FFFFFF, 1
			GSETFONT レイヤー番号 + LOCAL, GETFONT(), 24
			GDRAWTEXT レイヤー番号 + LOCAL, @"%奥義メッセージ前%", 140, 620
		NEXT

		FOR LOCAL, 5, 9
			GSETPEN レイヤー番号 + LOCAL, 0X80FFFFFF, 1
			GSETFONT レイヤー番号 + LOCAL, GETFONT(), 24
			GDRAWTEXT レイヤー番号 + LOCAL, @"%奥義メッセージ後%", 140, 620
		NEXT

		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 9, レイヤー番号 + 8, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 10, レイヤー番号 + 9, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0
		CALL カットイン用カラーマトリクス取得(60)
		GDRAWG レイヤー番号 + 11, レイヤー番号 + 10, 0, 0, 900, 900, 0, 0, 900, 900 , カットイン用カラーマトリクス:0:0

		SPRITEDISPOSE "カットインアニメ_0"

		;----------アニメーション画像の合成
		SPRITEANIMECREATE "カットインアニメ_0", 900, 900
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 0, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 1, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 2, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 3, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_0", レイヤー番号 + 4, 0, 0, 900, 900,   0,   0,  10000
		
		SPRITEDISPOSE "カットインアニメ_1"

		;----------アニメーション画像の合成
		SPRITEANIMECREATE "カットインアニメ_1", 900, 900
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 5, 0, 0, 900, 900,   0,   0, 400
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 6, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 7, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 8, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 9, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 10, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 11, 0, 0, 900, 900,   0,   0, 100
		SPRITEANIMEADDFRAME "カットインアニメ_1", レイヤー番号 + 12, 0, 0, 900, 900,   0,   0, 10000


;アニメ_1以降の再生時間を記憶する試み
		;アニメ側がAWAIT回数を指定できた方が拡張性が高い
		;ディレイの合計 / アニメ用カウンタ が理論値だと思うのだがずれるので値が確定できない
		;セリフが長いなど極端に長いアニメを作りたい人向け？
		待機フレーム数 = 0, 40, 0, 0, 0, 0, 0, 0

ENDSELECT

RETURN 1

