
; @ダンジョン初期処理_風遊ぶ渓谷の参道
; ;ダンジョン構造の読み込み
; ;0でない時、そのマスは存在する
; #DIM 深度
; #DIM 分岐

; ダンジョンサブタイトル = APPROACH TO TIAMAT
; ダンジョンマス画像URL_伏せ状態 = 壁_海
; ダンジョン現在位置:0 = 3
; ダンジョン現在位置:1 = 0
; ダンジョン背景画像 = 背景_砂浜

; ;スタート地点は必ず存在
; ;初期からオープン済みなので3を入れる
; ;ビット0：存在するか　ビット1：移動できるか　ビット2：マスをオープンするか（ビット１をONにしないと無意味）　ビット3：入れないがオープンする場合に使用
; ;ビット4以降：自由枠。主に宝箱の開閉やイベント達成フラグなどに使用
; IF GETVAR(@"ダンジョン構造配列_%ダンジョン名%:{ダンジョン現在位置:0}:{ダンジョン現在位置:1}") == 0
; 	SETVAR @"ダンジョン構造配列_%ダンジョン名%:{ダンジョン現在位置:0}:{ダンジョン現在位置:1}", 3
; ENDIF

; FOR 深度, 1, 100
; 	LOCAL = 0
; 	FOR 分岐, 0, 9
; 		IF GETVAR(@"ダンジョン構造配列_%ダンジョン名%:{深度}:{分岐}")
; 			;既にマス情報が入ってるなら飛ばす
; 			LOCAL = 1
; 			CONTINUE
; 		ELSEIF ENUMFUNCBEGINSWITH(@"ダンジョンマス情報_%ダンジョン名%_{深度}_{分岐}")
; 			LOCAL = 1
; 			SETVAR @"ダンジョン構造配列_%ダンジョン名%:深度:分岐", 1
; 		ENDIF
; 	NEXT
; 	IF LOCAL
; 		ダンジョン最大深度 = 深度
; 	ENDIF
; NEXT

; @ダンジョン解説文_風遊ぶ渓谷の参道

; 詳細文文字列受け渡し変数 = 
; 詳細文文字列受け渡し変数 += "ポートブリーズ群島に存在する、星晶獣ティアマトを祀る社への参道。<br>"
; 詳細文文字列受け渡し変数 += "道中には素早い魔物が出没する。先手を取られることが多く、被害を防ぐことは難しいだろう。<br>"
; IF GETBIT(ダンジョン構造配列_風遊ぶ渓谷の参道:2:1, 2)
; 	詳細文文字列受け渡し変数 += "分社の巫女さんから「風のマント」を貰った。<br>これで崖下の道に降りることが出来るだろう。<br>"
; ELSE
; 	詳細文文字列受け渡し変数 += "参道近くにある崖の下にも道があるらしいが……。<br>"
; ENDIF

; ;推奨レベルを返す
; RETURN 17



; @敵討伐後処理_ダンジョン固有_風遊ぶ渓谷の参道(討伐エネミー数)
; ;ダンジョン内で戦闘した後に呼ばれる関数、主にダンジョンごとのドロップアイテム取得に使用
; ;まだ敵データはリセットしていないので敵BATTLE_STATEで色々情報は取得可能
; #DIM 討伐エネミー数
; #DIM ドロップ確率
; #DIMS ドロップアイテム

; ドロップ確率 = 5 * 討伐エネミー数
; ドロップアイテム = 海の星砂
; CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

; ドロップ確率 = 5 * 討伐エネミー数
; ドロップアイテム = レインボーマス
; CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

; ドロップ確率 = 3 * 討伐エネミー数
; ドロップアイテム = サケモン
; CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

; ドロップ確率 = 5 * 討伐エネミー数
; ドロップアイテム = 星晶の破片
; CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

; ドロップ確率 = 1 * 討伐エネミー数
; ドロップアイテム = 赤銅の古紋
; CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

; ;---------------------------------------------------------------------
; ;マップ構造
; ;---------------------------------------------------------------------
; ;上と下に分かれているマップ
; ;ただ下はほぼ行き止まりなので実質一本道
; ;---------------------------------------------------------------------

; @ダンジョンマス情報_風遊ぶ渓谷の参道_0_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 0
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 港から街を進み、郊外にある小さな山に辿り着く。
; 			WSTR:(K++) = この島には風の星晶獣──「ティアマト」に力を貸してもらいに来たのだが、
; 			KSTR:(K++) = どうやら通常の星晶獣とは異なり、ティアマトは空の民たちと共存共栄をしているらしい。_PAGE
; 			WSTR:(K++) = 昔は存在すら忘れられていたようだが、最近の事件によってどうのこうの……。その辺はいいだろう。
; 			WSTR:(K++) = 重要なのは山の頂上にティアマトの御社が建てられていて、力を借りるには上まで登る必要があるということだ。
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちは他の参拝客と同じように、踏み固められた山道を登り始める。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 参拝道の入口だ。周囲には参拝に向かう人がちらほらいる。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_0_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 0
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_1_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 1
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_2_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 2
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちは山の麓にある分社を訪れた。
; 			WSTR:(K++) = 何人かの参拝客と、境内を掃き清めている巫女さんがいる。
; 			WSTR:(K++) = 君たちの姿に気づいた巫女さんが、笑顔で声を掛けてきた。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 「島外からいらっしゃった方ですか？　こんにちは、ティアマト様の分社にようこそ。
; 			WSTR:(K++) = 　ティアマト様は風を司る星晶獣で、騎空士の方や風祷師さんがよくお参りに来るんですよ。
; 			WSTR:(K++) = 　航空安全のお守りなんかはいかがです？」
; 			CALL メッセージ欄表示用関数(,"分社の巫女さん",,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 営業トークを受けて幾つかお守りを購入しながら、自分たちは本宮へ行くつもりだと伝える。
; 			WSTR:(K++) = なにか気をつけることなどはないだろうか。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 「あぁー、今土砂崩れで頂上への道が塞がってるんです。
; 			WSTR:(K++) = 　山の上だから工事もなかなか進まなくて……。
; 			WSTR:(K++) = 　一応別の道から行くことは出来るんですが、島外の人にはちょっとオススメしないというか……」
; 			CALL メッセージ欄表示用関数(,"分社の巫女さん",,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 工事の終了予定を聞くと、一年以上は掛かるとのこと。
; 			WSTR:(K++) = 流石にそれほどの期間待ってはいられない。
; 			WSTR:(K++) = 別の道とやらを教えてもらえないだろうか、とお守りを追加購入しつつ巫女さんにお願いする。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 「あぁー、そこまで頼まれたらしょうがないですねぇ！
; 			WSTR:(K++) = 　実はですね、参道の脇には深い谷があるんですが……。
; 			WSTR:(K++) = 　こちらの『風のマント』を羽織ると、谷底に降りたり谷から上がってくることが出来るんです！」
; 			CALL メッセージ欄表示用関数(,"分社の巫女さん",,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = それはすごい！　でも、お高いんでしょう。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 「いえいえ、こちら差し上げますよ！　たくさんお守りを買っていただいたので！
; 			WSTR:(K++) = 　というか余ってるんですよね。このマントで上り下り出来るくらい風が強いのって、この島しかないんで。
; 			WSTR:(K++) = 　なので遠慮なくどーぞどーぞ。お連れ様の分も。はい！」
; 			CALL メッセージ欄表示用関数(,"分社の巫女さん",,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = どさどさ、と巫女さんがマントを一式持ってきてくれる。
; 			WSTR:(K++) = そういうことならありがたく頂いていこう。
; 			KSTR:(K++) = %CALLNAME:PLAYER%たちは手を振って見送る巫女さんと別れ、頂上への道に戻ることにした。_PAGE
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちはこのダンジョンで風のマントが使えるようになった！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 「また今度もお守り買ってくださいねー」
; 			KSTR:(K++) = と、巫女さんがにこにこと営業スマイルを浮かべている。
; 			CALL メッセージ欄表示用関数(,"分社の巫女さん",,0)
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_2_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 2
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "4_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちが道を進むと、品の良いおばさんとすれ違った。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 「あら、あなた達。島の外から来た方？
; 			WSTR:(K++) = 　ティアマト様にお参りするなら、あっちに分社があるわ。
; 			KSTR:(K++) = 　本宮はまっすぐ行った先の頂上にあるけれど、道中魔物が出るから。危険でしょう？」_PAGE
; 			WSTR:(K++) = 「……と言っても、あなた達は結構戦いに慣れてそうね。
; 			WSTR:(K++) = 　余計なお世話だったかしら。ほほほ、それじゃあ気をつけて」
; 			CALL メッセージ欄表示用関数(,"品の良いおばさん",,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = %CALLNAME:PLAYER%が脇道を見ると、確かに神社のような建物が見える。
; 			WSTR:(K++) = 分社だからか、星晶獣の力は殆ど感じない。ティアマトと会うにはやはり頂上に向かわなければならないだろう。
; 			WSTR:(K++) = ただ、参拝道となっている山を管理しているはずだ。
; 			WSTR:(K++) = 参拝の手順や山道について、一度話を聞きに行っても良いだろう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = まっすぐ行くと頂上への道。脇にそれると分社がある。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_2_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 2
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_2_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 2
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "1_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "0_7")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_2_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 2
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		SIF ダンジョン内一時変数:0 == 0
; 			ダンジョンマス画像URL_重ね表示 = えっちアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;えっちイベ
; 		;XXXXを使ってないダンジョン内一時変数の番号に変えること
; 		IF ダンジョン内一時変数:0
; 		ELSE
; 			CALL ダンジョンハプニング基本処理()
; 			IF RESULT
; 				ダンジョン内一時変数:0 = 1
; 			ENDIF
; 			CALL 口上変数初期化
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_3_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 3
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン_赤
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = なんか強敵
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_4_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 4
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "5_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "5_2")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 山道を進んでいくと、道端に木製の看板が建てられていた。
; 			WSTR:(K++) = 『参道に魔物出没注意！
; 			WSTR:(K++) = 　戦闘の心得がない方は分社でのお参りを！
; 			KSTR:(K++) = 　戦える方は出来る限り魔物の駆除にご協力ください』_PAGE
; 			WSTR:(K++) = 看板のすぐ近くには、ふよふよと精霊系の魔物が浮いている。
; 			WSTR:(K++) = ここは社会貢献をしておくとしよう。%CALLNAME:PLAYER%たちは武器を構え、魔物の駆除に入る。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			;前のエネミーを再利用
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv2_風のエレメンタル
; 			敵BATTLE_STATE:0:ランダムエネミーフラグ = 17
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv2_風のエレメンタル
; 			敵BATTLE_STATE:3:ランダムエネミーフラグ = 17
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv2_風のエレメンタル
; 			敵BATTLE_STATE:4:ランダムエネミーフラグ = 17
; 			敵BATTLE_STATE_STR:7:エネミー名 = Lv2_風のエレメンタル
; 			敵BATTLE_STATE:7:ランダムエネミーフラグ = 17
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = %CALLNAME:PLAYER%たちは周囲の魔物を蹴散らした。
; 				WSTR:(K++) = 精霊系の魔物はまた湧いてくるだろうが、しばらくは安全になるはずだ。
; 				WSTR:(K++) = 今後も魔物はなるべく倒しながら進んでいこう。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv2_風のエレメンタル
; 			敵BATTLE_STATE:0:ランダムエネミーフラグ = 17
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv2_風のエレメンタル
; 			敵BATTLE_STATE:3:ランダムエネミーフラグ = 17
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv2_風のエレメンタル
; 			敵BATTLE_STATE:4:ランダムエネミーフラグ = 17
; 			敵BATTLE_STATE_STR:7:エネミー名 = Lv2_風のエレメンタル
; 			敵BATTLE_STATE:7:ランダムエネミーフラグ = 17
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_4_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 4
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_5_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 5
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "7_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 参道に沿って山の上へと昇っていく。
; 			WSTR:(K++) = 意外にも本宮への道にも参拝客はいて、腕に覚えのありそうな騎空士の姿が多い。
; 			WSTR:(K++) = 空を旅する騎空士にとって風の星晶獣は参拝するに値する縁起物なのだろう。
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちは参拝客に混じって更に道を進んでいく。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 腕に覚えのありそうな騎空士たちが本宮への道を進んでいる。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_5_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 5
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 脇道の行き止まりに、緑色に発光する石ころが落ちている。
; 			WSTR:(K++) = 手に取ってみると、それは風の魔力が固まった魔石のようだ。
; 			CALL 知識技能所持者検索("魔法知識", 1)
; 			LOCAL = RESULT
; 			IF LOCAL > -1
; 				WSTR:(K++) = %CALLNAME:LOCAL%が魔石から余計な魔力を取り除き、魔石を簡単な道具として加工する。
; 				WSTR:(K++) = %CALLNAME:PLAYER%たちは「風の魔石」を3個に手に入れた！
; 				CALL アイテム増減汎用処理("風の魔石", 3)
; 				SETBIT ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4
; 			ELSE
; 				WSTR:(K++) = ただ、このままでは使い物にならないだろう。
; 				WSTR:(K++) = 魔法知識を持つ仲間がいれば加工出来たかもしれないが……。
; 			ENDIF
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もう目ぼしいものは何もない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_5_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 5
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "3_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 強敵がいるぜ！的な前フリ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT



; @ダンジョンマス情報_風遊ぶ渓谷の参道_7_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 7
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = そこそこ登ってきたような気がするが、まだまだ先は長そうだ。
; 			WSTR:(K++) = 現時点で二合目くらいの高さだろうか。
; 			WSTR:(K++) = ほどほどに休みながら先に進んでいこう。
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(8, 2)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 8
; 		ダンジョン現在位置:1 = 2
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_7_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 7
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "5_6")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		ダンジョン現在位置:0 = 8
; 		ダンジョン現在位置:1 = 5
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_7_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 7
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "4_8")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		ダンジョン現在位置:0 = 8
; 		ダンジョン現在位置:1 = 7
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_8_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 8
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "10_2")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		ダンジョン現在位置:0 = 7
; 		ダンジョン現在位置:1 = 2
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_8_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 8
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 7-5
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_8_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 8
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 7-7
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_9_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 9
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "8_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_10_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 10
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "12_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "11_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 山道を進んでいくと、分かれ道で大きな荷物を抱えて座り込んでいる青年がいた。
; 			WSTR:(K++) = 大丈夫だろうかと声を掛けると、青年は大丈夫だと笑顔で返す。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 「ちょっと素材を取りすぎちゃってね。休みながら帰ろうとしてただけなんだ。
; 			WSTR:(K++) = 　ここの分かれ道を右に行くと『風切四つ葉』が取れる場所に出るんだよ」
; 			CALL メッセージ欄表示用関数(,"大荷物の青年",,0)
; 			CALL 口上変数初期化
; 			WSTR:(K++) = 風切四つ葉といえば、風の力を多く蓄えた植物素材だ。
; 			WSTR:(K++) = 常時強風を当てなければ育たないため、買うとなるとそれなりに高い素材でもある。
; 			WSTR:(K++) = 青年曰く、取りすぎなければ誰でも採取して構わないとのことだ。
; 			WSTR:(K++) = 興味があるなら、少し寄り道しても良いだろう。採取場への道は向かって右側だ。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 向かって右が採取場、左が頂上への道だ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_10_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 10
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "8_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 闇っぽいエネミーがいるぜ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_11_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 11
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "13_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "11_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 脇道に入ってみると、確かに風切四つ葉が幾つも群生している。
; 			WSTR:(K++) = しかし、本道に近い場所は既に採取された後のようだ。
; 			WSTR:(K++) = 取り尽くしてしまうのは本意ではない。もう少し奥に行ってみよう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 風切四つ葉が幾つも群生している。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_11_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 11
; マス分岐 = 4
; #DIM 採取量

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		IF ダンジョン内一時変数:3
; 			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 		ELSE
; 			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱
; 		ENDIF
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 立派に育った風切四つ葉の群生地だ。
; 			WSTR:(K++) = これだけ育っていればそれなりの量を採取しても平気だろう。
; 			採取量 = RAND:3 + 3
; 			KSTR:(K++) = %CALLNAME:PLAYER%は「風切四つ葉」を{採取量}個手に入れた！_PAGE
; 			CALL 素材入手処理("風切四つ葉", 採取量)
; 			WSTR:(K++) = 地形の関係か、この辺りは特に風の魔力が強い。
; 			WSTR:(K++) = しばらく時間を置けば、また風切四つ葉が採取出来るようになるだろう。
; 			KSTR:(K++) = 場所を覚えておくと役立つかもしれない。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 			ダンジョン内一時変数:3 = 1
; 		ELSEIF ダンジョン内一時変数:3 == 0
; 			WSTR:(K++) = 風切四つ葉が立派に育っている。
; 			WSTR:(K++) = このくらい育っていればまた採取していっても大丈夫だろう。
; 			採取量 = RAND:3 + 3
; 			WSTR:(K++) = %CALLNAME:PLAYER%は「風切四つ葉」を{採取量}個手に入れた！
; 			CALL 素材入手処理("風切四つ葉", 採取量)
; 			ダンジョン内一時変数:3 = 1
; 		ELSE
; 			KSTR:(K++) = まだ採取出来るほど素材が育っていないようだ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_11_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 11
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_11_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 11
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "9_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "10_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 谷間が深くて暗いぜ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_12_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 12
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "12_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "14_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_12_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 12
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_12_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 12
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "11_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "11_8")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_13_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 13
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "15_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "14_3")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 採取場を進むと、がさがさと葉音を立てながらウサギの魔物が複数現れた。
; 			WSTR:(K++) = 口元には葉っぱが咥えられている。草食の魔物なのだろうか？
; 			WSTR:(K++) = その愛くるしさに%CALLNAME:PLAYER%が手を差し出してみると、ウサギたちは牙を剥いて襲いかかってきた！！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv18_エムダラビット
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv18_エムダラビット
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv18_エムダラビット
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = どうやら草食ではなく雑食の魔物だったようだ。
; 				WSTR:(K++) = 魔物を見た目で判断しては危ないなと思いながら、%CALLNAME:PLAYER%たちは先に進む。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv18_エムダラビット
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv18_エムダラビット
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv18_エムダラビット
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_13_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 13
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "12_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 岩がゴロゴロしてて進みにくいぜ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_14_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 14
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "15_2")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_14_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 14
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		IF ダンジョン内一時変数:4
; 			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 		ELSE
; 			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱
; 		ENDIF
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 立派に育った風切四つ葉の群生地だ。
; 			WSTR:(K++) = これだけ育っていればそれなりの量を採取しても平気だろう。
; 			採取量 = RAND:3 + 3
; 			KSTR:(K++) = %CALLNAME:PLAYER%は「風切四つ葉」を{採取量}個手に入れた！_PAGE
; 			CALL 素材入手処理("風切四つ葉", 採取量)
; 			WSTR:(K++) = 地形の関係か、この辺りは特に風の魔力が強い。
; 			WSTR:(K++) = しばらく時間を置けば、また風切四つ葉が採取出来るようになるだろう。
; 			KSTR:(K++) = 場所を覚えておくと役立つかもしれない。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 			ダンジョン内一時変数:4 = 1
; 		ELSEIF ダンジョン内一時変数:4 == 0
; 			WSTR:(K++) = 風切四つ葉が立派に育っている。
; 			WSTR:(K++) = このくらい育っていればまた採取していっても大丈夫だろう。
; 			採取量 = RAND:3 + 3
; 			WSTR:(K++) = %CALLNAME:PLAYER%は「風切四つ葉」を{採取量}個手に入れた！
; 			CALL 素材入手処理("風切四つ葉", 採取量)
; 			ダンジョン内一時変数:4 = 1
; 		ELSE
; 			KSTR:(K++) = まだ採取出来るほど素材が育っていないようだ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_15_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 15
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 16-2
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_15_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 15
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = エネミーのあとエレメント拾う
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_15_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 15
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "13_8")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 48-7
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_16_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 16
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_3")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 15-2
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT



; @ダンジョンマス情報_風遊ぶ渓谷の参道_18_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 道具があれば下にいけるよ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_18_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 下に降りられそうだ！
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_18_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 49-0
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT




; @ダンジョンマス情報_風遊ぶ渓谷の参道_21_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "23_2")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_21_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 吊り橋渡ったぜ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT



; @ダンジョンマス情報_風遊ぶ渓谷の参道_23_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 23
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_24_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 24
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_4")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_25_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 25
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "29_4")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_26_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 26
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "27_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 休憩所あるよ的な
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_26_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 26
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_26_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 26
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 50-5
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_27_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 27
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "27_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 回復マス、休憩所
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_27_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 27
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_28_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "30_1")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_風遊ぶ渓谷の参道:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_28_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_29_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 29
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		SIF ダンジョン内一時変数:1 == 0
; 			ダンジョンマス画像URL_重ね表示 = えっちアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;えっちイベ
; 		;XXXXを使ってないダンジョン内一時変数の番号に変えること
; 		IF ダンジョン内一時変数:1
; 		ELSE
; 			CALL ダンジョンハプニング基本処理()
; 			F RESULT
; 				ダンジョン内一時変数:1 = 1
; 			ENDIF
; 			CALL 口上変数初期化
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_29_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 29
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "29_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "29_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "31_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_29_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 29
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 55-7
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_30_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 30
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "31_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "30_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_30_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 30
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 53-1
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_31_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 31
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_31_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 31
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_32_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 32
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_3")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_33_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 33
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_34_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = このさき土砂崩れと工事現場、アブねぇぜ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_34_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_34_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 52-0
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_35_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 35
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "37_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 工事業者用の小屋がある
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_35_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 35
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_36_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 36
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "38_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 小高く積まれた土砂から飛べそうだ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_36_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 36
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 51-2
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_37_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 37
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 工事業者から話を聞ける
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_37_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 37
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "38_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "37_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "37_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 工事業者から話を聞ける
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_37_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 37
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 工事業者から話を聞ける
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_38_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 38
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 土砂崩れで進めねぇ！
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_38_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 38
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 工事業者から話を聞ける
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT




; @ダンジョンマス情報_風遊ぶ渓谷の参道_41_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 41
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_42_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 42
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "41_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "46_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_42_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 42
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "42_4")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 55-2
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_43_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 43
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "45_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_44_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン_赤
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_45_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 45
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_46_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 46
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "43_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT



; @ダンジョンマス情報_風遊ぶ渓谷の参道_48_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 48
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "48_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_48_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 48
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_48_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 48
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 15-7
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_49_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 49
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "49_2")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 18-8
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_49_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 49
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "50_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "49_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_49_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 49
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "50_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_50_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 50
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		SIF ダンジョン内一時変数:2 == 0
; 			ダンジョンマス画像URL_重ね表示 = えっちアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;えっちイベ
; 		;XXXXを使ってないダンジョン内一時変数の番号に変えること
; 		IF ダンジョン内一時変数:2
; 		ELSE
; 			CALL ダンジョンハプニング基本処理()
; 			IF RESULT
; 				ダンジョン内一時変数:2 = 1
; 			ENDIF
; 			CALL 口上変数初期化
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_50_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 50
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_50_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 50
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "50_7")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 26-8
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_50_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 50
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "48_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "52_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "51_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_50_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 50
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_51_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 51
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "51_4")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 36-8
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_51_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 51
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "48_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_51_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 51
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_52_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 52
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "52_4")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 34-8
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_52_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 52
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "52_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_52_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 52
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_52_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 52
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_52_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 52
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "50_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_53_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_3")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 30-8
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_53_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_53_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_53_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_54_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_54_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_54_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_54_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "52_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_風遊ぶ渓谷の参道_55_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 42-8
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_55_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_風遊ぶ渓谷の参道_55_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_8")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 29-8
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(移動先X, 移動先Y)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 移動先X
; 		ダンジョン現在位置:1 = 移動先Y
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


