

; @ダンジョンマス情報_深海の古戦場跡_2_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 2
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "3_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 頭上がきらきら光ってる、下は真っ暗。勇気を持って進め
; 			WSTR:(K++) = 頭上がきらきら光ってる、下は真っ暗。勇気を持って進め
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_3_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 3
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "5_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "3_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海岸の入口
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_3_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 3
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "4_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海の中を歩く、フィールドの説明
; 		火攻撃半減、水攻撃１．２倍
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_3_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 3
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 11-0へ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_4_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 4
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 魚とバトル
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_5_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 5
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "6_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "7_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 砂浜を進む
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_6_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 6
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = カニバトル
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_7_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 7
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 古戦場の様子が見える、シーズンオフ
; 		なんか拾える
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT



; @ダンジョンマス情報_深海の古戦場跡_9_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 9
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 19-5
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_10_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 10
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 16-4
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_10_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 10
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 32-8
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_11_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 11
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "12_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 3-8へ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_12_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 12
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "10_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "9_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "10_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "14_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "15_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "14_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海流がぶつかるところ、いろんなところに行けそう
; 		はぐれないように気をつけて
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT



; @ダンジョンマス情報_深海の古戦場跡_14_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 14
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 17-1へ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_14_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 14
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 25-1
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_15_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 15
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 27-7
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_16_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 16
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "16_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 10-3
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_16_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 16
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "17_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "16_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 魚やカニ
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_17_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 17
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 14-3へ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_17_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 17
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "16_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 34-8
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_18_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "19_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "17_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = この辺は比較的浅い海域
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_18_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 罠、錬金知識
; 		海流に毒が混じっている
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_18_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 38-1
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_18_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = なんかアイテム
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_19_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 19
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 水面がきらきら光って幻想的できれい
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_19_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 19
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 9-5
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_19_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 19
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "20_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 33-5
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_20_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 20
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "19_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = カニとか魚とか
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_21_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "19_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 24-6
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_21_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "19_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_3")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = カニとか魚とか
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_21_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = なんか流れてきた素材系入手
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_21_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 小魚が集まってきてかわいい
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_22_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 22
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "23_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 迷いそうだからちゃんとマップを覚えておこう
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_22_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 22
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "23_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "20_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = デンキンナギが道を塞いでいる。魔物知識１
; 		成功すると道が通れる
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_23_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 23
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 32-3
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_23_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 23
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = えっちマス
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_24_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 24
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 38-4
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_24_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 24
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 21-1
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_24_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 24
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海藻GET、食材分類野菜。再入場で何度でも取れる
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_25_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 25
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 14-7
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_25_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 25
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "24_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 鎧の破片がゆっくりと沈んでいく様子。古戦場は激しいなぁ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_25_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 25
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "27_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "27_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "24_8")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 魚とかカニとか
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_26_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 26
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 貝を倒して中身の真珠を入手
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_26_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 26
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "24_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = だんだん深くなってきた
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_27_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 27
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 指輪ゲット、封鎖魔法にちなんだやつ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_27_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 27
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 15-5
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_27_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 27
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 鮮やかな珊瑚がある。取る？
; 		取るとデカい額のルピゲット、取らないとカリュブディスの好感度UP
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_28_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_0")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 真珠貝
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_28_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "29_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 魔法知識、アンデッドの瘴気
; 		失敗でHPダメージ。上が薄い、下が濃い
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_28_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "30_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 瘴気に対抗するために魚が凶暴化してるんじゃね？
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_28_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "29_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "30_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "27_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = いくら進んでも進まない。魔法知識
; 		突破すると移動出来る
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_29_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 29
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "31_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 瘴気を海の塩分が中和してる。すげー
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_29_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 29
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 消耗品GET。クリアソルト
; 		現在の行動者のステータスに依存した光属性ダメージ
; 		アンデッド特攻
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_30_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 30
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "31_4")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 魚とかンナギとか
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_30_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 30
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 34-0
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_31_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 31
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 消耗品GET。クリアソルト
; 		現在の行動者のステータスに依存した光属性ダメージ
; 		アンデッド特攻
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_31_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 31
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 37-5
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_32_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 32
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 23-3
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_32_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 32
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "32_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海底を踏むとヒラメがいた。ごめんね
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_32_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 32
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "32_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 10-7
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_33_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 33
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 19-8
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_33_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 33
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "32_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_5")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = カニとかンナギとか
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_33_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 33
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = さくさくと海底の砂がいい音がする。海底散歩をリゾートにいれるのもいいかも
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_34_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 30-6
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_34_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "32_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = この辺が一番深い
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_34_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海底に剣が刺さってる。なんか禍々しい気配がする……
; 		拾う？
; 		拾ったら奥義ゲージが０になる。拾わないなら何もなし、後で拾える
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_34_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 17-8
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_35_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 35
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = でっっっっけぇサメとすれ違う
; 		攻撃する？
; 		したら尻尾であしらわれてHPダメージ、しないなら見逃してくれる
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_35_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 35
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 雪みたいなのが降ってる。マリンスノー。（クリアソルトマスで最初に拾った時だけ）
; 		消耗品GET。クリアソルト
; 		現在の行動者のステータスに依存した光属性ダメージ
; 		アンデッド特攻
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_36_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 36
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "38_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_2")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = カニとかンナギとか
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_36_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 36
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "38_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海がすっごい綺麗。古戦場で普段島に人がいないからかな？
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_36_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 36
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 回復マス
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_37_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 37
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "37_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 31-4
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_37_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 37
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "39_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = なんか船が見えてきたぞ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_38_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 38
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 18-4
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_38_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 38
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 24-3
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_39_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 39
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 41-1
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_40_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 40
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船首の女神像が水フィールドを弾いてる。ONOFF可能。フィールドの適用切り替え
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_41_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 41
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_41_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 41
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 女部屋。Eマッサージャ入手
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_42_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 42
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "40_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "42_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ;船首の方向へ向かう。途中の扉には下っ端部屋と書いてある
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_42_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 42
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "43_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "42_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "41_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 下っ端部屋。扉は３つ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_42_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 42
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 下（船倉）に降りてく階段。49-0
; 		先にカリュブディスの話を聞くように誘導する
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_43_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 43
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 男部屋。雑魚スケルトン
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_44_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 見張り台、マストを伝って降りていく。フィールド解除
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_44_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = マストの下にアンデッドがうろついてるぜぇ！
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_44_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "42_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "46_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "45_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = アンデッドとのバトル、スケルトン
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_44_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 倉庫。ろくなもんがないが指輪ゲット
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_45_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 45
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "46_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "45_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 通路。調理室とか倉庫とかある
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_45_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 45
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 食材の幽霊
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_46_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 46
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船尾の方向へ向かう……が、ぐちゃぐちゃになってて渡れない
; 		カリュブディスがここにいて事情を聞かせてくれる。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_46_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 46
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 調理室。レシピのヒントがある。
; 		海藻を使うなんか……昆布締め？
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT




; @ダンジョンマス情報_深海の古戦場跡_49_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 49
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "50_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "51_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 42-7
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_50_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 50
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "51_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ハシゴを降りて更に下へ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_51_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 51
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = こっちは船長室とか色々ある通路
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_51_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 51
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "52_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_4")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 漕手のスケルトンが襲ってくる
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_52_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 52
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = えっちマス
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_53_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 宝物庫だ！財宝ざくざく……と思ったら全部呪われてて解呪費用のほうが高いよこんなん！
; 		比較的マシなのを拾う。１０万ルピGET
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_53_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 廊下。なんか厳重な扉ある。宝物庫かな？
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_53_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 宝物庫だ！　でもほとんどが海水でダメになってる……
; 		なんか耳飾りGET
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_53_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_4")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = もっかいエネミー。奥の強いのに引き寄せられてんのかな？
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_53_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 魔法知識。アンデッドの瘴気めっっっちゃくちゃ濃い
; 		知識なくてもクリアソルト消費で無傷
; 		どっちもダメならHPに大ダメージ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_54_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船長室。金目のものと日記がある
; 		カリュブディスを倒して捕まえる計画だったらしい。
; 		ついでにスケベなこともするとかなんとか
; 		あとは呪われた剣とそれに囚われた剣士の話（ボスと海底に刺さってた剣）
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_54_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 廊下。なんか豪華な扉ある。船長室かな？
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_54_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = SMルームみたいな部屋。船長の趣味だったのかな……
; 		ここのアイテム漁りたくねぇ～～
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_55_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船尾側に続く通路は完全に崩れている
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_55_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船尾側に続く通路は完全に崩れている
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_55_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ボスおるで！みたいな前フリ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_55_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン_赤
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ボス。なんだっけあのデカいスケルトン。闇属性。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT



