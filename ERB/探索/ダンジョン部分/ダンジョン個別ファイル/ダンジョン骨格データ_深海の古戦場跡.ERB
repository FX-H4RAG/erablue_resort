

; ;推奨レベルを14くらいに


; @固有戦闘開始時処理_特殊_海中フィールド
; ;海中の場合、フィールドを初手に貼る。
; 展開中フィールド名格納 = 海中
; ;常時海中なので特に貼る時のメッセージは出さない

; @固有バフ・デバフ処理_フィールド_海中_水強化(隊列番号, ダメージ値)
; #DIM 隊列番号
; #DIM ダメージ値
; ;水ダメ1.2倍
; RETURN ダメージ値 * 12 / 10

; @固有バフ・デバフ処理_フィールド_海中_火強化(隊列番号, ダメージ値)
; #DIM 隊列番号
; #DIM ダメージ値
; ;火ダメ半減
; RETURN ダメージ値 / 2

; @ダンジョンマス情報_深海の古戦場跡_2_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 2
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "3_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ゆっくりと海の中へ沈み、地上から離れていく。
; 			WSTR:(K++) = 上を見ると日差しに照らされた海面が宝石のようにきらきらと美しく光っている。
; 			WSTR:(K++) = 反面、下を見ると段々と暗く、どこまでも続いているかのような海中が見える……。
; 			WSTR:(K++) = 魔法が続く限り、呼吸も水圧も問題にはならない。勇気を持って進もう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_3_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 3
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "5_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "3_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちは星晶獣eraから教えてもらった場所に足を踏み入れた。
; 			WSTR:(K++) = 古戦場跡の島に存在する海岸だ。
; 			WSTR:(K++) = 今のシーズンは別のエリアで星晶獣たちが暴れているため、この近辺は静かだが……。
; 			WSTR:(K++) = 魔物たちはシーズンに関係なく存在する。気をつけて進もう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 海岸は穏やかな波だけが動いている。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_3_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 3
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "4_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちは水中行動用の魔法を掛け、海の中へと入っていく。
; 			WSTR:(K++) = 魔法が効いている間は水中でも陸上と変わらないように戦闘可能で、呼吸も問題ない。_PAGE
; 			WSTR:(K++) = しかし、やはり水中は水中だ。
; 			WSTR:(K++) = _COLOR_%カラーパレット_HTML("黄")%_火属性の攻撃はダメージが半減_してしまうだろう。
; 			WSTR:(K++) = その代わり、_COLOR_%カラーパレット_HTML("黄")%_水属性の攻撃は威力が２割増_することが期待出来る。
; 			WSTR:(K++) = 当然弱点を突いた方が強いが、それでも水の攻撃が強くなっていることは覚えておこう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = ここからは水中だ。
; 			KSTR:(K++) = _COLOR_%カラーパレット_HTML("黄")%_火属性の攻撃はダメージが半減_してしまうだろう。
; 			KSTR:(K++) = その代わり、_COLOR_%カラーパレット_HTML("黄")%_水属性の攻撃は威力が２割増_することが期待出来る。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_3_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 3
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海はまだまだ深さがあるようだ。
; 			WSTR:(K++) = 海と縁深い星晶獣はどこにいるのだろうか……早めに見つかると良いのだが。
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(11, 0)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 11
; 		ダンジョン現在位置:1 = 0
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_4_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 4
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 魚とバトル
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:8:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:9:エネミー名 = Lv13_マイトフィッシュ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:8:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:9:エネミー名 = Lv13_マイトフィッシュ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_5_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 5
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "6_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "7_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 目的地は海中だが、付近の偵察も兼ねて砂浜を進んでみる。
; 			WSTR:(K++) = 遠くからは騎空士たちと星晶獣たちが争う音が聞こえてきている。
; 			WSTR:(K++) = あまり戦場には近づかない方がいいだろう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 遠くからは騎空士たちと星晶獣たちが争う音が聞こえてきている。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_6_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 6
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 砂浜を歩いていると、突然砂が盛り上がり……巨大なカニが現れた！
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちのことをエサと認識しているのか、すぐさま襲いかかってくる！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv14_髑髏カニ
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = %CALLNAME:PLAYER%たちはカニを撃退した。
; 				WSTR:(K++) = 流石は古戦場跡に生息する魔物。凶暴で好戦的な個体ばかりらしい。
; 				WSTR:(K++) = ここに留まっているとまた襲われそうだ。早めに移動しよう。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv14_髑髏カニ
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_7_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 7
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ここまで来ると、戦っている様子が遠目に見える。
; 			WSTR:(K++) = 巻き込まれないためにもこれ以上は近づかない方がいいだろう。_PAGE
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちが道を引き返そうとすると、足元に小さな指輪を見つけた。
; 			WSTR:(K++) = だいぶ古ぼけてはいるが、性能は中々良さそうだ。
; 			WSTR:(K++) = 落としてから数年は経っていそうで、今更所有者は見つからないだろう。貰ってしまっても良さそうだ。_PAGE
; 			WSTR:(K++) = %CALLNAME:PLAYER%は偉勲の指輪・重を手に入れた！
; 			CALL 汎用指輪取得処理("偉勲の指輪・重", 3)
; 		ELSE
; 			KSTR:(K++) = 戦っている様子が遠目に見える。これ以上は近づかない方がいいだろう。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_9_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 9
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(19, 5)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 19
; 		ダンジョン現在位置:1 = 5
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_10_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 10
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(16, 4)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 16
; 		ダンジョン現在位置:1 = 4
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_10_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 10
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(32, 8)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 32
; 		ダンジョン現在位置:1 = 8
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_11_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 11
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "12_4")
; 	CASE "マスイベント"
; 		ダンジョン現在位置:0 = 3
; 		ダンジョン現在位置:1 = 8
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_12_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 12
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "10_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "9_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "10_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "14_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "15_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "14_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海を潜っていくと、複数の海流がぶつかるポイントを見つけた。
; 			WSTR:(K++) = ここから海流に乗れば、効率よく周囲を探索出来るだろう。
; 			WSTR:(K++) = はぐれないようにだけ気をつけて探索しよう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 複数の海流がぶつかるポイントだ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT



; @ダンジョンマス情報_深海の古戦場跡_14_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 14
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(17, 1)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 17
; 		ダンジョン現在位置:1 = 1
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_14_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 14
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(25, 1)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 25
; 		ダンジョン現在位置:1 = 1
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_15_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 15
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(27, 7)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 27
; 		ダンジョン現在位置:1 = 7
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_16_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 16
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "16_6")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(10, 3)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 10
; 		ダンジョン現在位置:1 = 3
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_16_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 16
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "17_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "16_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 海を泳いでいると、何やら大きな魚の死骸を食べている魚やカニたちの姿を見つけた。
; 			WSTR:(K++) = 彼らは%CALLNAME:PLAYER%たちの姿を見ると、エサを横取りされまいと襲いかかってくる！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:7:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:8:エネミー名 = Lv13_マイトフィッシュ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 魚たちを大人しくさせた後、ゆっくりと距離を取る。
; 				WSTR:(K++) = 誤解だと伝わったようで、魚やカニは君たちを敵ではないと理解したようだ。
; 				WSTR:(K++) = あえて敵を増やす必要もない。用事がない限りは、食事の邪魔はしないでおこう
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:7:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:8:エネミー名 = Lv13_マイトフィッシュ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_17_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 17
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_1")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(14, 3)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 14
; 		ダンジョン現在位置:1 = 3
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_17_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 17
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "16_6")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(34, 8)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 34
; 		ダンジョン現在位置:1 = 8
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_18_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "19_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "17_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = この辺は比較的浅い海域のようだ。
; 			WSTR:(K++) = 薄暗くはあるが、まだ太陽の光で周囲を把握する事ができる。
; 			WSTR:(K++) = 泳いでいる魚も小魚が多く、懐いているかのように寄ってきた。
; 			WSTR:(K++) = リゾートに海を作った後は、こういった潜水散歩を取り入れてみてもいいかもしれない。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = この辺は比較的浅い海域のようだ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_18_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中を進んでいると、なにか妙な匂いがした。
; 			CALL 知識技能所持者検索("錬金知識", 1)
; 			LOCAL = RESULT
; 			IF LOCAL > -1
; 				WSTR:(K++) = %CALLNAME:LOCAL%は荷物から幾つかの薬を取り出すと、周囲にばら撒く。
; 				WSTR:(K++) = 付近の海水の一部が汚染され、毒化していたようだ。
; 				WSTR:(K++) = どうやら、どこからか流されてきた瘴気が原因のようだが……。
; 				WSTR:(K++) = 汚染を中和出来たことを確認し、%CALLNAME:PLAYER%たちは先に進む。
; 			ELSE
; 				WSTR:(K++) = 何の匂いだろうか？　と首を傾げていると、突然体に痛みが走る！
; 				WSTR:(K++) = 全員のＨＰが２５０減少した！
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 口上変数初期化
; 				FOR LOCAL, 0, 4
; 					SIF BATTLE_STATE:LOCAL:0 < 1
; 						CONTINUE
; 					BATTLE_STATE:LOCAL:ＨＰ = MAX(BATTLE_STATE:LOCAL:ＨＰ - 250, 1)
; 				NEXT
; 				WSTR:(K++) = どうやら海水の一部が汚染され、毒化していたようだ。
; 				WSTR:(K++) = %CALLNAME:PLAYER%たちは急いでこの場を離れる。
; 				WSTR:(K++) = 錬金の知識があれば、事前に判別出来たかもしれないが……この場所には近寄らないようにしよう。
; 			ENDIF
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 汚染されていた海域だ。近寄らないようにしよう。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_18_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_2")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(38, 1)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 38
; 		ダンジョン現在位置:1 = 1
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_18_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 18
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱
; 		ELSE
; 			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 		ENDIF
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中を進んでいると、水中に浮く石ころを見つけた。
; 			WSTR:(K++) = 手に取ってみると、それは水の魔力が固まった魔石のようだ。
; 			CALL 知識技能所持者検索("魔法知識", 1)
; 			LOCAL = RESULT
; 			IF LOCAL > -1
; 				WSTR:(K++) = %CALLNAME:LOCAL%が魔石から余計な魔力を取り除き、魔石を簡単な道具として加工する。
; 				WSTR:(K++) = %CALLNAME:PLAYER%たちは「水の魔石」を3個に手に入れた！
; 				CALL アイテム増減汎用処理("水の魔石", 3)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ELSE
; 				WSTR:(K++) = ただ、このままでは使い物にならないだろう。
; 				WSTR:(K++) = 魔法知識を持つ仲間がいれば加工出来たかもしれないが……。
; 			ENDIF
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もう目ぼしいものは何もない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_19_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 19
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "18_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = この辺りの海域には星晶獣の気配は感じられない。
; 			WSTR:(K++) = 美しい海と、そこに暮らす魚の姿があるだけだ。
; 			WSTR:(K++) = こうして見ている分には、魔物が出現する環境のようには見えないのだが。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = この辺りの海域には星晶獣の気配は感じられない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_19_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 19
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_3")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(9, 5)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 9
; 		ダンジョン現在位置:1 = 5
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_19_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 19
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "20_7")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(33, 5)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 33
; 		ダンジョン現在位置:1 = 5
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_20_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 20
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "19_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 近くから、ぱちぱちと何かが弾けるような音が聞こえる……
; 			WSTR:(K++) = 音の出どころを探してみると、海中にぼんやりと光る何かを見つけた。
; 			WSTR:(K++) = あれは……電気を放つンナギの一種だ！
; 			WSTR:(K++) = 君たちへとまっすぐ襲いかかってくる！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv15_デンキンナギ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 電気で痺れながらも、ンナギの撃退に成功する。
; 				WSTR:(K++) = 属性違いの攻撃は対策がしにくく厄介な相手だ。
; 				WSTR:(K++) = 今後戦う時は、技を放たせる前に速攻を掛けた方が良いだろう。
; 				WSTR:(K++) = %CALLNAME:PLAYER%たちは対策を考えながら先に進む。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv15_デンキンナギ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_21_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "19_0")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(24, 6)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 24
; 		ダンジョン現在位置:1 = 6
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_21_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "19_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_3")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちが海中を進んでいると、巨大なカニや魚が近寄ってきた。
; 			WSTR:(K++) = 彼らは空腹なのか、明らかに%CALLNAME:PLAYER%たちを餌として認識している。
; 			WSTR:(K++) = ハサミを振り上げ、襲いかかってきた！！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:7:エネミー名 = Lv14_髑髏カニ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 撃退された海産物たちは蜘蛛の子を散らすように逃げていく。
; 				WSTR:(K++) = 海では見慣れないながらも、鱗も棘もない人間は格好のエサに見えるのだろう。
; 				WSTR:(K++) = これからも絡まれそうだと思いながら、%CALLNAME:PLAYER%たちは先に進む。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:7:エネミー名 = Lv14_髑髏カニ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_21_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海流に乗って、何かビンのようなものが流れてきた。
; 			WSTR:(K++) = キャッチしてみるとそれは昔作られたワインだった。
; 			KSTR:(K++) = ビンや封に問題はなく、中身は無事のように思える。_PAGE
; 			WSTR:(K++) = もし飲める状態なら、長く熟成された高級なワインとして楽しめるだろう。
; 			WSTR:(K++) = 持ち帰って調べてみよう。
; 			WSTR:(K++) = %CALLNAME:PLAYER%は「100年物のワイン」を手に入れた！
; 			CALL 素材入手処理("100年物のワイン", 1)
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものはなにもない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_21_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 21
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海の中は魔物だけではなく、普通の魚も多く生息している。
; 			WSTR:(K++) = 回転しながら水中を移動するカキや、棘を飛ばして魚を狩るンニなど……。
; 			WSTR:(K++) = ……近づかないようにしよう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 海には近づかない方がいい生物も多くいる。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_22_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 22
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "23_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海流は複雑に絡み合い、予測できないルートで流れている。
; 			WSTR:(K++) = どこがどこに繋がっているのか、きちんと覚えておかないと迷子になってしまうだろう。
; 			WSTR:(K++) = あるいは行ったことのない場所を虱潰しに踏んでいけば、いつかは抜けられるはずだ。
; 			WSTR:(K++) = 全滅しないよう、何度かに分けて探索を進めよう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 海流は複雑に絡み合い、予測できないルートで流れている。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_22_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 22
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		SIF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "23_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "20_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "21_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_3")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中を進んでいると、巨大なデンキンナギを見つけた。
; 			KSTR:(K++) = ンナギは襲ってくるわけではなく、しかし横を通ろうとすると威嚇してくる。_PAGE
; 			CALL 知識技能所持者検索("魔物知識", 1)
; 			LOCAL = RESULT
; 			IF LOCAL > -1
; 				WSTR:(K++) = %CALLNAME:LOCAL%は周囲を探し、小さな魚を見つけるとンナギの方へと追い立てていく。
; 				WSTR:(K++) = 魚はンナギの体に吸着し、電気を吸収し始めた。
; 				WSTR:(K++) = どうやら溜まりすぎた電気を吸い取ってくれる、共生関係にある小魚らしい。
; 				WSTR:(K++) = 電気を発散したンナギは満足そうな顔でどこかへと泳いでいった。
; 				WSTR:(K++) = これで先に進めそうだ。
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ELSE
; 				WSTR:(K++) = 無理やり通るのは難しそうだ。
; 				WSTR:(K++) = 魔物の知識を持つ仲間がいれば打開策があったかもしれないが……。
; 				WSTR:(K++) = ここは一旦引き返そう。
; 			ENDIF
; 		ELSE
; 			KSTR:(K++) = もう特別なものはなにもない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_23_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 23
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "22_3")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(32, 3)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 32
; 		ダンジョン現在位置:1 = 3
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_23_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 23
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		SIF ダンジョン内一時変数:0 == 0
; 			ダンジョンマス画像URL_重ね表示 = えっちアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;えっちイベ
; 		;XXXXを使ってないダンジョン内一時変数の番号に変えること
; 		IF ダンジョン内一時変数:0
; 		ELSE
; 			CALL ダンジョンハプニング基本処理()
; 			IF RESULT
; 				ダンジョン内一時変数:0 = 1
; 			ENDIF
; 			CALL 口上変数初期化
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_24_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 24
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_2")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(38, 4)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 38
; 		ダンジョン現在位置:1 = 4
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_24_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 24
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_6")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(21, 1)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 21
; 		ダンジョン現在位置:1 = 1
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_24_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 24
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		IF ダンジョン内一時変数:2 == 0
; 			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱
; 		ELSE
; 			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 		ENDIF
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海藻がたくさん生えている岩場を見つけた。
; 			WSTR:(K++) = 立派な昆布も多い。少し採取していこう。
; 			KSTR:(K++) = %CALLNAME:PLAYER%は「昆布」を手に入れた！_PAGE
; 			CALL 素材入手処理("昆布", 1)
; 			ダンジョン内一時変数:2 = 1
; 			WSTR:(K++) = どうやら栄養豊富な海域で、成長も早いようだ。
; 			WSTR:(K++) = また日を改めれば採取が可能になるだろう。この場所を覚えておこう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			IF ダンジョン内一時変数:2 == 0
; 				WSTR:(K++) = 立派な昆布が生えている。少し採取していこう。
; 				WSTR:(K++) = %CALLNAME:PLAYER%は「昆布」を手に入れた！
; 				CALL 素材入手処理("昆布", 1)
; 				ダンジョン内一時変数:2 = 1
; 			ELSE
; 				WSTR:(K++) = 食べごろの昆布は見当たらない。また今度来よう。
; 			ENDIF 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_25_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 25
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_2")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(14, 7)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 14
; 		ダンジョン現在位置:1 = 7
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_25_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 25
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_5")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "24_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ふと上を見上げると、ゆっくりと沈んでいく壊れた鎧を見つけた。
; 			WSTR:(K++) = 着用していた人間は見当たらない。恐らく古戦場での激しい戦いの結果だろう。
; 			WSTR:(K++) = 持ち主の無事を祈りながら、君たちは先に進む。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 特にめぼしいものはなにもない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_25_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 25
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "27_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "27_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "24_8")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 海底を無数のカニが凄い勢いで走ってくる！
; 			WSTR:(K++) = 避ける間もなく、君たちへとカニが襲いかかってきた！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv14_髑髏カニ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 何匹かのカニたちを退けると、他のカニは君たちを避けてどこかへと走り去っていく。
; 				WSTR:(K++) = 何だったのだろうか。魔物の生態はよくわからないが……。
; 				WSTR:(K++) = とりあえずこれで先に進むことが出来そうだ。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv14_髑髏カニ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_26_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 26
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 貝の魔物を倒すと、口がぱっくりと開き中から巨大な真珠が出てきた。
; 			WSTR:(K++) = これほどの大きさのものは非常に珍しく、贈り物としても最上だろう。
; 			WSTR:(K++) = 戦利品として拝借していこう。
; 			WSTR:(K++) = %CALLNAME:PLAYER%は巨大真珠を手に入れた！
; 			CALL 素材入手処理("巨大真珠", 1)
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものはなにもない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_26_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 26
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "24_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = だんだんと深い海域まで潜ってきた。
; 			WSTR:(K++) = 海底が見える部分も増えてきたが、まだまだ深い場所に降りる道もあるようだ。
; 			WSTR:(K++) = 思わぬトラブルがあるかもしれない。慎重に進もう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = だんだんと深い海域まで潜ってきた。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_27_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 27
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 魔法陣の奥には一つの指輪が落ちていた。
; 			WSTR:(K++) = どうやらこの指輪が暴走し、あの封鎖魔法を作り出していたらしい。
; 			WSTR:(K++) = 自身の周囲にバリアを形成する防御型の指輪のようだ。
; 			WSTR:(K++) = 中々役立ちそうだ。持ち主もいなさそうだし、貰っていこう。
; 			WSTR:(K++) = %CALLNAME:PLAYER%は拒絶の指輪を手に入れた！
; 			CALL 汎用指輪取得処理("拒絶の指輪", 1)
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものはなにもない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_27_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 27
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_8")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(15, 5)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 15
; 		ダンジョン現在位置:1 = 5
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_27_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 27
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			WSTR:(K++) = 海底に、鮮やかに育った美しい珊瑚の森がある。
; 			KSTR:(K++) = これほどのものを持ち帰れば、大層な高値で売れるだろう。_PAGE
; 			KSTR:(K++) = 珊瑚を採取しますか？
; 			KSTR:(K++) = BUTTON_[はい]
; 			KSTR:(K++) = BUTTON_[いいえ]
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			$LOOP_MESSAGE
; 			INPUTS
; 			SELECTCASE RESULTS
; 				CASE "[はい]"
; 					WSTR:(K++) = %CALLNAME:PLAYER%は珊瑚を採取し、崩れないよう大事にしまい込んだ。
; 					WSTR:(K++) = 帰ったらよろず屋を通して好事家に高く買ってもらおう。
; 					WSTR:(K++) = %CALLNAME:PLAYER%は１０万ルピを手に入れた！
; 					MONEY += 100000
; 				CASE "[いいえ]"
; 					カリュブディス信頼度_深海の古戦場跡 += 10
; 					WSTR:(K++) = 珊瑚が育つのは長い時間がかかる。
; 					WSTR:(K++) = 海の環境を壊さないよう、ここは触らないでおこう。
; 				CASEELSE
; 					CLEARLINE 1
; 					GOTO LOOP_MESSAGE
; 			ENDSELECT
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものはなにもない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_28_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン_赤
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "26_0")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			CALL 強敵マス確認
; 			SIF RESULT == 1
; 				RETURN 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 海を進むと、巨大な貝の魔物を見つけた。
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちが戦闘を避けようと回り込もうとすると、貝は回転して行く手を阻んでくる！
; 			WSTR:(K++) = 縄張りを侵されたと感じたのだろうか。戦闘は避けられないようだ。
; 			WSTR:(K++) = 回転した貝が、そのまま君たちへと襲いかかってきた！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv25_真珠貝
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 巨大な貝をなんとか撃退した。
; 				KSTR:(K++) = 非常に硬かったが、口を開いた時に合わせて攻撃を叩き込むことで
; 				WSTR:(K++) = 相手の体勢を崩せたのが大きかっただろう。
; 				WSTR:(K++) = 先に進んでみよう。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv25_真珠貝
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_28_2(ARGS)
; #DIM 使用知識
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "29_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中を進んでいると、なにか妙な匂いがした。
; 			CALL 知識技能所持者検索("錬金知識", 1)
; 			LOCAL = RESULT
;             使用知識 = 0
;             IF LOCAL == -1
;                 CALL 知識技能所持者検索("魔法知識", 1)
;                 LOCAL = RESULT
;                 使用知識 = 1
;             ENDIF
; 			IF LOCAL > -1
; 				WSTR:(K++) = %CALLNAME:LOCAL%はアンデッドの瘴気が周囲に蔓延していると見抜いた！
;                 IF 使用知識
; 					KSTR:(K++) = %CALLNAME:LOCAL%が即席で浄化の魔法を組み、周囲から瘴気を退ける。_PAGE
; 				ELSE
; 					KSTR:(K++) = %CALLNAME:LOCAL%が海の塩分を錬金し、瘴気を退ける簡単な薬を作り出す。_PAGE
; 				ENDIF
; 			ELSE
; 				WSTR:(K++) = これは……アンデッドの瘴気だ！
; 				WSTR:(K++) = 全員のＨＰが３００減少した！
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 口上変数初期化
; 				FOR LOCAL, 0, 14
; 					SIF LOCAL > 3 && LOCAL < 10
; 						CONTINUE
; 					SIF BATTLE_STATE:LOCAL:0 < 1
; 						CONTINUE
; 					BATTLE_STATE:LOCAL:ＨＰ = MAX(BATTLE_STATE:LOCAL:ＨＰ - 300, 1)
; 				NEXT
; 				WSTR:(K++) = %CALLNAME:PLAYER%はアンデッド避けのお守りを取り出し、瘴気を退ける。
; 				KSTR:(K++) = 錬金か魔法の知識があれば、ダメージを受ける前に対策出来たかもしれないが……。_PAGE
; 			ENDIF
; 			WSTR:(K++) = 瘴気は下が濃く、上が薄くなっている。
; 			WSTR:(K++) = 恐らくはアンデッドの巣窟が下の方にあるのだろう。
; 			WSTR:(K++) = ここまで濃い瘴気を発するということは、かなり強いアンデッドのようだ。
; 			WSTR:(K++) = 下へ進むのならば、気をつけた方が良さそうだ。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = アンデッドの瘴気は下が濃く、上が薄くなっている。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_28_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "30_3")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 遠くに牙を剥き出して争う二匹の魚が見える。
; 			WSTR:(K++) = 自らの傷も気にせず、異様な雰囲気で争い合っている……。
; 			WSTR:(K++) = アンデッドの瘴気は普通の魚にも強い影響を与えているようだ。
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちもあまり長い間滞在しない方がいいかもしれない。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 魚たちも凶暴化している。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_28_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 28
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
;         SIF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "25_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "29_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "30_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "27_4")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中を進んでいると、どこか見覚えのある景色が続いている……
; 			WSTR:(K++) = ……いや、これは同じ場所をぐるぐる回っているようだ。
; 			KSTR:(K++) = 先に進もうとしても、少し後ろに戻されてしまっている。_PAGE
; 			CALL 知識技能所持者検索("魔法知識", 1)
; 			LOCAL = RESULT
; 			IF LOCAL > -1
; 				WSTR:(K++) = %CALLNAME:LOCAL%は周囲の魔力を探査し、術式の基点を見つけ出す。
; 				WSTR:(K++) = そこに魔力を流し込むと、この地点を封鎖していた魔法が砕け散った！
; 				WSTR:(K++) = これで障害は無くなった。先に進もう。
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ELSE
; 				WSTR:(K++) = どうにかして進もうとするが、いくら泳げど元の場所に戻されてしまう。
; 				WSTR:(K++) = 魔法知識があれば対処出来るかもしれないが……今のところは諦めて、別の道を進もう。
; 			ENDIF
; 		ELSE
; 			KSTR:(K++) = もう封鎖魔法は無くなっている。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_29_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 29
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "31_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちは瘴気の薄い方向へ進む。
; 			WSTR:(K++) = 目の前で瘴気の変化を見ていてわかったが、どうやら海水が瘴気を分解しているようだ。
; 			WSTR:(K++) = 正確には海水に含まれている塩が瘴気を浄化しているらしい。
; 			WSTR:(K++) = 塩のアイテムがあれば、アンデッドに対して高い効果を発揮するかもしれない。覚えておこう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 塩が瘴気を浄化している。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_29_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 29
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中に、何か白い欠片が漂っている……。
; 			WSTR:(K++) = 自然に結晶化した塩の塊のようだ。
; 			WSTR:(K++) = 塩が持つ浄化の魔力が宿っており、戦闘中にアイテムとして使用出来そうだ。
; 			WSTR:(K++) = %CALLNAME:PLAYER%は「クリアソルト」を３個手に入れた！
; 			CALL アイテム増減汎用処理("クリアソルト", 3)
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものは何も無い。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_30_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 30
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "31_4")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = ばちばちと電気を発するンナギが、魚を伴って泳いでいる。
; 			WSTR:(K++) = ンナギは%CALLNAME:PLAYER%たちを見つけると、激しく威嚇しながら襲いかかってきた！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv15_デンキンナギ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv13_マイトフィッシュ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 凶暴化したンナギたちを退ける。
; 				WSTR:(K++) = 瘴気が蔓延ったままでは探索の邪魔だ。どうにかして原因を排除したいが……。
; 				WSTR:(K++) = 瘴気の濃い方へ行けば何かがわかるかもしれない。先に進もう。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv15_デンキンナギ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv13_マイトフィッシュ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_30_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 30
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "28_5")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(34, 0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 34
; 		ダンジョン現在位置:1 = 0
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_31_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 31
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中に、何か白い欠片が漂っている……。
; 			WSTR:(K++) = 自然に結晶化した塩の塊のようだ。
; 			WSTR:(K++) = 塩が持つ浄化の魔力が宿っており、戦闘中にアイテムとして使用出来そうだ。
; 			WSTR:(K++) = %CALLNAME:PLAYER%は「クリアソルト」を３個手に入れた！
; 			CALL アイテム増減汎用処理("クリアソルト", 3)
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものは何も無い。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_31_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 31
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(37, 5)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 37
; 		ダンジョン現在位置:1 = 5
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_32_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 32
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_3")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(23, 3)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 23
; 		ダンジョン現在位置:1 = 3
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_32_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 32
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "32_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海底を歩いて進んでいると、突然足元が動き出した！
; 			WSTR:(K++) = 砂の下からカレイが慌てて飛び出して逃げていく……。
; 			WSTR:(K++) = どうやら眠っているカレイに気づかずに踏んづけてしまったようだ。
; 			WSTR:(K++) = 逃げていったカレイに心の中で謝罪しながら、%CALLNAME:PLAYER%たちは先に進む。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 特に何も無い。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_32_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 32
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "32_6")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(10, 7)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 10
; 		ダンジョン現在位置:1 = 7
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_33_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 33
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_6")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(19, 8)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 19
; 		ダンジョン現在位置:1 = 8
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_33_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 33
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "32_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_5")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 海底に沈んだ巨大な魚の死骸を、カニとンナギが食べている。
; 			WSTR:(K++) = 彼らは%CALLNAME:PLAYER%たちの存在に気づくと、肉を奪われまいと襲いかかってきた！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv15_デンキンナギ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = カニとンナギを撃退し、%CALLNAME:PLAYER%たちはゆっくりと肉から離れる。
; 				WSTR:(K++) = 餌を奪いに来たのではないということが伝わったのだろうか。
; 				WSTR:(K++) = カニたちはそれ以上襲ってこようとはせず、また食事に戻っていった。
; 				WSTR:(K++) = また誤解される前にこの場を離れよう。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv14_髑髏カニ
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv15_デンキンナギ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_33_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 33
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_8")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海底を歩くと、海底の砂がさくさくと小気味よい音を立てる。
; 			WSTR:(K++) = 水中を移動するだけでなく、海底散歩も観光資源になるだろうか。
; 			WSTR:(K++) = ただ、この深さでも行動出来るレベルの魔法使いを確保するのは大変だ。
; 			WSTR:(K++) = とりあえず今は案だけにしておいて、先に進もう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 海底を歩くと、海底の砂がさくさくと小気味よい音を立てる。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_34_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_0")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(30, 6)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 30
; 		ダンジョン現在位置:1 = 6
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_34_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "32_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_5")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = この辺りの海域が一番深いようだ。
; 			WSTR:(K++) = 魔法で明かりを確保してはいるが、うっかり変なものを踏まないように気をつけて進もう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = この辺りの海域が一番深いようだ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_34_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		SIF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 海底に剣が突き刺さっている。古戦場で使われた武器だろうか？
; 			WSTR:(K++) = 作りはしっかりしているようだが、禍々しい気配を放っているようにも見える……。
; 			KSTR:(K++) = 剣を拾いますか？
; 			KSTR:(K++) = BUTTON_[はい]
; 			KSTR:(K++) = BUTTON_[いいえ]
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			$LOOP_MESSAGE
; 			INPUTS
; 			SELECTCASE RESULTS
; 				CASE "[はい]"
; 					WSTR:(K++) = %CALLNAME:PLAYER%は剣を海底から抜いた。
; 					WSTR:(K++) = 剣に染み込んだ瘴気が、%CALLNAME:PLAYER%たちの生気を奪う……！
; 					WSTR:(K++) = 全員の奥義ゲージが０になった！
; 					CALL メッセージ欄表示用関数(,,,0)
; 					CALL 口上変数初期化
; 					FOR LOCAL, 0, 14
; 						SIF LOCAL > 3 && LOCAL < 10
; 							CONTINUE
; 						SIF BATTLE_STATE:LOCAL:0 < 1
; 							CONTINUE
; 						BATTLE_STATE:LOCAL:奥義ゲージ = 0
; 					NEXT
; 					WSTR:(K++) = ……剣が持つ瘴気は沈静化したようだ。
; 					WSTR:(K++) = 生気の吸収は収まり、大人しくなったように思える。
; 					WSTR:(K++) = %CALLNAME:PLAYER%は剣を布で巻き、そのまま持っていくことにした。
; 					SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 				CASE "[いいえ]"
; 					WSTR:(K++) = あまり良い気を放っているようには思えない……。
; 					WSTR:(K++) = 君子危うきに近寄らず。このままにしておこう。
; 				CASEELSE
; 					CLEARLINE 1
; 					GOTO LOOP_MESSAGE
; 			ENDSELECT
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 剣はもう持ち去った後だ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_34_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 34
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "33_7")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(17, 8)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 17
; 		ダンジョン現在位置:1 = 8
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_35_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 35
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_0")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちが海中を進んでいると、前方にサメが見えた。
; 			WSTR:(K++) = そのサメは、こちらに近づいてくるうちに大きく……大きく……！？
; 			WSTR:(K++) = あまりに巨大で遠近感が狂っていたが、なんと全長数百ｍはありそうなサメだ……！！
; 			KSTR:(K++) = 今のところ、相手に敵意はなさそうだが……_PAGE
; 			KSTR:(K++) = 巨大サメをどうしますか？
; 			KSTR:(K++) = BUTTON_[先手必勝！　先制攻撃を仕掛ける]
; 			KSTR:(K++) = BUTTON_[無駄な戦いをすることはない。落ち着いてやり過ごす]
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			$LOOP_MESSAGE
; 			INPUTS
; 			SELECTCASE RESULTS
; 				CASE "[先手必勝！　先制攻撃を仕掛ける]"
; 					WSTR:(K++) = %CALLNAME:PLAYER%たちはサメに向かって、全力の攻撃を行う！
; 					WSTR:(K++) = 幾つもの魔法や技がサメに命中する！
; 					KSTR:(K++) = ……しかし、サメにはかすり傷一つ付いていない！_PAGE
; 					WSTR:(K++) = 巨大サメは君たちに一瞬視線を向けると、その身を翻して激しい水流を巻き起こした！
; 					WSTR:(K++) = %CALLNAME:PLAYER%たち全員のＨＰが９９９減少した！
; 					CALL メッセージ欄表示用関数(,,,0)
; 					CALL 口上変数初期化
; 					FOR LOCAL, 0, 14
; 						SIF LOCAL > 3 && LOCAL < 10
; 							CONTINUE
; 						SIF BATTLE_STATE:LOCAL:0 < 1
; 							CONTINUE
; 						BATTLE_STATE:LOCAL:ＨＰ = MAX(BATTLE_STATE:LOCAL:ＨＰ - 999, 1)
; 					NEXT
; 					WSTR:(K++) = ……サメはそのまま、悠然と泳ぎ去っていく。
; 					WSTR:(K++) = 見逃してくれたのだろうか。
; 					WSTR:(K++) = いや、もしかしたら今の%CALLNAME:PLAYER%たちでは戦いにすらなってなかったのかもしれない。
; 					WSTR:(K++) = 巨大サメが怒らなかった幸運を噛み締めながら、君たちは先へと進む。
; 				CASE "[無駄な戦いをすることはない。落ち着いてやり過ごす]"
; 					WSTR:(K++) = あの大きさのサメ相手に、海中で戦うのはただの自殺行為だ。
; 					WSTR:(K++) = %CALLNAME:PLAYER%たちが何もせずにいると、巨大サメもただ悠然と泳ぎ去っていった。
; 					WSTR:(K++) = 海の生物は特異な進化をしていることが多いとは聞くが、まさかここまでとは。
; 					WSTR:(K++) = %CALLNAME:PLAYER%たちは自然の恐ろしさを噛み締めながら先に進む。
; 				CASEELSE
; 					CLEARLINE 1
; 					GOTO LOOP_MESSAGE
; 			ENDSELECT
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もう巨大サメは泳ぎ去った後のようだ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_35_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 35
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中に、何か白い欠片が漂っている……。
; 			WSTR:(K++) = 自然に結晶化した塩の塊のようだ。
; 			WSTR:(K++) = 塩が持つ浄化の魔力が宿っており、戦闘中にアイテムとして使用出来そうだ。
; 			WSTR:(K++) = %CALLNAME:PLAYER%は「クリアソルト」を３個手に入れた！
; 			CALL アイテム増減汎用処理("クリアソルト", 3)
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものは何も無い。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_36_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 36
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "38_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "34_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_2")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = ふと気配を感じ、%CALLNAME:PLAYER%たちは後ろを振り向く。
; 			WSTR:(K++) = するとそこには君たちを飲み込まんとする巨大な魚影……いや！
; 			WSTR:(K++) = 複数の魚が集まって一匹の巨大な魚に擬態した魚群がいた！
; 			WSTR:(K++) = 数を活かして君たちを餌にしようと襲いかかってくる！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:7:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:8:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:9:エネミー名 = Lv13_マイトフィッシュ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 手近な魚を撃退すると、群れは数が減るのを嫌ったのかどこかへと泳いでいく。
; 				WSTR:(K++) = 見事に統率の取れた魚群は、過酷な自然で生き残るための知恵なのだろう。
; 				WSTR:(K++) = 魚の生態に感嘆しながら、%CALLNAME:PLAYER%たちは先に進む。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:3:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:7:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:8:エネミー名 = Lv13_マイトフィッシュ
; 			敵BATTLE_STATE_STR:9:エネミー名 = Lv13_マイトフィッシュ
; 			戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_36_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 36
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "38_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "35_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 改めて思えば、この海はどこの海域に行っても（水質自体は）綺麗で澄んでいる。
; 			WSTR:(K++) = 海がある島の代名詞であるアウギュステでは観光客のゴミが問題になっていると聞く。
; 			WSTR:(K++) = この島は古戦場行きの騎空士ばかりが来るから、わざわざ海にまで来たりはしないのだろう。
; 			WSTR:(K++) = リゾート島に海を作るなら、ゴミの不法投棄問題にも取り組んでいかなければならない。
; 			WSTR:(K++) = %CALLNAME:PLAYER%はああでもないこうでもないと対策を考えながら、海を進んでいく。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = この海はどこの海域に行っても（水質自体は）綺麗で澄んでいる。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_36_8(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 36
; マス分岐 = 8

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		IF ダンジョン内一時変数:3 == 0
; 			ダンジョンマス画像URL_重ね表示 = 回復アビ
; 		ENDIF
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF ダンジョン内一時変数:3
; 		ELSE
; 			KSTR:(K++) = 岩場が入り組んで、外からは中が見えない洞窟のような場所を見つけた。
; 			KSTR:(K++) = ここならゆっくりと休んでも危険はなさそうだ。
; 			KSTR:(K++) = 少し休憩していきますか？
; 			KSTR:(K++) = （PTメンバー全回復・ダンジョンを一度出るまで消滅）
; 			KSTR:(K++) = BUTTON_[はい]
; 			KSTR:(K++) = BUTTON_[いいえ]
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			$LOOP_MESSAGE
; 			INPUTS
; 			SELECTCASE RESULTS
; 				CASE "[はい]"
; 					KSTR:(K++) = 君たちは洞窟で十分な休息を取り、体力を回復した！
; 					CALL メッセージ欄表示用関数()
; 					ダンジョン内一時変数:3 = 1
; 					FOR LOCAL, 0, 14
; 						SIF LOCAL > 3 && LOCAL < 10
; 							CONTINUE
; 						SIF BATTLE_STATE:LOCAL:0 < 1
; 							CONTINUE
; 						BATTLE_STATE:LOCAL:ＨＰ = BATTLE_STATE:LOCAL:最大ＨＰ
; 						BATTLE_STATE:LOCAL:ＭＰ = BATTLE_STATE:LOCAL:最大ＭＰ
; 					NEXT
; 				CASE "[いいえ]"
; 					KSTR:(K++) = まだ休憩するほど疲れてはいない。先に進もう。
; 					CALL メッセージ欄表示用関数()
; 				CASEELSE
; 					CLEARLINE 1
; 					GOTO LOOP_MESSAGE
; 			ENDSELECT
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_37_5(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 37
; マス分岐 = 5

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "37_7")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(31, 4)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 31
; 		ダンジョン現在位置:1 = 4
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_37_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 37
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "39_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_8")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中を進むと、遠くに沈没船のようなものが見えた。
; 			WSTR:(K++) = 近くには生き物の気配がほとんどない。どうやら凶暴化した魚すらも近づかないようだ。
; 			WSTR:(K++) = 明らかに怪しげだ。もう少し近づいてみよう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 遠くに沈没船のようなものが見える。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_38_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 38
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_0")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(18, 4)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 18
; 		ダンジョン現在位置:1 = 4
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_38_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 38
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "36_3")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(24, 3)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 24
; 		ダンジョン現在位置:1 = 3
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_39_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 39
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船に近づいてみると、船体が真っ二つに割れてしまっている。
; 			WSTR:(K++) = 後方部は原型を留めておらず、沈んでから長い時が経っているように見える。
; 			WSTR:(K++) = ……海に漂う瘴気の源はこの船のようだ。
; 			WSTR:(K++) = 星晶獣の手がかりがあるかもしれない。船に入ってみよう。
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(41, 1)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 41
; 		ダンジョン現在位置:1 = 1
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_40_3(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 40
; マス分岐 = 3

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船首の女神像が淡く光を放っている……。
; 			WSTR:(K++) = どうやらこの像が周囲の海水を弾き、空気を保っているらしい。
; 			KSTR:(K++) = この効果は自由にON・OFFを切り替えられそうだ。_PAGE
; 			KSTR:(K++) = 女神像をOFFにしますか？
; 			KSTR:(K++) = （船の内部の戦闘で海中フィールドが有効になります）
; 			KSTR:(K++) = BUTTON_[はい]
; 			KSTR:(K++) = BUTTON_[いいえ]
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			$LOOP_MESSAGE
; 			INPUTS
; 			SELECTCASE RESULTS
; 				CASE "[はい]"
; 					KSTR:(K++) = 女神像をOFFにし、船の内部が海水で満たされた……
; 					CALL メッセージ欄表示用関数()
; 					女神像OFFフラグ = 1
; 				CASE "[いいえ]"
; 					KSTR:(K++) = 海中フィールドに用はない。このままにしておこう。
; 					CALL メッセージ欄表示用関数()
; 				CASEELSE
; 					CLEARLINE 1
; 					GOTO LOOP_MESSAGE
; 			ENDSELECT
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSEIF 女神像OFFフラグ
; 			KSTR:(K++) = 女神像をONにしますか？
; 			KSTR:(K++) = （船の内部の戦闘で海中フィールドが無効になります）
; 			KSTR:(K++) = BUTTON_[はい]
; 			KSTR:(K++) = BUTTON_[いいえ]
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			$LOOP_MESSAGE
; 			INPUTS
; 			SELECTCASE RESULTS
; 				CASE "[はい]"
; 					KSTR:(K++) = 女神像をONにし、船の内部から海水が引いていった…
; 					CALL メッセージ欄表示用関数()
; 					女神像OFFフラグ = 0
; 				CASE "[いいえ]"
; 					KSTR:(K++) = 海中フィールドは必要だ。このままにしておこう。
; 					CALL メッセージ欄表示用関数()
; 				CASEELSE
; 					CLEARLINE 1
; 					GOTO LOOP_MESSAGE
; 			ENDSELECT
; 		ELSE
; 			KSTR:(K++) = 女神像をOFFにしますか？
; 			KSTR:(K++) = （船の内部の戦闘で海中フィールドが有効になります）
; 			KSTR:(K++) = BUTTON_[はい]
; 			KSTR:(K++) = BUTTON_[いいえ]
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			$LOOP_MESSAGE
; 			INPUTS
; 			SELECTCASE RESULTS
; 				CASE "[はい]"
; 					KSTR:(K++) = 女神像をOFFにし、船の内部が海水で満たされた……
; 					CALL メッセージ欄表示用関数()
; 					女神像OFFフラグ = 1
; 				CASE "[いいえ]"
; 					KSTR:(K++) = 海中フィールドに用はない。このままにしておこう。
; 					CALL メッセージ欄表示用関数()
; 				CASEELSE
; 					CLEARLINE 1
; 					GOTO LOOP_MESSAGE
; 			ENDSELECT
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_41_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 41
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_0")
; 	CASE "マスイベント"
; 		ダンジョン現在位置:0 = 39
; 		ダンジョン現在位置:1 = 7
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_41_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 41
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 女部屋と書かれた部屋に入る。
; 			WSTR:(K++) = 部屋の中は長い間放置されていたからか、ボロボロに朽ちている。
; 			WSTR:(K++) = 何か残っていないだろうかと探してみると、部屋の隅に金属製の箱を見つけた。
; 			KSTR:(K++) = どうやら貴重品を入れるための保存箱のようだ。_PAGE
; 			WSTR:(K++) = お宝でも残っているだろうかと開いてみる。
; 			WSTR:(K++) = ……しかし、中にあったのは振動魔法の刻まれた棒が一本だけだった。
; 			WSTR:(K++) = めぼしい物は沈没の際に持ち去られてしまったのだろう。
; 			WSTR:(K++) = 仕方なく%CALLNAME:PLAYER%は棒を拾うことにした。
; 			WSTR:(K++) = %CALLNAME:PLAYER%は「Ｅマッサージャ」を手に入れた！
; 			CALL 素材入手処理("Ｅマッサージャ", 1)
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものは何も無い。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_42_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 42
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "40_3")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "42_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船首の方向に向かうと、船内部に入る扉を見つけた。
; 			WSTR:(K++) = 更に前方には、船に取り付けられた女神像が見える。
; 			WSTR:(K++) = 何か不思議な力を感じる……一度女神像を調べてみるのもいいかもしれない。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 船内部に入る扉と、前方に船に取り付けられた女神像が見える。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_42_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 42
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "43_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "42_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "41_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船内部に入ると短い廊下があり、左右と突き当りに一つずつ扉が見える。
; 			WSTR:(K++) = 床はところどころ腐っており、不用意に歩くと穴が空いてしまいそうだ。
; 			WSTR:(K++) = 丈夫な場所を見分けながら慎重に進もう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 左右と突き当りに一つずつ扉が見える
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_42_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 42
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 右アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:46:4, 4) == 0
; 			;カリュブ出会いまだ
; 			WSTR:(K++) = 突き当りの扉を開くと、下に進む階段を見つけた。
; 			WSTR:(K++) = しかし、星晶獣の気配は別の方向からするような気がする……。
; 			WSTR:(K++) = もう少しこの近くを調べてみよう。
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 			RETURN 0
; 		ELSEIF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;カリュブ出会い済み
; 			WSTR:(K++) = 突き当りの扉を開くと、下に進む階段を見つけた。
; 			WSTR:(K++) = カリュブディスの言うアンデッドはこの下にいるらしい。
; 			WSTR:(K++) = 恐らくは近くでうろつくアンデッドと同じく、闇属性の敵だろう。
; 			WSTR:(K++) = 光属性に揃えておいた方がいいかもしれない……。
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちは警戒しながら船の下部へと進む。
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			CALL 接続ルート全開放処理(49, 0)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 49
; 		ダンジョン現在位置:1 = 0
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_43_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 43
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 男部屋と書かれた部屋に入る。
; 			WSTR:(K++) = ……すると、中にはスケルトンたちが待ち構えていた！
; 			WSTR:(K++) = 剣を振り上げ、%CALLNAME:PLAYER%たちに襲いかかってくる！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv16_ソードスケルトン
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv16_ソードスケルトン
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv16_ソードスケルトン
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = スケルトンたちを倒し、部屋の中を軽く調べる。
; 				WSTR:(K++) = めぼしいものは何も無いが、部屋の壁には斬撃の古い跡が幾つも残っていた。
; 				WSTR:(K++) = 恐らくは沈没時に仲間割れして殺し合ったのだろう。
; 				WSTR:(K++) = %CALLNAME:PLAYER%たちはせめて死後は安らかにと祈り、先に進む。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:1:エネミー名 = Lv16_ソードスケルトン
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv16_ソードスケルトン
; 			敵BATTLE_STATE_STR:4:エネミー名 = Lv16_ソードスケルトン
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_44_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 海中を泳ぎ、沈没船のマストの先端。見張り台に着地する。
; 			WSTR:(K++) = 不思議なことに、沈没船の周囲には海水が無く空気の層が作られていた。
; 			WSTR:(K++) = 何かの魔道具で空気が維持されてるのだろうか？
; 			WSTR:(K++) = _COLOR_%カラーパレット_HTML("黄")%_船内部の戦闘では、海中フィールドは発生しない_だろう。
; 			WSTR:(K++) = %CALLNAME:PLAYER%たちはロープを握り、マストを降りていく。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 沈没船のマストの先端、見張り台だ。
; 			KSTR:(K++) = 特に変わったものはない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_44_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = マストを半分ほど降りると、甲板には骨の魔物がうろついている様子が見えた。
; 			WSTR:(K++) = 元は船乗りたちだったのだろうアンデッドたちは、周囲に瘴気を発生させている。
; 			WSTR:(K++) = このまま降りると戦闘になるだろう。準備をしてから降りよう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 甲板には骨の魔物がうろついている。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT



; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------
; ;------------------------------------------------------------------------------------------------------------------






; @ダンジョンマス情報_深海の古戦場跡_44_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "42_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "46_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "45_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 甲板に降りると、うろついていたスケルトンたちが一斉に反応する！
; 			WSTR:(K++) = 武器を振り上げ、%CALLNAME:PLAYER%たちへ襲いかかってきた！
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv16_スケルトンアーチャー
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv16_ソードスケルトン
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv16_スケルトンアーチャー
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 骨の魔物たちを蹴散らして周囲を見る。
; 				WSTR:(K++) = 甲板はところどころ腐ってはいるが、行動に支障は無さそうだ。
; 				WSTR:(K++) = 近くには内部に入る扉があり、船首と船尾の方へも移動出来る。
; 				WSTR:(K++) = スケルトンたちに警戒しながら調査してみよう。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:2:エネミー名 = Lv16_スケルトンアーチャー
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv16_ソードスケルトン
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv16_スケルトンアーチャー
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_44_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 44
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 倉庫と書かれた扉を開き、中に入る。
; 			WSTR:(K++) = 部屋の中はがらんとしていて、物資は殆ど残っていない。
; 			KSTR:(K++) = 数個の空木箱が転がっているだけだが……ひっくり返してみると、古ぼけた指輪が出てきた。_PAGE
; 			WSTR:(K++) = ひび割れていて、装備しても効果はないだろう。
; 			WSTR:(K++) = しかし、修理すればなにか珍しい指輪になるかもしれない。持って帰ってみよう。
; 			WSTR:(K++) = %CALLNAME:PLAYER%は「古ぼけた指輪・銅」を手に入れた！（修理は未実装です）
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = もうめぼしいものはなにもない。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_45_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 45
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "46_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "45_7")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "44_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 扉を開けて船内に入ると、幾つかの扉を持つ廊下に出た。
; 			WSTR:(K++) = 多くの扉は破壊されていたり、腐っていたりして、中の部屋も瓦礫ばかりが散乱している。
; 			WSTR:(K++) = まともな扉は左にある倉庫、右にある調理室、奥にある食料庫……と書かれた扉くらいだ。
; 			WSTR:(K++) = 一通り調べてみよう。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = まともな扉は左にある倉庫、右にある調理室、奥にある食料庫……と書かれた扉くらいだ。
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_45_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 45
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		SIF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "42_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "46_4")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "45_6")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 食料庫に入る。とはいえ古い船だ、食材は全て風化して……
; 			WSTR:(K++) = ……なんかふよふよと浮いている透明な牛肉がある。
; 			WSTR:(K++) = 透明な牛肉は勢いよく%CALLNAME:PLAYER%たちへ襲いかかってきた！　なんで！？
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = Lv1_牛肉ゴースト
; 			敵BATTLE_STATE_STR:5:エネミー名 = Lv1_牛肉ゴースト
; 			敵BATTLE_STATE_STR:6:エネミー名 = Lv1_牛肉ゴースト
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 襲ってきた透明牛肉をぺいっとあしらう。
; 				WSTR:(K++) = どうやらこれは、食材の幽霊らしい。
; 				WSTR:(K++) = 本物の牛肉を落としたが、これは果たして食べても良いものなのだろうか……？
; 				WSTR:(K++) = 傷んだり呪われていたりはしないようだが……捨てたらまた幽霊が暴れだしそうだ。
; 				WSTR:(K++) = とりあえず持って帰っておこう。
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			KSTR:(K++) = もう食材の幽霊はいない。成仏したのだろうか。
; 			CALL メッセージ欄表示用関数(,,,0)
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_46_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 46
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船尾の方向へ向かう……が、ぐちゃぐちゃになってて渡れない
; 		カリュブディスがここにいて事情を聞かせてくれる。
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_46_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 46
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 調理室。レシピのヒントがある。
; 		海藻を使うなんか……昆布締め？
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT




; @ダンジョンマス情報_深海の古戦場跡_49_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 49
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 左アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "50_2")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "51_1")
; 	CASE "マスイベント"
; 		;移動先Yと移動先Yを、移動先の位置に変更すること
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 
; 			;移動直後はマスイベント発動しないので、移動先のルート開放をここで行う
; 			CALL 接続ルート全開放処理(42, 7)
; 			CALL メッセージ欄表示用関数(,,,0)
; 			CALL 口上変数初期化
; 		ENDIF
; 		ダンジョン現在位置:0 = 42
; 		ダンジョン現在位置:1 = 7
; 		;移動直後はマスイベント発動しないので、移動先のマス開放をここで行う
; 		CALL 踏破マス開放処理
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_50_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 50
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "51_4")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ハシゴを降りて更に下へ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_51_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 51
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_1")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = こっちは船長室とか色々ある通路
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_51_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 51
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "52_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_4")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = 漕手のスケルトンが襲ってくる
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_52_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 52
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = えっちアイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		;えっちイベ
; 		;XXXXを使ってないダンジョン内一時変数の番号に変えること
; 		IF ダンジョン内一時変数:1
; 		ELSE
; 			CALL ダンジョンハプニング基本処理()
; 			IF RESULT
; 				ダンジョン内一時変数:1 = 1
; 			ENDIF
; 			CALL 口上変数初期化
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_53_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 宝物庫だ！財宝ざくざく……と思ったら全部呪われてて解呪費用のほうが高いよこんなん！
; 		比較的マシなのを拾う。１０万ルピGET
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_53_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 廊下。なんか厳重な扉ある。宝物庫かな？
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_53_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 宝物庫だ！　でもほとんどが海水でダメになってる……
; 		なんか耳飾りGET
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_53_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "53_6")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_4")
; 	CASE "マスイベント"
; 		IF GETBIT(ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4) == 0
; 			;最初に訪れた時
; 			WSTR:(K++) = もっかいエネミー。奥の強いのに引き寄せられてんのかな？
; 			CALL メッセージ欄表示用関数(,,,0)
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵遭遇汎用処理
; 			IF RESULT == 0
; 				;勝利時のみ先へ進む
; 				CALL 口上変数初期化
; 				WSTR:(K++) = 
; 				CALL メッセージ欄表示用関数(,,,0)
; 				CALL 接続ルート全開放処理(マス深度, マス分岐)
; 				SETBIT ダンジョン構造配列_深海の古戦場跡:マス深度:マス分岐, 4
; 			ENDIF
; 		ELSE
; 			敵BATTLE_STATE_STR:0:エネミー名 = 
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 雑魚敵繰り返し戦闘処理
; 		ENDIF
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_53_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 53
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_6")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 魔法知識。アンデッドの瘴気めっっっちゃくちゃ濃い
; 		知識なくてもクリアソルト消費で無傷
; 		どっちもダメならHPに大ダメージ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_54_0(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 0

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = 会話アイコン
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船長室。金目のものと日記がある
; 		カリュブディスを倒して捕まえる計画だったらしい。
; 		ついでにスケベなこともするとかなんとか
; 		あとは呪われた剣とそれに囚われた剣士の話（ボスと海底に刺さってた剣）
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_54_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_0")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_1")
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "54_2")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 廊下。なんか豪華な扉ある。船長室かな？
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_54_2(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 54
; マス分岐 = 2

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = SMルームみたいな部屋。船長の趣味だったのかな……
; 		ここのアイテム漁りたくねぇ～～
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT


; @ダンジョンマス情報_深海の古戦場跡_55_1(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 1

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船尾側に続く通路は完全に崩れている
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_55_4(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 4

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = 船尾側に続く通路は完全に崩れている
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_55_6(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 6

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 	CASE "接続先"
; 		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "55_7")
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ボスおるで！みたいな前フリ
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT

; @ダンジョンマス情報_深海の古戦場跡_55_7(ARGS)
; #DIM マス深度
; #DIM マス分岐
; マス深度 = 55
; マス分岐 = 7

; SELECTCASE ARGS
; 	CASE "マス画像"
; 		ダンジョンマス画像URL = 海中_床
; 		ダンジョンマス画像URL_重ね表示 = エネミーアイコン_赤
; 	CASE "接続先"
; 	CASE "マスイベント"
; 		IF 初来訪マス判定用フラグ
; 			;最初に訪れた時
; 			WSTR:(K++) = ボス。なんだっけあのデカいスケルトン。闇属性。
; 			SIF 女神像OFFフラグ
; 				戦闘時_特殊処理フラグ = 海中フィールド
; 			CALL 接続ルート全開放処理(マス深度, マス分岐)
; 		ELSE
; 			KSTR:(K++) = 
; 		ENDIF
; 		CALL メッセージ欄表示用関数(,,,0)
; 		CALL 画面再描画
; ENDSELECT
