

@ダンジョン初期処理_人食い鳥の島
;ダンジョン構造の読み込み
;0でない時、そのマスは存在する
#DIM 深度
#DIM 分岐

ダンジョンマス画像URL_伏せ状態 = 壁_岩
ダンジョン現在位置:0 = 0
ダンジョン現在位置:1 = 0

;スタート地点は必ず存在し、同深度に分岐無し
;初期からオープン済みなので3を入れるb ++
;ビット0：存在するか　ビット1：移動できるか　ビット2：マスをオープンするか（ビット１をONにしないと無意味）　ビット3：入れないがオープンする場合に使用
;ビット4以降：自由枠。主に宝箱の開閉やイベント達成フラグなどに使用
IF GETVAR(@"ダンジョン構造配列_%ダンジョン名%:0:0") == 0
	SETVAR @"ダンジョン構造配列_%ダンジョン名%:0:0", 3
	;巣の数を最初だけセット
	残り巣の数_人食い鳥の島 = 5
ENDIF

FOR 深度, 1, 100
	LOCAL = 0
	FOR 分岐, 0, 9
		IF GETVAR(@"ダンジョン構造配列_%ダンジョン名%:{深度}:{分岐}")
			;既にマス情報が入ってるなら飛ばす
			LOCAL = 1
			CONTINUE
		ELSEIF ENUMFUNCBEGINSWITH(@"ダンジョンマス情報_%ダンジョン名%_{深度}_{分岐}")
			LOCAL = 1
			SETVAR @"ダンジョン構造配列_%ダンジョン名%:深度:分岐", 1
		ENDIF
	NEXT
	IF LOCAL
		ダンジョン最大深度 = 深度
	ENDIF
NEXT

@ダンジョンマス情報_人食い鳥の島_0_0(ARGS)
#DIM マス深度
#DIM マス分岐
マス深度 = 0
マス分岐 = 0

SELECTCASE ARGS
	CASE "マス画像"
		ダンジョンマス画像URL = 床_荒野
	CASE "接続先"
		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "1_1")
	CASE "マスイベント"
		CALL 口上変数初期化
		IF GETBIT(ダンジョン構造配列_人食い鳥の島:マス深度:マス分岐, 2)
			IF 残り巣の数_人食い鳥の島 > 0
				KSTR:(K++) = まだ巣は{残り巣の数_人食い鳥の島}つほど残っているようだ。
			ELSE
				KSTR:(K++) = 人食い鳥の群れはもうどこか別の島へと移動したようだ。
			ENDIF
			CALL メッセージ欄表示用関数(,,,0)
		ELSE
			;最初に訪れた時
			SETBIT ダンジョン構造配列_人食い鳥の島:マス深度:マス分岐, 2
			WSTR:(K++) = %CALLNAME:PLAYER%は人食い鳥の島へと足を踏み入れた。
			WSTR:(K++) = 空を見上げてみれば、大きな鳥が君たちを監視するように近くを飛んでいる。
			WSTR:(K++) = かなり統率の取れた手ごわい群れのようだ。
			WSTR:(K++) = COLOR_0xc0c070_探索メンバー全員に指輪を装備させておいた方がいいかもしれない。
			KSTR:(K++) = 指輪は空き店舗を装飾品店に改装して購入するか、ストーンイーターを討伐することで手に入る。_PAGE
			WSTR:(K++) = 事前に仕入れた情報によると、この島には少なくとも大型の巣が_COLOR_0xc07070_５つ_は存在するらしい。
			WSTR:(K++) = 全て潰せば島から人食い鳥たちは去っていくだろう。
			KSTR:(K++) = 島はそれなりに広く、探索するにも手間が掛かりそうだ。地道に進めていこう。
			CALL メッセージ欄表示用関数()
			CALL 口上変数初期化
			SETBIT ダンジョン構造配列_人食い鳥の島:1:1, 1
		ENDIF
		CALL 画面再描画
ENDSELECT


@ダンジョンマス情報_人食い鳥の島_1_1(ARGS)
#DIM マス深度
#DIM マス分岐
マス深度 = 1
マス分岐 = 1

SELECTCASE ARGS
	CASE "マス画像"
		ダンジョンマス画像URL = 床_荒野
	CASE "接続先"
		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_0")
		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_2")
		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "2_4")
	CASE "マスイベント"
		CALL 口上変数初期化
		IF GETBIT(ダンジョン構造配列_人食い鳥の島:マス深度:マス分岐, 2)
			KSTR:(K++) = 島の内部は荒野が広がっている。
			CALL メッセージ欄表示用関数(,,,0)
		ELSE
			;最初に訪れた時
			SETBIT ダンジョン構造配列_人食い鳥の島:マス深度:マス分岐, 2
			WSTR:(K++) = 島の内部は荒野が広がっている。
			WSTR:(K++) = 草や木々は殆ど無く、土や風の魔力を含む魔物が多い。
			WSTR:(K++) = この島に住む人食い鳥たちは魔物や人間を集団で狩る習性を持つ厄介な魔物だ。
			WSTR:(K++) = COLOR_0xc0c070_戦闘が長引くと仲間を呼ぶことがあるかもしれない。
			KSTR:(K++) = 多少無理してでも早めに戦闘を終わらせた方がいいだろう。
			CALL メッセージ欄表示用関数()
			SETBIT ダンジョン構造配列_人食い鳥の島:2:0, 1
			SETBIT ダンジョン構造配列_人食い鳥の島:2:2, 1
			SETBIT ダンジョン構造配列_人食い鳥の島:2:4, 1
		ENDIF
		CALL 画面再描画
ENDSELECT

;---------------------------------------------------------------------------
;上ルート（巣一個）
;---------------------------------------------------------------------------


@ダンジョンマス情報_人食い鳥の島_2_0(ARGS)
#DIM マス深度
#DIM マス分岐
マス深度 = 2
マス分岐 = 0

SELECTCASE ARGS
	CASE "マス画像"
		ダンジョンマス画像URL = 床_荒野
		ダンジョンマス画像URL_重ね表示 = エネミーアイコン
	CASE "接続先"
		CALL ダンジョン分岐線描画(@"{マス深度}_{マス分岐}", "3_0")
	CASE "マスイベント"
		CALL 口上変数初期化
		IF GETBIT(ダンジョン構造配列_人食い鳥の島:マス深度:マス分岐, 2)
			KSTR:(K++) = 敵を探しますか？
			KSTR:(K++) = BUTTON_[はい]
			KSTR:(K++) = BUTTON_[いいえ]
			CALL メッセージ欄表示用関数(,,,0)
			$LOOP_MESSAGE
			INPUTS
			SELECTCASE RESULTS
				CASE "[はい]"
					敵BATTLE_STATE_STR:0:エネミー名 = Lv4_人食い鳥
					敵BATTLE_STATE_STR:1:エネミー名 = Lv4_人食い鳥
					CALL 雑魚敵遭遇汎用処理
				CASE "[いいえ]"
					CALL 口上変数初期化
				CASEELSE
					CLEARLINE 1
					GOTO LOOP_MESSAGE
			ENDSELECT
		ELSE
			;最初に訪れた時
			SETBIT ダンジョン構造配列_人食い鳥の島:マス深度:マス分岐, 2
			KSTR:(K++) = 荒野を進んでいると、空から人食い鳥が君たちに襲い掛かってきた！
			CALL メッセージ欄表示用関数()

			敵BATTLE_STATE_STR:0:エネミー名 = Lv4_人食い鳥
			敵BATTLE_STATE_STR:1:エネミー名 = Lv4_人食い鳥
			CALL 雑魚敵遭遇汎用処理
			
			SETBIT ダンジョン構造配列_人食い鳥の島:3:0, 1
		ENDIF
		CALL 画面再描画
ENDSELECT