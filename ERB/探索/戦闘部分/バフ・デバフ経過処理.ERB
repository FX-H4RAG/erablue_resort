@バフターン経過処理(隊列番号, 経過能力 = "", 経過枠 = "")
#DIM 隊列番号
#DIMS 経過枠
#DIMS 経過能力
#DIM データベース行数
#DIM バフ番号
#DIM 持続ターン保存
#DIM 消滅配列番号
#DIM 消滅番号保存, 100

IF 経過能力 != ""
	SIF バフ番号取得(経過能力, 隊列番号) == -1
		RETURN 0
ENDIF
IF 経過枠 != ""
	SIF バフ番号取得_枠(経過枠, 隊列番号) == -1
		RETURN 0
ENDIF

VARSET 消滅番号保存
消滅配列番号 = 0
データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{隊列番号}")
FOR バフ番号, 0, データベース行数
	IF 経過能力 != ""
		SIF DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ対象能力") != 経過能力
			CONTINUE
	ENDIF
	IF 経過枠 != ""
		SIF DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ枠") != 経過枠
			CONTINUE
	ENDIF
	持続ターン保存 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "持続ターン")
	IF 持続ターン保存 == 1
		;ここで削除しちゃうと行がズレるので一旦配列に退避
		消滅番号保存:消滅配列番号 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "id")
		消滅配列番号 += 1
	ELSEIF 持続ターン保存 > 1
		DT_CELL_SET @"バフデータベース_{隊列番号}", バフ番号, "持続ターン", 持続ターン保存 - 1
	ENDIF
NEXT

FOR バフ番号, 0, 消滅配列番号
	CALL バフ削除(隊列番号, 消滅番号保存:バフ番号, 1)
NEXT

@デバフターン経過処理(隊列番号, 経過能力 = "", 経過枠 = "")
#DIM 隊列番号
#DIMS 経過枠
#DIMS 経過能力
#DIM データベース行数
#DIM デバフ番号
#DIM 持続ターン保存
#DIM 消滅配列番号
#DIM 消滅番号保存, 100

IF 経過能力 != ""
	SIF デバフ番号取得(経過能力, 隊列番号) == -1
		RETURN 0
ENDIF
IF 経過枠 != ""
	SIF デバフ番号取得_枠(経過枠, 隊列番号) == -1
		RETURN 0
ENDIF

VARSET 消滅番号保存
消滅配列番号 = 0
データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{隊列番号}")
FOR デバフ番号, 0, データベース行数
	IF 経過能力 != ""
		SIF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", デバフ番号, "デバフ対象能力") != 経過能力
			CONTINUE
	ENDIF
	IF 経過枠 != ""
		SIF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", デバフ番号, "デバフ枠") != 経過枠
			CONTINUE
	ENDIF
	持続ターン保存 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "持続ターン")
	IF 持続ターン保存 == 1
		;ここで削除しちゃうと行がズレるので一旦配列に退避
		消滅番号保存:消滅配列番号 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "id")
		消滅配列番号 += 1
	ELSEIF 持続ターン保存 > 1
		DT_CELL_SET @"デバフデータベース_{隊列番号}", デバフ番号, "持続ターン", 持続ターン保存 - 1
	ENDIF
NEXT

FOR デバフ番号, 0, 消滅配列番号
	CALL デバフ削除(隊列番号, 消滅番号保存:デバフ番号, 1)
NEXT

@バフ回数経過処理(隊列番号, 経過能力 = "", 経過枠 = "")
#DIM 隊列番号
#DIMS 経過枠
#DIMS 経過能力
#DIM データベース行数
#DIM バフ番号
#DIM 持続回数保存
#DIM 消滅配列番号
#DIM 消滅番号保存, 100

IF 経過能力 != ""
	SIF バフ番号取得(経過能力, 隊列番号) == -1
		RETURN 0
ENDIF
IF 経過枠 != ""
	SIF バフ番号取得_枠(経過枠, 隊列番号) == -1
		RETURN 0
ENDIF

VARSET 消滅番号保存
消滅配列番号 = 0
データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{隊列番号}")
FOR バフ番号, 0, データベース行数
	IF 経過能力 != ""
		SIF DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ対象能力") != 経過能力
			CONTINUE
	ENDIF
	IF 経過枠 != ""
		SIF DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ枠") != 経過枠
			CONTINUE
	ENDIF
	持続回数保存 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "持続回数")
	IF 持続回数保存 == 1
		;ここで削除しちゃうと行がズレるので一旦配列に退避
		消滅番号保存:消滅配列番号 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "id")
		消滅配列番号 += 1
	ELSEIF 持続回数保存 > 1
		DT_CELL_SET @"バフデータベース_{隊列番号}", バフ番号, "持続回数", 持続回数保存 - 1
	ENDIF
NEXT

FOR バフ番号, 0, 消滅配列番号
	CALL バフ削除(隊列番号, 消滅番号保存:バフ番号, 1)
NEXT

@デバフ回数経過処理(隊列番号, 経過能力 = "", 経過枠 = "")
#DIM 隊列番号
#DIMS 経過枠
#DIMS 経過能力
#DIM データベース行数
#DIM デバフ番号
#DIM 持続回数保存
#DIM 消滅配列番号
#DIM 消滅番号保存, 100

IF 経過能力 != ""
	SIF デバフ番号取得(経過能力, 隊列番号) == -1
		RETURN 0
ENDIF
IF 経過枠 != ""
	SIF デバフ番号取得_枠(経過枠, 隊列番号) == -1
		RETURN 0
ENDIF

VARSET 消滅番号保存
消滅配列番号 = 0
データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{隊列番号}")
FOR デバフ番号, 0, データベース行数
	IF 経過能力 != ""
		SIF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", デバフ番号, "デバフ対象能力") != 経過能力
			CONTINUE
	ENDIF
	IF 経過枠 != ""
		SIF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", デバフ番号, "デバフ枠") != 経過枠
			CONTINUE
	ENDIF
	持続回数保存 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "持続回数")
	IF 持続回数保存 == 1
		;ここで削除しちゃうと行がズレるので一旦配列に退避
		消滅番号保存:消滅配列番号 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "id")
		消滅配列番号 += 1
	ELSEIF 持続回数保存 > 1
		DT_CELL_SET @"デバフデータベース_{隊列番号}", デバフ番号, "持続回数", 持続回数保存 - 1
	ENDIF
NEXT

FOR デバフ番号, 0, 消滅配列番号
	CALL デバフ削除(隊列番号, 消滅番号保存:デバフ番号, 1)
NEXT

@バフ行動回数経過処理(隊列番号, 経過能力 = "", 経過枠 = "")
#DIM 隊列番号
#DIMS 経過枠
#DIMS 経過能力
#DIM データベース行数
#DIM バフ番号
#DIM 持続行動回数保存
#DIM 消滅配列番号
#DIM 消滅番号保存, 100

IF 経過能力 != ""
	SIF バフ番号取得(経過能力, 隊列番号) == -1
		RETURN 0
ENDIF
IF 経過枠 != ""
	SIF バフ番号取得_枠(経過枠, 隊列番号) == -1
		RETURN 0
ENDIF

VARSET 消滅番号保存
消滅配列番号 = 0
データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{隊列番号}")
FOR バフ番号, 0, データベース行数
	IF 経過能力 != ""
		SIF DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ対象能力") != 経過能力
			CONTINUE
	ENDIF
	IF 経過枠 != ""
		SIF DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ枠") != 経過枠
			CONTINUE
	ENDIF
	持続行動回数保存 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "持続行動回数")
	IF 持続行動回数保存 == 1
		;ここで削除しちゃうと行がズレるので一旦配列に退避
		消滅番号保存:消滅配列番号 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "id")
		消滅配列番号 += 1
	ELSEIF 持続行動回数保存 > 1
		DT_CELL_SET @"バフデータベース_{隊列番号}", バフ番号, "持続行動回数", 持続行動回数保存 - 1
	ENDIF
NEXT

FOR バフ番号, 0, 消滅配列番号
	CALL バフ削除(隊列番号, 消滅番号保存:バフ番号, 1)
NEXT

@デバフ行動回数経過処理(隊列番号, 経過能力 = "", 経過枠 = "")
#DIM 隊列番号
#DIMS 経過枠
#DIMS 経過能力
#DIM データベース行数
#DIM デバフ番号
#DIM 持続行動回数保存
#DIM 消滅配列番号
#DIM 消滅番号保存, 100

IF 経過能力 != ""
	SIF デバフ番号取得(経過能力, 隊列番号) == -1
		RETURN 0
ENDIF
IF 経過枠 != ""
	SIF デバフ番号取得_枠(経過枠, 隊列番号) == -1
		RETURN 0
ENDIF

VARSET 消滅番号保存
消滅配列番号 = 0
データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{隊列番号}")
FOR デバフ番号, 0, データベース行数
	IF 経過能力 != ""
		SIF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", デバフ番号, "デバフ対象能力") != 経過能力
			CONTINUE
	ENDIF
	IF 経過枠 != ""
		SIF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", デバフ番号, "デバフ枠") != 経過枠
			CONTINUE
	ENDIF
	持続行動回数保存 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "持続行動回数")
	IF 持続行動回数保存 == 1
		;ここで削除しちゃうと行がズレるので一旦配列に退避
		消滅番号保存:消滅配列番号 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "id")
		消滅配列番号 += 1
	ELSEIF 持続行動回数保存 > 1
		DT_CELL_SET @"デバフデータベース_{隊列番号}", デバフ番号, "持続行動回数", 持続行動回数保存 - 1
	ENDIF
NEXT

FOR デバフ番号, 0, 消滅配列番号
	CALL デバフ削除(隊列番号, 消滅番号保存:デバフ番号, 1)
NEXT


@バフ被ダメ回数経過処理(隊列番号, 経過能力 = "", 経過枠 = "")
#DIM 隊列番号
#DIMS 経過枠
#DIMS 経過能力
#DIM データベース行数
#DIM バフ番号
#DIM 持続回数保存
#DIM 消滅配列番号
#DIM 消滅番号保存, 100

IF 経過能力 != ""
	SIF バフ番号取得(経過能力, 隊列番号) == -1
		RETURN 0
ENDIF
IF 経過枠 != ""
	SIF バフ番号取得_枠(経過枠, 隊列番号) == -1
		RETURN 0
ENDIF

VARSET 消滅番号保存
消滅配列番号 = 0
データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{隊列番号}")
FOR バフ番号, 0, データベース行数
	IF 経過能力 != ""
		SIF DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ対象能力") != 経過能力
			CONTINUE
	ENDIF
	IF 経過枠 != ""
		SIF DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ枠") != 経過枠
			CONTINUE
	ENDIF
	持続回数保存 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "持続被ダメ回数")
	IF 持続回数保存 == 1
		;ここで削除しちゃうと行がズレるので一旦配列に退避
		消滅番号保存:消滅配列番号 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "id")
		消滅配列番号 += 1
	ELSEIF 持続回数保存 > 1
		DT_CELL_SET @"バフデータベース_{隊列番号}", バフ番号, "持続被ダメ回数", 持続回数保存 - 1
	ENDIF
NEXT

FOR バフ番号, 0, 消滅配列番号
	CALL バフ削除(隊列番号, 消滅番号保存:バフ番号, 1)
NEXT

@デバフ被ダメ回数経過処理(隊列番号, 経過能力 = "", 経過枠 = "")
#DIM 隊列番号
#DIMS 経過枠
#DIMS 経過能力
#DIM データベース行数
#DIM デバフ番号
#DIM 持続回数保存
#DIM 消滅配列番号
#DIM 消滅番号保存, 100

IF 経過能力 != ""
	SIF デバフ番号取得(経過能力, 隊列番号) == -1
		RETURN 0
ENDIF
IF 経過枠 != ""
	SIF デバフ番号取得_枠(経過枠, 隊列番号) == -1
		RETURN 0
ENDIF

VARSET 消滅番号保存
消滅配列番号 = 0
データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{隊列番号}")
FOR デバフ番号, 0, データベース行数
	IF 経過能力 != ""
		SIF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", デバフ番号, "デバフ対象能力") != 経過能力
			CONTINUE
	ENDIF
	IF 経過枠 != ""
		SIF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", デバフ番号, "デバフ枠") != 経過枠
			CONTINUE
	ENDIF
	持続回数保存 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "持続被ダメ回数")
	IF 持続回数保存 == 1
		;ここで削除しちゃうと行がズレるので一旦配列に退避
		消滅番号保存:消滅配列番号 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "id")
		消滅配列番号 += 1
	ELSEIF 持続回数保存 > 1
		DT_CELL_SET @"デバフデータベース_{隊列番号}", デバフ番号, "持続被ダメ回数", 持続回数保存 - 1
	ENDIF
NEXT

FOR デバフ番号, 0, 消滅配列番号
	CALL デバフ削除(隊列番号, 消滅番号保存:デバフ番号, 1)
NEXT



@バフ削除(隊列番号, バフ番号, ID削除フラグ = 0)
#DIM 隊列番号
#DIM バフ番号
#DIM 消滅ID保存
#DIM ID削除フラグ

IF ID削除フラグ
	SIF DT_CELL_ISNULL(@"バフデータベース_{隊列番号}", バフ番号, "id", 1)
		RETURN 0
	消滅ID保存 = バフ番号
ELSE
	SIF バフ番号 < 0 || バフ番号 >= DT_ROW_LENGTH(@"バフデータベース_{隊列番号}")
		RETURN 0
	消滅ID保存 = DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "id")
ENDIF

TRYCALLFORM バフ消滅時処理_%DT_CELL_GETS(@"バフデータベース_{隊列番号}", 消滅ID保存, "バフ枠", 1)%
DT_ROW_REMOVE @"バフデータベース_{隊列番号}", 消滅ID保存

@デバフ削除(隊列番号, デバフ番号, ID削除フラグ = 0)
#DIM 隊列番号
#DIM デバフ番号
#DIM 消滅ID保存
#DIM ID削除フラグ

IF ID削除フラグ
	SIF DT_CELL_ISNULL(@"デバフデータベース_{隊列番号}", デバフ番号, "id", 1)
		RETURN 0
	消滅ID保存 = デバフ番号
ELSE
	SIF デバフ番号 < 0 || デバフ番号 >= DT_ROW_LENGTH(@"デバフデータベース_{隊列番号}")
		RETURN 0
	消滅ID保存 = DT_CELL_GET(@"デバフデータベース_{隊列番号}", デバフ番号, "id")
ENDIF

TRYCALLFORM デバフ消滅時処理_%DT_CELL_GETS(@"デバフデータベース_{隊列番号}", 消滅ID保存, "デバフ枠", 1)%
DT_ROW_REMOVE @"デバフデータベース_{隊列番号}", 消滅ID保存


@バフ削除_能力(隊列番号, 消去対象能力)
#DIM 隊列番号
#DIM ループ用
#DIMS 消去対象能力

FOR ループ用, 0, DT_ROW_LENGTH(@"バフデータベース_{隊列番号}")
	IF DT_CELL_GETS(@"バフデータベース_{隊列番号}", ループ用, "バフ対象能力") == 消去対象能力
		CALL バフ削除(隊列番号, ループ用, 0)
		RESTART
	ENDIF
NEXT

@バフ削除_枠(隊列番号, 消去枠)
#DIM 隊列番号
#DIM ループ用
#DIMS 消去枠

FOR ループ用, 0, DT_ROW_LENGTH(@"バフデータベース_{隊列番号}")
	IF DT_CELL_GETS(@"バフデータベース_{隊列番号}", ループ用, "バフ枠") == 消去枠
		CALL バフ削除(隊列番号, ループ用, 0)
		RESTART
	ENDIF
NEXT

@デバフ削除_能力(隊列番号, 消去対象能力)
#DIM 隊列番号
#DIM ループ用
#DIMS 消去対象能力

FOR ループ用, 0, DT_ROW_LENGTH(@"デバフデータベース_{隊列番号}")
	IF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", ループ用, "デバフ対象能力") == 消去対象能力
		CALL デバフ削除(隊列番号, ループ用, 0)
		RESTART
	ENDIF
NEXT

@デバフ削除_枠(隊列番号, 消去枠)
#DIM 隊列番号
#DIM ループ用
#DIMS 消去枠

FOR ループ用, 0, DT_ROW_LENGTH(@"デバフデータベース_{隊列番号}")
	IF DT_CELL_GETS(@"デバフデータベース_{隊列番号}", ループ用, "デバフ枠") == 消去枠
		CALL デバフ削除(隊列番号, ループ用, 0)
		RESTART
	ENDIF
NEXT


@大技待機解除(隊列番号)
#DIM 隊列番号
JUMP バフ削除_枠(隊列番号, "大技待機")
