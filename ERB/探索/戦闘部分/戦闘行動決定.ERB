
@行動内容入力
#DIM バフ・デバフ番号
#DIM 改行フラグ
#DIM 表示アビ数
#DIM アビ番号
#DIM 消費ＭＰ

VARSET LOCALS
上メニュー操作許可フラグ = 1
CALL 画面再描画
CALL 口上変数初期化

エネミー画像ボタン化フラグ = 1
キャラ画像ボタン化フラグ = 1

IF BATTLE_STATE:戦闘行動キャラ:奥義ゲージ >= 100
	CALL 奥義名呼び出し(BATTLE_STATE:戦闘行動キャラ:キャラ番号)
	KSTR:(K++) = <button value = '100'>[100] 通常攻撃</button>　　　<button value = '101'>[101] 奥義：%TSTR:コマンド名受渡%</button>
ELSE
	KSTR:(K++) = <button value = '100'>[100] 通常攻撃</button>
ENDIF
VARSET RESULTS
VARSET アビ関数名保存
LOCAL:1 = 0
表示アビ数 = ENUMFUNCBEGINSWITH(@"固有アビ_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ番号)}_")
IF 表示アビ数 == 0
	VARSET RESULTS
	表示アビ数 = ENUMFUNCBEGINSWITH(@"汎用固有アビ_%属性数値文字列変換(基礎BATTLE_STATE:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):属性)%")
ENDIF

FOR アビ番号, 0, 表示アビ数
	TSTR:コマンド名受渡 = 
	アビテンプレート用_アビ封印用フラグ = 0
	CALLFORM %RESULTS:アビ番号%("アビ名", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
	CALLFORM %RESULTS:アビ番号%(@"アビ説明文", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
	消費ＭＰ = RESULT
	IF TSTR:コマンド名受渡 != ""
		IF アビテンプレート用_アビ封印用フラグ || 消費ＭＰ > BATTLE_STATE:戦闘行動キャラ:ＭＰ
			IF アビ使用確認スキップフラグ == 0
				NSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'><button value = '{110 + アビ番号}'>[{110 + アビ番号}] %TSTR:コマンド名受渡, 26, LEFT%</button></font>
			ELSE
				NSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'>[{110 + アビ番号}] %TSTR:コマンド名受渡, 26, LEFT%</font>
			ENDIF
		ELSE
			NSTR:(K++) = <button value = '{110 + アビ番号}'>[{110 + アビ番号}] %TSTR:コマンド名受渡, 26, LEFT%</button>
		ENDIF
		アビ関数名保存:アビ番号 = %RESULTS:アビ番号%
		LOCAL:1 += 1
		IF LOCAL:1 % 3 == 0
			NSTR:(K++) = <br>
		ENDIF
	ENDIF
NEXT
IF LOCAL:1 % 3 != 0
	NSTR:(K++) = <br>
ENDIF

IF 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備衣装番号 < 1
	;衣装装備なし
ELSE
	VARSET 衣装アビ関数名保存
	VARSET RESULTS
	LOCAL:1 = 0
	表示アビ数 = ENUMFUNCBEGINSWITH(@"衣装アビ関数_%DT_CELL_GETS("所持衣装データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備衣装番号, "衣装名")%_")
	FOR LOCAL, 0, 表示アビ数
		TSTR:コマンド名受渡 = 
		アビテンプレート用_アビ封印用フラグ = 0
		CALLFORM %RESULTS:LOCAL%(@"アビ名", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		CALLFORM %RESULTS:LOCAL%(@"アビ説明文", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		消費ＭＰ = RESULT
		IF TSTR:コマンド名受渡 != ""
			IF アビテンプレート用_アビ封印用フラグ || 消費ＭＰ > BATTLE_STATE:戦闘行動キャラ:ＭＰ
				IF アビ使用確認スキップフラグ == 0
					NSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'><button value = '{120 + LOCAL}'>[{120 + LOCAL}] %TSTR:コマンド名受渡, 26, LEFT%</button></font>
				ELSE
					NSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'>[{120 + LOCAL}] %TSTR:コマンド名受渡, 26, LEFT%</font>
				ENDIF
			ELSE
				NSTR:(K++) = <button value = '{120 + LOCAL}'>[{120 + LOCAL}] %TSTR:コマンド名受渡, 26, LEFT%</button>
			ENDIF
			衣装アビ関数名保存:LOCAL = %RESULTS:LOCAL%
			LOCAL:1 += 1
			IF LOCAL:1 % 3 == 0
				NSTR:(K++) = <br>
			ENDIF
		ENDIF
	NEXT
ENDIF

; FOR LOCAL:1, 0, 6
; 	LOCALS:10 += LOCALS:(LOCAL:1)
; 	LOCALS:10 += "<br>"
; NEXT
; TSTR:メッセージ欄文字列受け渡し_下側 = <div rect='{左顔グラあり},4312,5662,1687'>%LOCALS:10%</div>

; CALL 画面再描画

CALL メッセージ欄表示用関数(@"探索用_{戦闘行動キャラ}_顔", @"%CALLNAME:(BATTLE_STATE:戦闘行動キャラ:キャラ番号)%",,0)

BINPUT
戦闘行動内容 = RESULT

SELECTCASE 戦闘行動内容
	CASE 0 TO 19
		;キャラクター状態表示
		DRAWLINE
		IF 戦闘行動内容 < 10
			PRINTFORML ■%CALLNAME:(BATTLE_STATE:戦闘行動内容:キャラ番号)%
		ELSE
			PRINTFORML ■%敵BATTLE_STATE_STR:(戦闘行動内容 - 10):エネミー名%
		ENDIF
		PRINTL ＜バフ＞
		FOR バフ・デバフ番号, 0, DT_ROW_LENGTH(@"バフデータベース_{戦闘行動内容}")
			IF DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "特殊表示オプション")
				CALLFORM バフ・デバフ特殊表示_%DT_CELL_GETS(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "バフ枠")%(戦闘行動内容, バフ・デバフ番号)
				PRINTL ----
			ELSE
				PRINTFORM %DT_CELL_GETS(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "バフ対象能力")%バフ
				PRINTFORML ：%DT_CELL_GETS(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "バフ名")%
				PRINTFORM 効果枠：%DT_CELL_GETS(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "バフ枠"), 20, LEFT%
				PRINTFORM 効果量：{DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "バフ効果量_固定値"), 4}　　
				PRINTFORML 効果割合：{DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "バフ効果量_割合"), 4}％
				IF DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続ターン") < 0
					PRINTFORM 持続ターン：永続　　
					改行フラグ = 1
				ELSEIF DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続ターン") > 0
					PRINTFORM 持続ターン：{DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続ターン")}　　
					改行フラグ = 1
				ENDIF
				IF DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続回数") > 0
					PRINTFORM 持続回数：{DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続回数")}　　
					改行フラグ = 1
				ENDIF
				IF DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続行動回数") > 0
					PRINTFORM 持続行動回数：{DT_CELL_GET(@"バフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続行動回数")}　　
					改行フラグ = 1
				ENDIF
				IF 改行フラグ
					PRINTL 
					PRINTL ----
				ENDIF
			ENDIF
		NEXT
		PRINTL
		PRINTL ＜デバフ＞
		FOR バフ・デバフ番号, 0, DT_ROW_LENGTH(@"デバフデータベース_{戦闘行動内容}")
			IF DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "特殊表示オプション")
				CALLFORM バフ・デバフ特殊表示_%DT_CELL_GETS(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "デバフ枠")%(戦闘行動内容, バフ・デバフ番号)
				PRINTL ----
			ELSE
				PRINTFORM %DT_CELL_GETS(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "デバフ対象能力")%デバフ
				PRINTFORML ：%DT_CELL_GETS(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "デバフ名")%
				PRINTFORM 効果枠：%DT_CELL_GETS(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "デバフ枠"), 20, LEFT%
				PRINTFORM 効果量：{DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "デバフ効果量_固定値"), 4}　　
				PRINTFORML 効果割合：{DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "デバフ効果量_割合"), 4}％
				IF DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続ターン") < 0
					PRINTFORM 持続ターン：永続
					改行フラグ = 1
				ELSEIF DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続ターン") > 0
					PRINTFORM 持続ターン：{DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続ターン")}　　
					改行フラグ = 1
				ENDIF
				IF DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続回数") > 0
					PRINTFORM 持続回数：{DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続回数")}　　
					改行フラグ = 1
				ENDIF
				IF DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続行動回数") > 0
					PRINTFORM 持続行動回数：{DT_CELL_GET(@"デバフデータベース_{戦闘行動内容}", バフ・デバフ番号, "持続行動回数")}　　
					改行フラグ = 1
				ENDIF
				IF 改行フラグ
					PRINTL 
					PRINTL ----
				ENDIF
			ENDIF
		NEXT
		PRINTL
		DRAWLINE
		WAIT
		RESTART
	CASE 1000
		;アイテム使用
		IF アイテム使用済みフラグ
			REUSELASTLINE 
			RESTART
		ENDIF
		エネミー画像ボタン化フラグ = 0
		キャラ画像ボタン化フラグ = 0
		ダンジョン表示モード = アイテム画面
		$INPUT_LOOP_ITEM
		CALL 画面再描画
		INPUT
		LOCAL = RESULT
		SELECTCASE LOCAL
			CASE 1 TO 24
				IF DT_CELL_GET("所持アイテムデータベース", 0, 表示アイテム名:LOCAL)
					選択用変数 = LOCAL
					$INPUT_LOOP_ITEM2
					CALL 画面再描画
					INPUT
					LOCAL = RESULT
					IF LOCAL == 999
						ダンジョン表示モード = アイテム画面
						キャラ画像ボタン化フラグ = 1
						CLEARLINE 1
						選択用変数 = -1
						GOTO INPUT_LOOP_ITEM
					ENDIF
					TRYCCALLFORM アイテム効果処理_%表示アイテム名:選択用変数%(LOCAL)
						IF RESULT == 0
							REUSELASTLINE 
							GOTO INPUT_LOOP_ITEM2
						ENDIF
						アイテム使用済みフラグ = 1
					CATCH
						REUSELASTLINE 
						GOTO INPUT_LOOP_ITEM2
					ENDCATCH
				ELSE
					REUSELASTLINE 
					GOTO INPUT_LOOP_ITEM
				ENDIF
			CASE 999
			CASEELSE
				REUSELASTLINE 
				GOTO INPUT_LOOP_ITEM
		ENDSELECT
		ダンジョン表示モード = 戦闘画面
		選択用変数 = -1
		CALL 画面再描画
		RESTART
	CASE 1001
		;逃げる
		エネミー画像ボタン化フラグ = 0
		キャラ画像ボタン化フラグ = 0
		CALL 口上変数初期化
		KSTR:(K++) = 戦闘から逃げます。よろしいですか？
		KSTR:(K++) = <button value='0'>[0]はい</button>
		KSTR:(K++) = <button value='1'>[1]いいえ</button>
		CALL メッセージ欄表示用関数(,,,0)
		$INPUT_LOOP_ESCAPE
		INPUT
		LOCAL = RESULT
		SELECTCASE LOCAL
			CASE 0
				CALL 口上変数初期化
				CALL 戦闘終了時処理
				KSTR:(K++) = %CALLNAME:PLAYER%は戦闘から逃げ出した…
				CALL メッセージ欄表示用関数()
				キャラ画像ボタン化フラグ = 1
				RETURN -2
			CASE 1
				CALL 口上変数初期化
				CALL 画面再描画
				RESTART
			CASEELSE
				REUSELASTLINE 
				GOTO INPUT_LOOP_ESCAPE
		ENDSELECT
	CASE 1002
		INVERTBIT アビ使用確認スキップフラグ, 0
		CALL 画面再描画
		RESTART
	CASE 1003
		INVERTBIT 奥義使用確認スキップフラグ, 0
		CALL 画面再描画
		RESTART
	CASE 100 TO 101
		;通常攻撃or奥義
		エネミー画像ボタン化フラグ = 0
		キャラ画像ボタン化フラグ = 0
		上メニュー操作許可フラグ = 0
	CASE 110 TO 129
		エネミー画像ボタン化フラグ = 0
		キャラ画像ボタン化フラグ = 0
		上メニュー操作許可フラグ = 0
	CASEELSE
		REUSELASTLINE 
		RESTART
ENDSELECT


@戦闘行動実処理関数
#DIM 衣装番号
#DIM バフ番号
#DIM データベース行数
#DIM 奥義威力保存
#DIM 追撃数
#DIM 総ダメージ
#DIM 追撃ダメージ
#DIMS 口上用アビ関数キー保存
#DIMS 口上用技名保存
#DIMS 効果種類
#DIM 追撃効果量, 10
#DIM 追撃効果割合, 10
CALL アビ汎用変数文字列リセット
CALL 口上変数初期化
口上用技名保存 = 
詳細文文字列受け渡し変数 = 

SELECTCASE 戦闘行動内容
	CASE 100
		;通常攻撃
		TRYCCALLFORM 固有通常攻撃_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ番号)}
		CATCH
			アビ汎用文字列:選択時メッセージ１ = 誰を攻撃しますか？
			CALL アビ対象選択テンプレート_敵単体
			アビテンプレート用_アビ名 = 攻撃
			アビ汎用変数:効果割合 = 100
			CALL アビテンプレート_通常攻撃処理
		ENDCATCH
		IF RESULT == -1 || アビテンプレート用_キャンセルフラグ
			アビテンプレート用_キャンセルフラグ = 0
			RETURN -1
		ELSE
			CALL アビテンプレート用_表示メッセージ変換処理
		ENDIF
	CASE 101
		;奥義
		CALL 奥義名呼び出し(BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		口上用技名保存 = %TSTR:コマンド名受渡%
		CALL 奥義威力呼び出し(BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		奥義威力保存 = RESULT
		IF 奥義使用確認スキップフラグ == 0
			KSTR:(K++) = ■%口上用技名保存%
			KSTR:(K++) = %詳細文文字列受け渡し変数%
			;改行の数をカウントし、必要数を改行して戻るボタンを表示行の最後に入れ込む
			STRCOUNT 詳細文文字列受け渡し変数, "<br>"
			IF RESULT < 4
				FOR LOCAL, 0, 4 - RESULT
					KSTR:(K++) = 　
				NEXT
			ENDIF
			KSTR:(K++) = <button value='0'>[0]使用する</button>　　　　　<button value='999'>[999]戻る</button>
			CALL メッセージ欄表示用関数(@"探索用_{戦闘行動キャラ}_顔",,,0)
			$INPUT_LOOP_奥義
			BINPUT
			SELECTCASE RESULT
				CASE 0
					;使用する場合は下の処理へ移行
					CALL 口上変数初期化
				CASE 999
					RETURN -1
				CASEELSE
					REUSELASTLINE 
					GOTO INPUT_LOOP_奥義
			ENDSELECT
		ENDIF
		IF 奥義威力保存 > 0
			アビ汎用文字列:選択時メッセージ１ = 誰を攻撃しますか？
			;奥義威力０の時はダメージ無し奥義として攻撃部分はスキップ
			CALL アビ対象選択テンプレート_敵単体
			アビテンプレート用_アビ名 = 奥義：%TSTR:コマンド名受渡%
			IF アビテンプレート用_キャンセルフラグ
				アビテンプレート用_キャンセルフラグ = 0
				RETURN -1
			ENDIF
			アビ汎用変数:効果割合 = 奥義威力保存
			アビ汎用文字列:ダメージ種類 = 奥義ダメージ
			CALL アビテンプレート_ダメージ処理_自属性
		ENDIF
		;奥義ゲージ増加の追加効果に備えてここでゲージを減らす
		BATTLE_STATE:戦闘行動キャラ:奥義ゲージ -= 100

		CALL 奥義追加効果呼び出し(BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		IF RESULT == -1 || アビテンプレート用_キャンセルフラグ
			アビテンプレート用_キャンセルフラグ = 0
			;ここのキャンセル処理には飛んでこないはずだが、飛んできた場合に備えて奥義ゲージを戻す
			BATTLE_STATE:戦闘行動キャラ:奥義ゲージ += 100
			RETURN -1
		ELSE
			CALL 奥義後処理関数
			TRYCALLFORM KOJO_DUNGEON_奥義発動時_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ番号)}(口上用技名保存)
			CALL 口上変数初期化
			CALL アビテンプレート用_表示メッセージ変換処理
			戦闘中カウント:戦闘行動キャラ:奥義回数 += 1
			ターン中奥義回数保存 += 1

			IF ターン中奥義回数保存 == 1
				チェンバ基準キャラ保存 = 戦闘行動キャラ
			ENDIF
		ENDIF
	CASE 110 TO 119
		CALL 口上変数初期化
		アビテンプレート用_アビ封印用フラグ = 0
		CALLFORM %アビ関数名保存:(戦闘行動内容 - 110)%("アビ名", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		アビテンプレート用_アビ名 = %TSTR:コマンド名受渡%
		口上用技名保存 = %TSTR:コマンド名受渡%
		KSTR:(K++) = ■%TSTR:コマンド名受渡%
		CALLFORM %アビ関数名保存:(戦闘行動内容 - 110)%("アビ説明文", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		消費MP一時保存 = RESULT
		IF アビ使用確認スキップフラグ == 0
			KSTR:(K++) = %詳細文文字列受け渡し変数%
			;改行の数をカウントし、必要数を改行して戻るボタンを表示行の最後に入れ込む
			STRCOUNT 詳細文文字列受け渡し変数, "<br>"
			IF RESULT < 4
				FOR LOCAL, 0, 4 - RESULT
					KSTR:(K++) = 　
				NEXT
			ENDIF
			IF アビテンプレート用_アビ封印用フラグ
				KSTR:(K++) = <nonbutton>使用できません</nonbutton> 　　　<button value='999'>[999]戻る</button>
			ELSEIF BATTLE_STATE:戦闘行動キャラ:ＭＰ < 消費MP一時保存
				KSTR:(K++) = <nonbutton>ＭＰが足りません</nonbutton> 　　<button value='999'>[999]戻る</button>
			ELSE
				KSTR:(K++) = <button value='0'>[0]使用する</button>　　　　　<button value='999'>[999]戻る</button>
			ENDIF
			CALL メッセージ欄表示用関数(@"探索用_{戦闘行動キャラ}_顔",,,0)
			$INPUT_LOOP2
			BINPUT
			SELECTCASE RESULT
				CASE 0
					IF BATTLE_STATE:戦闘行動キャラ:ＭＰ < 消費MP一時保存
						REUSELASTLINE 
						GOTO INPUT_LOOP2
					ENDIF
					CALL 口上変数初期化
				CASE 999
					RETURN -1
				CASEELSE
					REUSELASTLINE 
					GOTO INPUT_LOOP2
			ENDSELECT
		ELSE
			IF BATTLE_STATE:戦闘行動キャラ:ＭＰ < 消費MP一時保存
				KSTR:(K++) = ＭＰが足りません。
				CALL メッセージ欄表示用関数(@"探索用_{戦闘行動キャラ}_顔")
				RETURN -1
			ENDIF
		ENDIF
		口上用アビ関数キー保存 = %REPLACE(アビ関数名保存:(戦闘行動内容 - 110), "固有アビ_", "")%
		CALLFORM %アビ関数名保存:(戦闘行動内容 - 110)%("アビ効果", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		IF RESULT == -1 || アビテンプレート用_キャンセルフラグ
			アビテンプレート用_キャンセルフラグ = 0
			RETURN -1
		ELSE
			;MP消費
			TRYCALLFORM KOJO_DUNGEON_固有アビ発動時_%口上用アビ関数キー保存%(口上用技名保存)
			CALL 口上変数初期化
			BATTLE_STATE:戦闘行動キャラ:ＭＰ -= 消費MP一時保存
			CALL アビテンプレート用_表示メッセージ変換処理
		ENDIF
	CASE 120 TO 129
		CALL 口上変数初期化
		VARSET RESULTS
		CALLFORM %衣装アビ関数名保存:(戦闘行動内容 - 120)%(@"アビ名", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		アビテンプレート用_アビ名 = %TSTR:コマンド名受渡%
		;ここに来てる時点で存在しないアビが選ばれてことは無いはずなので例外規定は作らない
		衣装番号 = 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備衣装番号
		;消費MP算出
		RESULT = 0
		CALLFORM %衣装アビ関数名保存:(戦闘行動内容 - 120)%(@"アビ説明文", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		消費MP一時保存 = RESULT
		IF アビ使用確認スキップフラグ == 0
			KSTR:(K++) = %詳細文文字列受け渡し変数%
			;改行の数をカウントし、必要数を改行して戻るボタンを表示行の最後に入れ込む
			STRCOUNT 詳細文文字列受け渡し変数, "<br>"
			IF RESULT < 4
				FOR LOCAL, 0, 4 - RESULT
					KSTR:(K++) = 　
				NEXT
			ENDIF
			IF アビテンプレート用_アビ封印用フラグ
				KSTR:(K++) = <nonbutton>使用できません</nonbutton> 　　　<button value='999'>[999]戻る</button>
			ELSEIF BATTLE_STATE:戦闘行動キャラ:ＭＰ < 消費MP一時保存
				KSTR:(K++) = <nonbutton>ＭＰが足りません</nonbutton> 　　<button value='999'>[999]戻る</button>
			ELSE
				KSTR:(K++) = <button value='0'>[0]使用する</button>　　　　　<button value='999'>[999]戻る</button>
			ENDIF
			CALL メッセージ欄表示用関数(@"探索用_{戦闘行動キャラ}_顔",,,0)
			$INPUT_LOOP3
			INPUT
			SELECTCASE RESULT
				CASE 0
					IF BATTLE_STATE:戦闘行動キャラ:ＭＰ < 消費MP一時保存
						REUSELASTLINE 
						GOTO INPUT_LOOP3
					ENDIF
				CASE 999
					RETURN -1
				CASEELSE
					REUSELASTLINE 
					GOTO INPUT_LOOP3
			ENDSELECT
		ELSE
			IF BATTLE_STATE:戦闘行動キャラ:ＭＰ < 消費MP一時保存
				KSTR:(K++) = ＭＰが足りません。
				CALL メッセージ欄表示用関数(@"探索用_{戦闘行動キャラ}_顔")
				RETURN -1
			ENDIF
		ENDIF
		CALL 口上変数初期化
		CALLFORM %衣装アビ関数名保存:(戦闘行動内容 - 120)%(@"アビ効果", BATTLE_STATE:戦闘行動キャラ:キャラ番号)
		IF RESULT == -1 || アビテンプレート用_キャンセルフラグ
			アビテンプレート用_キャンセルフラグ = 0
			RETURN -1
		ELSE
			;MP消費
			BATTLE_STATE:戦闘行動キャラ:ＭＰ -= 消費MP一時保存
			CALL アビテンプレート用_表示メッセージ変換処理
		ENDIF
ENDSELECT

CALL メッセージ欄表示用関数(,,,0)
IF アビテンプレート用_行動消費無しフラグ == 0
	BATTLE_STATE:戦闘行動キャラ:行動済みフラグ = 1
ENDIF

@敵戦闘行動実処理関数
#DIM 攻撃対象, 10
VARSET LOCAL
VARSET 攻撃対象
IF 敵BATTLE_STATE:(戦闘行動キャラ - 10):最大チャージターン > 0
	IF 敵BATTLE_STATE:(戦闘行動キャラ - 10):チャージターン >= 敵BATTLE_STATE:(戦闘行動キャラ - 10):最大チャージターン
		TRYCCALLFORM 敵チャージ行動_%敵BATTLE_STATE_STR:(戦闘行動キャラ - 10):エネミー名%
			敵BATTLE_STATE:(戦闘行動キャラ - 10):チャージターン = 0
			CALL アビテンプレート用_表示メッセージ変換処理
			CALL メッセージ欄表示用関数(,,,0)
			IF アビテンプレート用_行動消費無しフラグ == 0
				敵BATTLE_STATE:(戦闘行動キャラ - 10):行動済みフラグ = 1
			ENDIF
			RETURN 0
		CATCH
		ENDCATCH
	ENDIF
ENDIF

;通常攻撃
RESULT = 0
TRYCALLFORM 敵トリガー行動_%敵BATTLE_STATE_STR:(戦闘行動キャラ - 10):エネミー名%
;何か動いたなら１が返る、何も動いてないなら通常攻撃をさせる
IF RESULT == 0
	CALL アビ対象選択テンプレート_味方ランダムＸ体(1)
	アビテンプレート用_アビ名 = 攻撃
	アビ汎用変数:効果割合 = 100
	CALL アビテンプレート_通常攻撃処理
	敵BATTLE_STATE:(戦闘行動キャラ - 10):チャージターン += 1
ENDIF

CALL アビテンプレート用_表示メッセージ変換処理
CALL メッセージ欄表示用関数(,,,0)
IF アビテンプレート用_行動消費無しフラグ == 0
	敵BATTLE_STATE:(戦闘行動キャラ - 10):行動済みフラグ = 1
ENDIF


@ダメージ計算処理(攻撃威力変数, 攻撃側使用能力値 = "攻撃力", 防御側使用能力値 = "防御力", 乱数幅 = 5)
#DIM 攻撃威力変数
#DIM 防御数値
#DIM 攻撃数値
#DIM クリ率数値
#DIM クリダメ数値
#DIM 乱数幅
#DIM 対象属性
#DIM 行動者属性
#DIM 属性補正フラグ
#DIM 属性強化変数
#DIM 属性耐性変数
#DIMS 攻撃側使用能力値
#DIMS 防御側使用能力値
VARSET LOCAL
VARSET LOCALS

IF 攻撃側使用能力値 == ""
	攻撃側使用能力値 = 攻撃力
ENDIF
IF 防御側使用能力値 == ""
	防御側使用能力値 = 防御力
ENDIF

CALL バフ・デバフ測定(戦闘行動キャラ, 攻撃側使用能力値)
攻撃数値 = RESULT * 攻撃威力変数 / 100
CALL バフ・デバフ測定(戦闘行動キャラ, 攻撃側使用能力値)
防御数値 = RESULT
IF 乱数幅 < 0
	乱数幅 = 5
ENDIF

IF 戦闘行動対象 < 10
	対象属性 = BATTLE_STATE:戦闘行動対象:属性
ELSEIF 戦闘行動対象 >= 10
	対象属性 = 敵BATTLE_STATE:(戦闘行動対象 - 10):属性
ENDIF
IF 戦闘行動キャラ < 10
	;味方側処理
	行動者属性 = BATTLE_STATE:戦闘行動キャラ:属性
	属性補正フラグ = 属性有利不利(行動者属性, 対象属性, "味方側")
ELSEIF 戦闘行動キャラ >= 10
	;敵側処理
	行動者属性 = 敵BATTLE_STATE:(戦闘行動キャラ - 10):属性
	属性補正フラグ = 属性有利不利(行動者属性, 対象属性,  "敵側")
ENDIF
CALL バフ・デバフ測定(戦闘行動キャラ, @"%属性数値文字列変換(行動者属性)%強化")
属性強化変数 = RESULT
CALL バフ・デバフ測定(戦闘行動キャラ, "全強化")
属性強化変数 += RESULT
CALL バフ・デバフ測定(戦闘行動対象, @"%属性数値文字列変換(行動者属性)%耐性")
属性耐性変数 = RESULT
CALL バフ・デバフ測定(戦闘行動対象, "全耐性")
属性耐性変数 += RESULT

;乱数幅は、「算出数値から上下に{乱数幅}％の範囲でランダムに変化させる」数値
;基本は５％を想定。ムラが大きい攻撃は大きく、ムラが小さい攻撃は小さくすること

;基礎ダメージ計算
IF アビ汎用変数:防御無視オプション_割合 || アビ汎用変数:防御無視オプション_固定値
	防御数値 = 防御数値 * (100 - アビ汎用変数:防御無視オプション_割合) / 100
	防御数値 = MAX(0, 防御数値 - アビ汎用変数:防御無視オプション_固定値)
ENDIF
LOCAL = (攻撃数値 / 2) - (防御数値 / 4)

;属性補正
;クリティカルフラグが999の時は強制的にクリティカル
SIF アビ汎用変数:クリティカルフラグ != 999
	アビ汎用変数:クリティカルフラグ = 0
IF 属性補正フラグ == 1
	IF アビ汎用変数:クリティカル率計算値保存 == -1
		CALL バフ・デバフ測定(戦闘行動キャラ, "クリティカル率")
		アビ汎用変数:クリティカル率計算値保存 = RESULT
	ENDIF
	クリ率数値 = アビ汎用変数:クリティカル率計算値保存 + アビ汎用変数:クリティカル率補正値
	IF アビ汎用変数:クリティカルフラグ == 999 || RAND:100 < クリ率数値
		IF アビ汎用変数:クリティカルダメージ計算値保存 == -1
			CALL バフ・デバフ測定(戦闘行動キャラ, "クリティカルダメージ率")
		ENDIF
		クリダメ数値 = アビ汎用変数:クリティカルダメージ計算値保存 + アビ汎用変数:クリティカルダメージ補正値
		LOCAL = MAX(LOCAL * クリダメ数値 / 100, 攻撃数値 / 3)
		SIF アビ汎用変数:クリティカルフラグ == 0
			アビ汎用変数:クリティカルフラグ = 1
	ELSE
		LOCAL = MAX(LOCAL * 120 / 100, 攻撃数値 / 5)
	ENDIF
ELSEIF 属性補正フラグ == -1
	LOCAL = LOCAL * 80 / 100
ENDIF
LOCAL = LOCAL * (100 + 属性強化変数 - 属性耐性変数) / 100

;与ダメ増加
CALL バフ・デバフ測定(戦闘行動キャラ, "与ダメ増加", LOCAL)
LOCAL = RESULT

;与ダメ減少
CALL バフ・デバフ測定(戦闘行動キャラ, "与ダメ減少", LOCAL)
LOCAL = RESULT

;ダメージカット
CALL バフ・デバフ測定(戦闘行動対象, "ダメージ増減", LOCAL)
LOCAL = RESULT

;乱数処理
LOCAL:1 = RAND:(乱数幅 * 2 + 1) - 乱数幅
LOCAL = LOCAL * (100 + LOCAL:1) / 100
;最低保障１
IF 攻撃威力変数 > 0
	LOCAL = MAX(LOCAL, 1)
ELSE
	LOCAL = 0
ENDIF

RETURN LOCAL




@回復量計算処理(回復威力変数, 回復側使用能力値 = "回復力", 乱数幅 = 5)
#DIM 回復威力変数
#DIMS 回復側使用能力値
#DIM 回復数値
#DIM 乱数幅
;乱数幅は、「算出数値から上下に{乱数幅}％の範囲でランダムに変化させる」数値
;基本は５％を想定。ムラが大きい攻撃は大きく、ムラが小さい攻撃は小さくすること
VARSET LOCAL

IF 回復側使用能力値 == ""
	回復側使用能力値 = 回復力
ENDIF
IF 乱数幅 < 0
	乱数幅 = 5
ENDIF

CALL バフ・デバフ測定(戦闘行動キャラ, 回復側使用能力値)
回復数値 = RESULT * 回復威力変数 / 100

;基礎ダメージ計算
LOCAL = 回復数値

;乱数処理
LOCAL:1 = RAND:(乱数幅 * 2 + 1) - 乱数幅
LOCAL = LOCAL * (100 + LOCAL:1) / 100
;最低保障１
IF 回復威力変数 > 0
	LOCAL = MAX(LOCAL, 1)
ELSE
	LOCAL = 0
ENDIF

RETURN LOCAL


@戦闘不能時処理(隊列番号, 対象番号)
#DIM 隊列番号
#DIM バフ番号
#DIMS 文字列一時保存
#DIM 対象番号

IF 戦闘行動キャラ >= 10
	;敵＞味方の戦闘不能の場合、口上用変数を記録
	CALL 反応口上記録処理("戦闘不能時")
ENDIF

バフ番号 = バフ存在チェック("自動復活", 隊列番号)
IF バフ番号 > -1
	;復活
	IF 隊列番号 < 10
		LOCAL = (BATTLE_STATE:隊列番号:最大ＨＰ * DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "バフ効果量_割合") / 100) + DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "バフ効果量_固定値")
		BATTLE_STATE:隊列番号:ＨＰ = MIN(BATTLE_STATE:隊列番号:最大ＨＰ, LOCAL)
		文字列一時保存 = %戦闘キャラ名前取得(隊列番号)%のＨＰが{BATTLE_STATE:隊列番号:ＨＰ}回復した！
	ELSE
		LOCAL = (敵BATTLE_STATE:(隊列番号 - 10):最大ＨＰ * DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "バフ効果量_割合") / 100) + DT_CELL_GET(@"バフデータベース_{隊列番号}", バフ番号, "バフ効果量_固定値")
		敵BATTLE_STATE:(隊列番号 - 10):ＨＰ = MIN(敵BATTLE_STATE:(隊列番号 - 10):最大ＨＰ, LOCAL)
		文字列一時保存 = %戦闘キャラ名前取得(隊列番号)%のＨＰが{敵BATTLE_STATE:(隊列番号 - 10):ＨＰ}回復した！
	ENDIF
	;対象番号によって文字列を入れる場所を変える
	IF 対象番号 > -1
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(隊列番号)%は%DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ名")%の効果で復活した！
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %文字列一時保存%
	ELSE
		WSTR:(K++) = %戦闘キャラ名前取得(隊列番号)%は%DT_CELL_GETS(@"バフデータベース_{隊列番号}", バフ番号, "バフ名")%の効果で復活した！
		WSTR:(K++) = %文字列一時保存%
	ENDIF
	;回数消費
	CALL バフ回数経過処理(戦闘行動キャラ, "自動復活")
ELSE
	;バフ・デバフをリセット
	DT_CLEAR @"バフデータベース_{隊列番号}"
	DT_CLEAR @"デバフデータベース_{隊列番号}"
ENDIF



@回避判定チェック(行動キャラ = -1, 対象キャラ = -1, 命中率補正 = 0, 回避率補正 = 0)
#DIM 行動キャラ
#DIM 対象キャラ
#DIM 命中率補正
#DIM 回避率補正
#DIM 命中率計算値
#DIM 回避率計算値

IF 行動キャラ == -1
	行動キャラ = 戦闘行動キャラ
ENDIF
IF 対象キャラ == -1
	対象キャラ = 戦闘行動対象
ENDIF

CALL バフ・デバフ測定(行動キャラ, "命中率")
命中率計算値 = RESULT + 命中率補正

CALL バフ・デバフ測定(対象キャラ, "回避率")
回避率計算値 = RESULT + 回避率補正

IF RAND:100 < 命中率計算値 - 回避率計算値
	;命中時
	RETURN 0
ELSE
	;回避時
	RETURN 1
ENDIF


@被ダメージ時効果処理(文章表示番号)
#DIM バフ番号
#DIM 文章表示番号
#DIM 反撃威力
#DIM 反撃威力_固定値
#DIM 行動キャラ一時保存
#DIM 対象キャラ一時保存
#DIM ダメージ量計算値
#DIM 死亡フラグ
死亡フラグ = 0

;カウンターバフ時
バフ番号 = バフ存在チェック("カウンター", 戦闘行動対象)
IF バフ番号 == -1
	RETURN 0
ENDIF
;反撃ダメージ取得
反撃威力 = DT_CELL_GET(@"バフデータベース_{戦闘行動対象}", バフ番号, "バフ効果量_割合")
反撃威力_固定値 = DT_CELL_GET(@"バフデータベース_{戦闘行動対象}", バフ番号, "バフ効果量_固定値")
;行動者と対象を入れ替える
行動キャラ一時保存 = 戦闘行動キャラ
対象キャラ一時保存 = 戦闘行動対象
戦闘行動キャラ = 対象キャラ一時保存
戦闘行動対象 = 行動キャラ一時保存

;攻撃処理
CALL ダメージ計算処理(反撃威力)
ダメージ量計算値 = RESULT + 反撃威力_固定値
アビテンプレート用_表示メッセージ格納:文章表示番号:(A_M_NUM:文章表示番号++) = %戦闘キャラ名前取得(戦闘行動キャラ)%の回避反撃！
アビテンプレート用_表示メッセージ格納:文章表示番号:(A_M_NUM:文章表示番号++) = %戦闘キャラ名前取得(戦闘行動対象)%に{ダメージ量計算値}のダメージ！
IF 戦闘行動対象 < 10
	BATTLE_STATE:戦闘行動対象:ＨＰ = MAX(BATTLE_STATE:戦闘行動対象:ＨＰ - ダメージ量計算値, 0)
	SIF BATTLE_STATE:戦闘行動対象:ＨＰ < 1
		死亡フラグ = 1
ELSE
	敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ = MAX(敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ - ダメージ量計算値, 0)
	SIF 敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ < 1
		死亡フラグ = 1
ENDIF
IF 死亡フラグ
	アビテンプレート用_表示メッセージ格納:文章表示番号:(A_M_NUM:文章表示番号++) = %戦闘キャラ名前取得(戦闘行動対象)%は倒れた！
	CALL 戦闘不能時処理(戦闘行動対象, 文章表示番号)
ENDIF

戦闘行動キャラ = 行動キャラ一時保存
戦闘行動対象 = 対象キャラ一時保存


@回避時効果処理(文章表示番号)
#DIM バフ番号
#DIM 文章表示番号
#DIM 反撃威力
#DIM 反撃威力_固定値
#DIM 行動キャラ一時保存
#DIM 対象キャラ一時保存
#DIM ダメージ量計算値
#DIM 死亡フラグ
死亡フラグ = 0

;回避反撃バフ時
バフ番号 = バフ存在チェック("回避反撃", 戦闘行動対象)
IF バフ番号 == -1
	RETURN 0
ENDIF
;反撃ダメージ取得
反撃威力 = DT_CELL_GET(@"バフデータベース_{戦闘行動対象}", バフ番号, "バフ効果量_割合")
反撃威力_固定値 = DT_CELL_GET(@"バフデータベース_{戦闘行動対象}", バフ番号, "バフ効果量_固定値")
;行動者と対象を入れ替える
行動キャラ一時保存 = 戦闘行動キャラ
対象キャラ一時保存 = 戦闘行動対象
戦闘行動キャラ = 対象キャラ一時保存
戦闘行動対象 = 行動キャラ一時保存

;攻撃処理
CALL ダメージ計算処理(反撃威力)
ダメージ量計算値 = RESULT + 反撃威力_固定値
アビテンプレート用_表示メッセージ格納:文章表示番号:(A_M_NUM:文章表示番号++) = %戦闘キャラ名前取得(戦闘行動キャラ)%の回避反撃！
アビテンプレート用_表示メッセージ格納:文章表示番号:(A_M_NUM:文章表示番号++) = %戦闘キャラ名前取得(戦闘行動対象)%に{ダメージ量計算値}のダメージ！
IF 戦闘行動対象 < 10
	BATTLE_STATE:戦闘行動対象:ＨＰ = MAX(BATTLE_STATE:戦闘行動対象:ＨＰ - ダメージ量計算値, 0)
	SIF BATTLE_STATE:戦闘行動対象:ＨＰ < 1
		死亡フラグ = 1
ELSE
	敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ = MAX(敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ - ダメージ量計算値, 0)
	SIF 敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ < 1
		死亡フラグ = 1
ENDIF
IF 死亡フラグ
	アビテンプレート用_表示メッセージ格納:文章表示番号:(A_M_NUM:文章表示番号++) = %戦闘キャラ名前取得(戦闘行動対象)%は倒れた！
	CALL 戦闘不能時処理(戦闘行動対象, 文章表示番号)
ENDIF

戦闘行動キャラ = 行動キャラ一時保存
戦闘行動対象 = 対象キャラ一時保存


