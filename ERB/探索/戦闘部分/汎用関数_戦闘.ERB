@属性文字列数値変換(ARGS)
#FUNCTION

SELECTCASE ARGS
	CASE "火"
		RETURNF 0
	CASE "水"
		RETURNF 1
	CASE "風"
		RETURNF 2
	CASE "土"
		RETURNF 3
	CASE "光"
		RETURNF 4
	CASE "闇"
		RETURNF 5
ENDSELECT

@属性数値文字列変換(ARG)
#FUNCTIONS

SELECTCASE ARG
	CASE 0
		RETURNF "火"
	CASE 1
		RETURNF "水"
	CASE 2
		RETURNF "風"
	CASE 3
		RETURNF "土"
	CASE 4
		RETURNF "光"
	CASE 5
		RETURNF "闇"
ENDSELECT

@得意武器文字列数値変換(ARGS)
#FUNCTION

SELECTCASE ARGS
	CASE "剣"
		RETURNF 0
	CASE "短剣"
		RETURNF 1
	CASE "槍"
		RETURNF 2
	CASE "斧"
		RETURNF 3
	CASE "杖"
		RETURNF 4
	CASE "銃"
		RETURNF 5
	CASE "格闘"
		RETURNF 6
	CASE "弓"
		RETURNF 7
	CASE "楽器"
		RETURNF 8
	CASE "刀"
		RETURNF 9
ENDSELECT

@得意武器数値文字列変換(ARG)
#FUNCTIONS

SELECTCASE ARG
	CASE 0
		RETURNF "剣"
	CASE 1
		RETURNF "短剣"
	CASE 2
		RETURNF "槍"
	CASE 3
		RETURNF "斧"
	CASE 4
		RETURNF "杖"
	CASE 5
		RETURNF "銃"
	CASE 6
		RETURNF "格闘"
	CASE 7
		RETURNF "弓"
	CASE 8
		RETURNF "楽器"
	CASE 9
		RETURNF "刀"
ENDSELECT


@属性有利不利(攻撃側, 防御側, ARGS)
#FUNCTION
#DIM 攻撃側
#DIM 防御側

SELECTCASE 攻撃側
	CASE 0
		;火
		IF 防御側 == 2
			RETURNF 1
		ELSEIF 防御側 == 1
			RETURNF -1
		ENDIF
	CASE 1
		;水
		IF 防御側 == 0
			RETURNF 1
		ELSEIF 防御側 == 3
			RETURNF -1
		ENDIF
	CASE 2
		;風
		IF 防御側 == 3
			RETURNF 1
		ELSEIF 防御側 == 0
			RETURNF -1
		ENDIF
	CASE 3
		;土
		IF 防御側 == 1
			RETURNF 1
		ELSEIF 防御側 == 2
			RETURNF -1
		ENDIF
	CASE 4
		;光
		IF 防御側 == 5
			IF ARGS == "味方側"
				RETURNF 1
			ELSEIF ARGS == "敵側"
				RETURNF -1
			ENDIF
		ENDIF
	CASE 5
		;闇
		IF 防御側 == 4
			IF ARGS == "味方側"
				RETURNF 1
			ELSEIF ARGS == "敵側"
				RETURNF -1
			ENDIF
		ENDIF
ENDSELECT

RETURNF 0



@バフ・デバフ測定(ARG, バフ・デバフ種類, 補正前数値)
;--------------------------------------------------------------------
;持続回数を減少する処理も入れ込んでいるので、実処理時以外は呼ばないこと
;補正前数値を使うのは補正前の数値を取ることが出来ないダメージ増減時のみ
;--------------------------------------------------------------------
#FUNCTION
#DIMS バフ・デバフ種類
#DIM データベース行数
#DIM バフ・デバフ補正後数値
#DIM ループ用
#DIM 補正前数値
VARSET LOCAL

IF GETNUM(BATTLE_STATE, バフ・デバフ種類, 2) > 0
	データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{ARG}")
	FOR ループ用, 0, データベース行数
		IF DT_CELL_GETS(@"バフデータベース_{ARG}", ループ用, "バフ対象能力") == バフ・デバフ種類
			LOCAL += DT_CELL_GET(@"バフデータベース_{ARG}", ループ用, "バフ効果量_割合")
			LOCAL:1 += DT_CELL_GET(@"バフデータベース_{ARG}", ループ用, "バフ効果量_固定値")
			;回数持続の効果の回数を減少
			LOCAL:10 = DT_CELL_GET(@"バフデータベース_{ARG}", ループ用, "持続回数")
			IF LOCAL:10 == 1
				DT_ROW_REMOVE @"バフデータベース_{ARG}", ループ用
			ELSEIF LOCAL:10 > 0
				DT_CELL_SET @"バフデータベース_{ARG}", ループ用, "持続回数", LOCAL:10 - 1
			ENDIF
		ENDIF
	NEXT
	データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{ARG}")
	FOR ループ用, 0, データベース行数
		IF DT_CELL_GETS(@"デバフデータベース_{ARG}", ループ用, "デバフ対象能力") == バフ・デバフ種類
			LOCAL -= DT_CELL_GET(@"デバフデータベース_{ARG}", ループ用, "デバフ効果量_割合")
			LOCAL:1 -= DT_CELL_GET(@"デバフデータベース_{ARG}", ループ用, "デバフ効果量_固定値")
			;回数持続の効果の回数を減少
			LOCAL:10 = DT_CELL_GET(@"デバフデータベース_{ARG}", ループ用, "持続回数")
			IF LOCAL:10 == 1
				DT_ROW_REMOVE @"デバフデータベース_{ARG}", ループ用
			ELSEIF LOCAL:10 > 0
				DT_CELL_SET @"デバフデータベース_{ARG}", ループ用, "持続回数", LOCAL:10 - 1
			ENDIF
		ENDIF
	NEXT
	IF ARG < 10
		;味方側
		バフ・デバフ補正後数値 = (BATTLE_STATE:ARG:バフ・デバフ種類 * (100 + LOCAL) / 100) + LOCAL:1
		;最低でも通常数値の半分まで
		バフ・デバフ補正後数値 = MAX(BATTLE_STATE:ARG:バフ・デバフ種類 / 2, バフ・デバフ補正後数値)
	ELSE
		;敵側
		バフ・デバフ補正後数値 = (敵BATTLE_STATE:(ARG - 10):バフ・デバフ種類 * (100 + LOCAL) / 100) + LOCAL:1
		;最低でも通常数値の半分まで
		バフ・デバフ補正後数値 = MAX(BATTLE_STATE:(ARG - 10):バフ・デバフ種類 / 2, バフ・デバフ補正後数値)
	ENDIF
	RETURNF バフ・デバフ補正後数値
ELSEIF バフ・デバフ種類 == "連続攻撃率"
	;連撃率はステータスになく、かつDA率TA率と基本的に加算するので基本値を無視して補正値のみ
	データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{ARG}")
	FOR ループ用, 0, データベース行数
		IF DT_CELL_GETS(@"バフデータベース_{ARG}", ループ用, "バフ対象能力") == "連続攻撃率"
			LOCAL:1 += DT_CELL_GET(@"バフデータベース_{ARG}", ループ用, "バフ効果量_固定値")
			;回数持続の効果の回数を減少
			LOCAL:10 = DT_CELL_GET(@"バフデータベース_{ARG}", ループ用, "持続回数")
			IF LOCAL:10 == 1
				DT_ROW_REMOVE @"バフデータベース_{ARG}", ループ用
			ELSEIF LOCAL:10 > 0
				DT_CELL_SET @"バフデータベース_{ARG}", ループ用, "持続回数", LOCAL:10 - 1
			ENDIF
		ENDIF
	NEXT
	データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{ARG}")
	FOR ループ用, 0, データベース行数
		IF DT_CELL_GETS(@"デバフデータベース_{ARG}", ループ用, "デバフ対象能力") == "連続攻撃率"
			LOCAL:1 -= DT_CELL_GET(@"デバフデータベース_{ARG}", ループ用, "デバフ効果量_固定値")
			;回数持続の効果の回数を減少
			LOCAL:10 = DT_CELL_GET(@"デバフデータベース_{ARG}", ループ用, "持続回数")
			IF LOCAL:10 == 1
				DT_ROW_REMOVE @"デバフデータベース_{ARG}", ループ用
			ELSEIF LOCAL:10 > 0
				DT_CELL_SET @"デバフデータベース_{ARG}", ループ用, "持続回数", LOCAL:10 - 1
			ENDIF
		ENDIF
	NEXT
	;処理の関係上、割合を無視して固定値のみ
	バフ・デバフ補正後数値 = LOCAL:1
	RETURNF バフ・デバフ補正後数値
ELSEIF バフ・デバフ種類 == "ダメージ増減"
	;連撃率はステータスになく、かつDA率TA率と基本的に加算するので基本値を無視して補正値のみ
	データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{ARG}")
	FOR ループ用, 0, データベース行数
		IF DT_CELL_GETS(@"バフデータベース_{ARG}", ループ用, "バフ対象能力") == "ダメージ増減"
			LOCAL += DT_CELL_GET(@"バフデータベース_{ARG}", ループ用, "バフ効果量_割合")
			LOCAL:1 += DT_CELL_GET(@"バフデータベース_{ARG}", ループ用, "バフ効果量_固定値")
			;回数持続の効果の回数を減少
			LOCAL:10 = DT_CELL_GET(@"バフデータベース_{ARG}", ループ用, "持続回数")
			IF LOCAL:10 == 1
				DT_ROW_REMOVE @"バフデータベース_{ARG}", ループ用
			ELSEIF LOCAL:10 > 0
				DT_CELL_SET @"バフデータベース_{ARG}", ループ用, "持続回数", LOCAL:10 - 1
			ENDIF
		ENDIF
	NEXT
	データベース行数 = DT_ROW_LENGTH(@"デバフデータベース_{ARG}")
	FOR ループ用, 0, データベース行数
		IF DT_CELL_GETS(@"デバフデータベース_{ARG}", ループ用, "デバフ対象能力") == "ダメージ増減"
			LOCAL -= DT_CELL_GET(@"デバフデータベース_{ARG}", ループ用, "デバフ効果量_割合")
			LOCAL:1 -= DT_CELL_GET(@"デバフデータベース_{ARG}", ループ用, "デバフ効果量_固定値")
			;回数持続の効果の回数を減少
			LOCAL:10 = DT_CELL_GET(@"デバフデータベース_{ARG}", ループ用, "持続回数")
			IF LOCAL:10 == 1
				DT_ROW_REMOVE @"デバフデータベース_{ARG}", ループ用
			ELSEIF LOCAL:10 > 0
				DT_CELL_SET @"デバフデータベース_{ARG}", ループ用, "持続回数", LOCAL:10 - 1
			ENDIF
		ENDIF
	NEXT
	;処理の関係上、割合を無視して固定値のみ
	IF LOCAL > 99
		;100%以上カットした時、固定値のダメージ増減も無効化される
		LOCAL = 100
		LOCAL:1 = 0
	ENDIF
	バフ・デバフ補正後数値 = (補正前数値 * (100 - LOCAL) / 100) + LOCAL:1
	DEBUGPRINTFORML 補正前：{補正前数値}
	DEBUGPRINTFORML 補正後：{バフ・デバフ補正後数値}
	RETURNF バフ・デバフ補正後数値
ENDIF



@雑魚敵遭遇汎用処理
CALL BATTLE_MAIN_LOOP

VARSET 敵BATTLE_STATE:0:0
VARSET 敵BATTLE_STATE_STR:0:0

IF RESULT == 0
	;勝利時
	ダンジョン表示モード = マップ画面
	RETURN 0
ELSEIF RESULT == 1
	;全滅時
	ダンジョン表示モード = マップ画面
	CALL 口上変数初期化
	KSTR:(K++) = %CALLNAME:PLAYER%は力尽きた仲間たちを連れ、なんとか逃げ出した…
	CALL メッセージ欄表示用関数()
	ダンジョン終了フラグ = 1
	RETURN 1
ELSEIF RESULT == -1
	;逃走時
	ダンジョン表示モード = マップ画面
	RETURN -1
ENDIF

@かばうチェック_味方(ARGS)
#DIM ループ用
#DIM データベース行数
アビ汎用変数:かばうフラグ = 0

FOR LOCAL, 0, 4
	データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{LOCAL}")
	;まず全体かばうチェック
	FOR ループ用, 0, データベース行数
		IF DT_CELL_GETS(@"バフデータベース_{LOCAL}", ループ用, "バフ対象能力") == "全体かばう"
			;回数持続の効果の回数を減少
			LOCAL:10 = DT_CELL_GET(@"バフデータベース_{LOCAL}", ループ用, "持続回数")
			IF LOCAL:10 == 1
				DT_ROW_REMOVE @"バフデータベース_{LOCAL}", ループ用
			ELSEIF LOCAL:10 > 0
				DT_CELL_SET @"バフデータベース_{LOCAL}", ループ用, "持続回数", LOCAL:10 - 1
			ENDIF
			戦闘行動対象 = LOCAL
			アビ汎用変数:かばうフラグ = 1
			RETURN 1
		ENDIF
	NEXT
	IF ARGS != "全体かばう"
		;単体かばうチェック
		FOR ループ用, 0, データベース行数
			IF DT_CELL_GETS(@"バフデータベース_{LOCAL}", ループ用, "バフ対象能力") == "単体かばう"
				;回数持続の効果の回数を減少
				LOCAL:10 = DT_CELL_GET(@"バフデータベース_{LOCAL}", ループ用, "持続回数")
				IF LOCAL:10 == 1
					DT_ROW_REMOVE @"バフデータベース_{LOCAL}", ループ用
				ELSEIF LOCAL:10 > 0
					DT_CELL_SET @"バフデータベース_{LOCAL}", ループ用, "持続回数", LOCAL:10 - 1
				ENDIF
				戦闘行動対象 = LOCAL
				アビ汎用変数:かばうフラグ = 1
				RETURN 1
			ENDIF
		NEXT
	ENDIF
NEXT

@かばうチェック_敵(ARGS)
#DIM ループ用
#DIM データベース行数
アビ汎用変数:かばうフラグ = 0

FOR LOCAL, 10, 20
	データベース行数 = DT_ROW_LENGTH(@"バフデータベース_{LOCAL}")
	;まず全体かばうチェック
	FOR ループ用, 0, データベース行数
		IF DT_CELL_GETS(@"バフデータベース_{LOCAL}", ループ用, "バフ対象能力") == "全体かばう"
			;回数持続の効果の回数を減少
			LOCAL:10 = DT_CELL_GET(@"バフデータベース_{LOCAL}", ループ用, "持続回数")
			IF LOCAL:10 == 1
				DT_ROW_REMOVE @"バフデータベース_{LOCAL}", ループ用
			ELSEIF LOCAL:10 > 0
				DT_CELL_SET @"バフデータベース_{LOCAL}", ループ用, "持続回数", LOCAL:10 - 1
			ENDIF
			戦闘行動対象 = LOCAL
			アビ汎用変数:かばうフラグ = 1
			RETURN 1
		ENDIF
	NEXT
	IF ARGS != "全体かばう"
		;単体かばうチェック
		FOR ループ用, 0, データベース行数
			IF DT_CELL_GETS(@"バフデータベース_{LOCAL}", ループ用, "バフ対象能力") == "単体かばう"
				;回数持続の効果の回数を減少
				LOCAL:10 = DT_CELL_GET(@"バフデータベース_{LOCAL}", ループ用, "持続回数")
				IF LOCAL:10 == 1
					DT_ROW_REMOVE @"バフデータベース_{LOCAL}", ループ用
				ELSEIF LOCAL:10 > 0
					DT_CELL_SET @"バフデータベース_{LOCAL}", ループ用, "持続回数", LOCAL:10 - 1
				ENDIF
				戦闘行動対象 = LOCAL
				アビ汎用変数:かばうフラグ = 1
				RETURN 1
			ENDIF
		NEXT
	ENDIF
NEXT