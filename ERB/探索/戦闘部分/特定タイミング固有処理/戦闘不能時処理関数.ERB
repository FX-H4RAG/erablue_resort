@戦闘不能時固有処理関数()
#DIM バフ番号
#DIM デバフ番号
#DIM 生存チェック_味方
#DIM 生存チェック_敵
生存チェック_味方 = 0
生存チェック_敵 = 0

CALL 口上変数初期化
CALL アビテンプレ変数リセット
;戦闘不能時に呼ぶ関数

;フィールドを見る
IF 展開中フィールド名格納 != ""
	TRYCALLFORM 固有戦闘不能時処理_フィールド_%展開中フィールド名格納%()
	;基本的に表示処理まで全て関数の中でやること
	;（戦闘行動キャラが存在しないのでアビテンプレートは使用しない）
ENDIF

IF 戦闘行動キャラ < 10
	;指輪を見る
	TRYCCALLFORM 固有戦闘不能時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備指輪番号, "指輪名", 1)%()
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;衣装を見る
	TRYCCALLFORM 固有戦闘不能時処理_探索衣装_%DT_CELL_GETS("所持衣装データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備衣装番号, "衣装名", 1)%()
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;キャラを見る
	TRYCCALLFORM 固有戦闘不能時処理_キャラ_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ番号)}()
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;バフ・デバフを見る
	FOR バフ番号, 0, DT_ROW_LENGTH(@"バフデータベース_{戦闘行動キャラ}")
		TRYCCALLFORM 固有戦闘不能時処理_バフ_%DT_CELL_GETS(@"バフデータベース_{戦闘行動キャラ}", バフ番号, "バフ枠")%()
			;表示処理
			CALL アビテンプレート用_表示メッセージ変換処理
			SIF K > 0
				CALL メッセージ欄表示用関数(,,,0)
			CALL 口上変数初期化
			CALL アビテンプレ変数リセット
		CATCH
		ENDCATCH
	NEXT
	FOR デバフ番号, 0, DT_ROW_LENGTH(@"デバフデータベース_{戦闘行動キャラ}")
		TRYCCALLFORM 固有戦闘不能時処理_デバフ_%DT_CELL_GETS(@"デバフデータベース_{戦闘行動キャラ}", デバフ番号, "デバフ枠")%()
			;表示処理
			CALL アビテンプレート用_表示メッセージ変換処理
			SIF K > 0
				CALL メッセージ欄表示用関数(,,,0)
			CALL 口上変数初期化
			CALL アビテンプレ変数リセット
		CATCH
		ENDCATCH
	NEXT
ELSE
	;キャラを見る
	TRYCCALLFORM 固有戦闘不能時処理_エネミー_%敵BATTLE_STATE_STR:(戦闘行動キャラ - 10):エネミー名%()
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
ENDIF
