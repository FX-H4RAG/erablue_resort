@被タゲ時固有処理関数
#DIM バフ・デバフ行数
#DIM バフ番号
#DIM デバフ番号
#DIM 生存エネミー数
#DIM 全滅フラグ

;被タゲ効果時に読みに来る関数

全滅フラグ = 0
;敵が全滅してるかチェック
生存エネミー数 = 0
FOR LOCAL, 0, 10
	SIF 敵BATTLE_STATE_STR:LOCAL:エネミー名 == ""
		CONTINUE
	SIF 敵BATTLE_STATE:LOCAL:ＨＰ < 1
		CONTINUE
	生存エネミー数 += 1
NEXT
SIF 生存エネミー数 < 1
	全滅フラグ = 1

;フィールドを見る
IF 展開中フィールド名格納 != ""
	TRYCCALLFORM 固有被タゲ時処理_フィールド_%展開中フィールド名格納%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
ENDIF


IF 戦闘行動キャラ < 10
	;味方の場合

	;指輪を見る
	TRYCCALLFORM 固有被タゲ時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備指輪番号, "指輪名", 1)%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
	TRYCALLFORM 固有被タゲ時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備指輪番号, "指輪名", 1)%(全滅フラグ)

	;ジョブ証を見る
	TRYCCALLFORM 固有被タゲ時処理_ジョブ証_%DT_CELL_GETS("所持ジョブ証データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備証番号, "ジョブ証名", 1)%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;キャラを見る
	TRYCCALLFORM 固有被タゲ時処理_キャラ_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ番号)}(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;バフは見ない。特殊反応_被タゲ時バフを使いなさい。
ELSE
	;敵の場合
	TRYCCALLFORM 固有被タゲ時処理_エネミー_%敵BATTLE_STATE_STR:(戦闘行動キャラ - 10):エネミー関数キー%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
ENDIF

@回避時固有処理関数
#DIM バフ・デバフ行数
#DIM バフ番号
#DIM デバフ番号
#DIM 生存エネミー数
#DIM 全滅フラグ

;回避効果時に読みに来る関数

全滅フラグ = 0
;敵が全滅してるかチェック
生存エネミー数 = 0
FOR LOCAL, 0, 10
	SIF 敵BATTLE_STATE_STR:LOCAL:エネミー名 == ""
		CONTINUE
	SIF 敵BATTLE_STATE:LOCAL:ＨＰ < 1
		CONTINUE
	生存エネミー数 += 1
NEXT
SIF 生存エネミー数 < 1
	全滅フラグ = 1

;フィールドを見る
IF 展開中フィールド名格納 != ""
	TRYCCALLFORM 固有回避時処理_フィールド_%展開中フィールド名格納%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
ENDIF


IF 戦闘行動キャラ < 10
	;味方の場合

	;指輪を見る
	TRYCCALLFORM 固有回避時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備指輪番号, "指輪名", 1)%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
	TRYCALLFORM 固有回避時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備指輪番号, "指輪名", 1)%(全滅フラグ)

	;ジョブ証を見る
	TRYCCALLFORM 固有回避時処理_ジョブ証_%DT_CELL_GETS("所持ジョブ証データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備証番号, "ジョブ証名", 1)%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;キャラを見る
	TRYCCALLFORM 固有回避時処理_キャラ_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ番号)}(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;バフは見ない。特殊反応_回避時バフを使いなさい。
ELSE
	;敵の場合
	TRYCCALLFORM 固有回避時処理_エネミー_%敵BATTLE_STATE_STR:(戦闘行動キャラ - 10):エネミー関数キー%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
ENDIF

@被ダメ時固有処理関数
#DIM バフ・デバフ行数
#DIM バフ番号
#DIM デバフ番号
#DIM 生存エネミー数
#DIM 全滅フラグ

;被ダメ効果時に読みに来る関数

全滅フラグ = 0
;敵が全滅してるかチェック
生存エネミー数 = 0
FOR LOCAL, 0, 10
	SIF 敵BATTLE_STATE_STR:LOCAL:エネミー名 == ""
		CONTINUE
	SIF 敵BATTLE_STATE:LOCAL:ＨＰ < 1
		CONTINUE
	生存エネミー数 += 1
NEXT
SIF 生存エネミー数 < 1
	全滅フラグ = 1

;フィールドを見る
IF 展開中フィールド名格納 != ""
	TRYCCALLFORM 固有被ダメ時処理_フィールド_%展開中フィールド名格納%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
ENDIF


IF 戦闘行動キャラ < 10
	;味方の場合

	;指輪を見る
	TRYCCALLFORM 固有被ダメ時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備指輪番号, "指輪名", 1)%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
	TRYCALLFORM 固有被ダメ時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備指輪番号, "指輪名", 1)%(全滅フラグ)

	;ジョブ証を見る
	TRYCCALLFORM 固有被ダメ時処理_ジョブ証_%DT_CELL_GETS("所持ジョブ証データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ番号):装備証番号, "ジョブ証名", 1)%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;キャラを見る
	TRYCCALLFORM 固有被ダメ時処理_キャラ_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ番号)}(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH

	;バフは見ない。特殊反応_被ダメ時バフを使いなさい。
ELSE
	;敵の場合
	TRYCCALLFORM 固有被ダメ時処理_エネミー_%敵BATTLE_STATE_STR:(戦闘行動キャラ - 10):エネミー関数キー%(全滅フラグ)
		;表示処理
		CALL アビテンプレート用_表示メッセージ変換処理
		SIF K > 0
			CALL メッセージ欄表示用関数(,,,0)
		CALL 口上変数初期化
		CALL アビテンプレ変数リセット
	CATCH
	ENDCATCH
ENDIF

