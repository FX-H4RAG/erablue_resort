@搭載兵器関数_タクティカルポインター(処理モード, 兵器id)
#DIMS 処理モード
#DIM 兵器id
#DIM 兵器_攻撃力補正
#DIM 兵器_命中率補正
#DIM 兵器_攻撃力変動
#DIM 兵器_命中率変動
#DIM 兵器_残弾種別
#DIM 兵器_残弾数
#DIMS 兵器_カテゴリ
#DIMS 兵器_距離適性
#DIMS 兵器名一時保存
LOCALS = 

SELECTCASE 処理モード
	CASE "兵器登録"
		兵器名一時保存 = タクティカルポインター
		;攻撃力補正、命中率補正は「その兵器を使用した時に補正を掛ける数値」
		;攻撃力変動、命中率変動は「その兵器を装備しているだけで乗機のステータスを変える数値」
		兵器_攻撃力補正 = 0
		兵器_命中率補正 = 0
		兵器_攻撃力変動 = 0
		兵器_命中率変動 = 0
		;残弾種別 0:戦闘中回数制限 1:探索中回数制限 2:クールダウンターン発生
		兵器_残弾種別 = 0
		兵器_残弾数 = 1
		;カテゴリ 基本は「機械系」と「魔法系」の二択。自由文字列なので任意のカテゴリ名を突っ込んでも良い
		;距離適性 基本は「近距離」と「遠距離」と「味方支援」の三択。自由文字列なので任意のカテゴリ名を突っ込んでも良い
		;複数カテゴリをもたせる場合は「近距離_遠距離」のように記載
		兵器_カテゴリ = 汎用
		兵器_距離適性 = 味方支援

		{
		DT_ROW_ADD "所持兵器データベース", "兵器名", 兵器名一時保存, 
			"攻撃力補正", 兵器_攻撃力補正, "攻撃力補正_強化後", 兵器_攻撃力補正, 
			"命中率補正", 兵器_命中率補正, "命中率補正_強化後", 兵器_命中率補正, 
			"攻撃力変動値", 兵器_攻撃力変動, "攻撃力変動値_強化後", 兵器_攻撃力変動, 
			"命中率変動値", 兵器_命中率変動, "命中率変動値_強化後", 兵器_命中率変動, 
			"残弾種別", 兵器_残弾種別, "残弾数", 兵器_残弾数, "残弾数_強化後", 兵器_残弾数, 
			"兵器カテゴリ", 兵器_カテゴリ, "兵器距離適性", 兵器_距離適性,
		}
	CASE "フレーバー"
		LOCALS += "光を用いて味方に作戦を伝える兵装。<br>"
		LOCALS += "戦闘中に隊列を変更することができ、戦術の幅が広がる。<br>"
		LOCALS += "指揮系統に混乱が生じるため、使用は戦闘中に１度まで。<br>"
		詳細文文字列受け渡し変数 = %LOCALS%
	CASE "アビ名"
		TSTR:コマンド名受渡 = タクティクスコマンド
	CASE "アビ説明文"
		;残弾などの説明文字列は機体側で記述
		LOCALS += "　効果：メインメンバー１人とサブメンバー１人を入れ替える。<br>"
		LOCALS += "　　　　（バフ・デバフ効果は引き継がない）<br>"
		詳細文文字列受け渡し変数 = %LOCALS%
	CASE "アビ効果"
		CALL サブメンバー交代処理_戦闘中()
		SIF RESULT == 0
			アビテンプレート用_キャンセルフラグ = 1
ENDSELECT

;兵装開発では出現しない（入手法：ダンジョン「風遊ぶ渓谷の参道」でボス「ティアマト」を初回撃破することで実物を入手。設計図は入手不能。周回含め１個制限）
;@兵器開発対象_タクティカルポインター(処理モード)


@サブメンバー交代処理_戦闘中()
#DIM 交代候補_メイン
#DIM 交代候補_サブ
#DIMS 描画用
#DIM INPUT保存
#DIM ループ用
#DIM 戦闘行動キャラ保存用

交代候補_メイン = -1
交代候補_サブ = -1

;全員分の画像を再生成
CALL 探索用顔グラフィック生成
CALL DUNGEON_キャラ描画

DO
	DRAWLINE
	PRINTL メインメンバーとサブメンバーを入れ替えることが出来ます。
	PRINTL 入れ替えたいキャラを左右それぞれで選んでください。
	DRAWLINE
	;順番に並べる
	描画用 = 
	描画用 += "<div rect='2887,1530, 500, 200'>←→</div>"
	FOR ループ用, 10, 14
		SIF BATTLE_STATE:ループ用:キャラ登録番号 < 1
			BREAK
		描画用 += @"<div rect='100, {(ループ用 - 10) * 790}, 2500, 5000'>"
		IF 交代候補_サブ == ループ用
			描画用 += @"<button value='{ループ用}' ><img src='キャラ_{ループ用}_ボタン' height='750' width='2462'></button>"
		ELSE
			描画用 += @"<button value='{ループ用}' ><img src='キャラ_{ループ用}' srcb='キャラ_{ループ用}_ボタン' height='750' width='2462'></button>"
		ENDIF
		描画用 += "</div>"
	NEXT
	FOR ループ用, 0, 4
		SIF BATTLE_STATE:ループ用:キャラ登録番号 < 1
			BREAK
		描画用 += @"<div rect='3375,{ループ用 * 790}, 2500, 1000'>"
		IF 交代候補_メイン == ループ用
			描画用 += @"<button value='{ループ用}' ><img src='キャラ_{ループ用}_ボタン' height='750' width='2462'></button>"
		ELSE
			描画用 += @"<button value='{ループ用}' ><img src='キャラ_{ループ用}' srcb='キャラ_{ループ用}_ボタン' height='750' width='2462'></button>"
		ENDIF
		描画用 += "</div>"
	NEXT
	HTML_PRINT 描画用
	FOR ループ用, 0, 29
		PRINTL
	NEXT
	PRINTBUTTON "[999] 戻る", 999
	PRINTL
	PRINTL

	BINPUT
	INPUT保存 = RESULT
	SELECTCASE INPUT保存
		CASE 0 TO 3
			IF INPUT保存 != 交代候補_メイン
				交代候補_メイン = INPUT保存
			ELSE
				交代候補_メイン = -1
			ENDIF
		CASE 10 TO 13
			IF INPUT保存 != 交代候補_サブ
				交代候補_サブ = INPUT保存
			ELSE
				交代候補_サブ = -1
			ENDIF
		CASE 999
			RETURN 0
	ENDSELECT
LOOP !INRANGE(交代候補_メイン, 0, 3) || !INRANGE(交代候補_サブ, 10, 13)

;交代処理
FOR ループ用, 0, VARSIZE("BATTLE_STATE", 2)
	;行動済みフラグはそのまま
	SIF ループ用 == GETNUM(BATTLE_STATE, "行動済みフラグ", 2)
		CONTINUE
	SWAP BATTLE_STATE:交代候補_サブ:ループ用, BATTLE_STATE:交代候補_メイン:ループ用
NEXT
FOR ループ用, 0, VARSIZE("探索中カウント", 2)
	探索中カウント:交代候補_メイン:ループ用 += 戦闘中カウント:交代候補_メイン:ループ用
	戦闘中カウント:交代候補_メイン:ループ用 = 0
	SWAP 探索中カウント:交代候補_サブ:ループ用, 探索中カウント:交代候補_メイン:ループ用
NEXT

;メインメンバー特有の変数やデバフをリセット
FOR ループ用, 0, VARSIZE("行動種別フラグ", 2)
	行動種別フラグ:交代候補_メイン:ループ用 = 0
NEXT
ループ用 = FINDELEMENT(チェンバ基準キャラ保存, 交代候補_メイン)
WHILE ループ用 >= 0
	ARRAYSHIFT チェンバ基準キャラ保存, -1, -1, ループ用
	ターン中奥義回数保存 --
	ループ用 = FINDELEMENT(チェンバ基準キャラ保存, 交代候補_メイン)
WEND
;固有バフなどが残って変なことになりそうなので、仕方なく引き継がない
CALL 戦闘効果直接削除(交代候補_メイン, "ALL", "", "ALL")

PRINTFORMW %CALLNAME:(BATTLE_STATE:交代候補_サブ:キャラ登録番号)%と%CALLNAME:(BATTLE_STATE:交代候補_メイン:キャラ登録番号)%を交代しました。

;戦闘開始時のキャラ固有処理を行う
戦闘行動キャラ保存用 = 戦闘行動キャラ
戦闘行動キャラ = RESULT
CALL 口上変数初期化
CALL アビテンプレ変数リセット

;指輪を見る
TRYCCALLFORM 固有戦闘開始時処理_指輪_%DT_CELL_GETS("所持指輪データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号):装備指輪番号, "指輪名", 1)%()
	;表示処理
	CALL アビテンプレート用_表示メッセージ変換処理
	SIF K > 0
		CALL メッセージ欄表示用関数(,,,0)
	CALL 口上変数初期化
	CALL アビテンプレ変数リセット
CATCH
ENDCATCH

;ジョブ証を見る
TRYCCALLFORM 固有戦闘開始時処理_ジョブ証_%DT_CELL_GETS("所持ジョブ証データベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号):装備証番号, "ジョブ証名", 1)%()
	;表示処理
	CALL アビテンプレート用_表示メッセージ変換処理
	SIF K > 0
		CALL メッセージ欄表示用関数(,,,0)
	CALL 口上変数初期化
	CALL アビテンプレ変数リセット
CATCH
ENDCATCH

;キャラを見る
TRYCCALLFORM 固有戦闘開始時処理_キャラ_{NO:(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号)}()
	;表示処理
	CALL アビテンプレート用_表示メッセージ変換処理
	SIF K > 0
		CALL メッセージ欄表示用関数(,,,0)
	CALL 口上変数初期化
	CALL アビテンプレ変数リセット
CATCH
ENDCATCH

戦闘行動キャラ = 戦闘行動キャラ保存用
CALL 探索用顔グラフィック生成()
RETURN 1
