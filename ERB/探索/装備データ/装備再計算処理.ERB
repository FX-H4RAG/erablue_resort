@装備再計算処理(対象キャラ)
#DIM 対象キャラ
#DIM 装備指輪
#DIM 装備耳飾り
#DIM 装備証
#DIM ステータス一時計算
#DIM 指輪基礎効果有効化フラグ
VARSET LOCALS

;装備アイテム番号だけ退避させて一旦全部消す
装備指輪 = 装備ステータス補正保存:対象キャラ:装備指輪番号
装備耳飾り = 装備ステータス補正保存:対象キャラ:装備耳飾り番号
装備証 = 装備ステータス補正保存:対象キャラ:装備証番号
VARSET 装備ステータス補正保存:対象キャラ:0
装備ステータス補正保存:対象キャラ:装備指輪番号 = 装備指輪
装備ステータス補正保存:対象キャラ:装備耳飾り番号 = 装備耳飾り
装備ステータス補正保存:対象キャラ:装備証番号 = 装備証

;指輪補正処理
TRYCCALLFORM 指輪基礎効果適用判定_%DT_CELL_GETS("所持指輪データベース", 装備指輪, "指輪名", 1)%(対象キャラ)
	指輪基礎効果有効化フラグ = RESULT
CATCH
	指輪基礎効果有効化フラグ = 1
ENDCATCH
IF 指輪基礎効果有効化フラグ
	SPLIT DT_CELL_GETS("所持指輪データベース", 装備指輪, "基礎ステータス補正", 1), "_", LOCALS
	FOR LOCAL:1, 0, 30, 2
		IF LOCALS:(LOCAL:1) == ""
			BREAK
		ENDIF
		装備ステータス補正保存:対象キャラ:(LOCALS:(LOCAL:1)) += TOINT(LOCALS:(LOCAL:1 + 1))
	NEXT
ENDIF
;オプション効果は常に発揮される
VARSET LOCALS, ""
SPLIT DT_CELL_GETS("所持指輪データベース", 装備指輪, "オプションステータス補正", 1), "_", LOCALS
FOR LOCAL:1, 0, (指輪オプション最大数 * 2), 2
	IF LOCALS:(LOCAL:1) == ""
		BREAK
	ENDIF
	装備ステータス補正保存:対象キャラ:(LOCALS:(LOCAL:1)) += TOINT(LOCALS:(LOCAL:1 + 1))
NEXT

;耳飾り補正処理
IF DT_CELL_GETS("所持耳飾りデータベース", 装備耳飾り, "変更属性", 1) != ""
	;0を火属性にしちゃったので数値そのままだと属性変更してるかどうか判別がつかないため、装備による属性変更は属性番号+10で保存
	装備ステータス補正保存:対象キャラ:属性 = 属性文字列数値変換(DT_CELL_GETS("所持耳飾りデータベース", 装備耳飾り, "変更属性", 1)) + 10
ENDIF

;たぶん現状証でステータスが変化することはないので触らない

;その他ステータス補正処理
IF CFLAG:対象キャラ:滞在期間 > 0
	;最大HP
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:最大ＨＰ + 装備ステータス補正保存:対象キャラ:最大ＨＰ
	SIF 基礎BATTLE_STATE:対象キャラ:属性 == 3 && 料理セット判定("１ポンドステーキ")
		装備ステータス補正保存:対象キャラ:最大ＨＰ += ステータス一時計算 * 10 / 100
	;最大MP
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:最大ＭＰ + 装備ステータス補正保存:対象キャラ:最大ＭＰ
	SIF 基礎BATTLE_STATE:対象キャラ:属性 == 5 && 料理セット判定("闇鍋")
		装備ステータス補正保存:対象キャラ:最大ＭＰ += ステータス一時計算 * 10 / 100
	;攻撃力
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:攻撃力 + 装備ステータス補正保存:対象キャラ:攻撃力
	SIF 料理セット判定("焼肉セット")
		装備ステータス補正保存:対象キャラ:攻撃力 += ステータス一時計算 * 5 / 100
	;防御力
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:防御力 + 装備ステータス補正保存:対象キャラ:防御力
	SIF 基礎BATTLE_STATE:対象キャラ:属性 == 1 && 料理セット判定("海鮮焼きそば")
		装備ステータス補正保存:対象キャラ:防御力 += ステータス一時計算 * 5 / 100
	;回復力
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:回復力 + 装備ステータス補正保存:対象キャラ:回復力
	SIF 基礎BATTLE_STATE:対象キャラ:属性 == 2 && 料理セット判定("パンケーキ")
		装備ステータス補正保存:対象キャラ:回復力 += ステータス一時計算 * 5 / 100
	;行動速度
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:行動速度 + 装備ステータス補正保存:対象キャラ:行動速度
	SIF 基礎BATTLE_STATE:対象キャラ:属性 == 2 && 料理セット判定("温玉サラダ")
		装備ステータス補正保存:対象キャラ:行動速度 += ステータス一時計算 * 5 / 100
	;命中率
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:命中率 + 装備ステータス補正保存:対象キャラ:命中率
	SIF 料理セット判定("レンズ豆煮込み")
		装備ステータス補正保存:対象キャラ:命中率 += 5
	;DA率
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:DA率 + 装備ステータス補正保存:対象キャラ:DA率
	SIF 基礎BATTLE_STATE:対象キャラ:属性 == 0 && 料理セット判定("ドリア")
		装備ステータス補正保存:対象キャラ:DA率 += 10
	;TA率
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:TA率 + 装備ステータス補正保存:対象キャラ:TA率
	SIF 基礎BATTLE_STATE:対象キャラ:属性 == 2 && 料理セット判定("温玉サラダ")
		装備ステータス補正保存:対象キャラ:TA率 += 5
	;ゲージ上昇効率
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:ゲージ上昇効率 + 装備ステータス補正保存:対象キャラ:ゲージ上昇効率
	SIF 基礎BATTLE_STATE:対象キャラ:属性 == 4 && 料理セット判定("出汁鍋")
		装備ステータス補正保存:対象キャラ:ゲージ上昇効率 += 10
	;水強化
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:水強化 + 装備ステータス補正保存:対象キャラ:水強化
	SIF 料理セット判定("刺し身の昆布締め")
		装備ステータス補正保存:対象キャラ:水強化 += 5
	;風強化
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:風強化 + 装備ステータス補正保存:対象キャラ:風強化
	SIF 料理セット判定("茶碗蒸し")
		装備ステータス補正保存:対象キャラ:風強化 += 5
	;土強化
	ステータス一時計算 = 基礎BATTLE_STATE:対象キャラ:土強化 + 装備ステータス補正保存:対象キャラ:土強化
	SIF 料理セット判定("肉まん")
		装備ステータス補正保存:対象キャラ:土強化 += 5
ENDIF

;パーティキャラ補正
IF 隊列算出_味方(対象キャラ) > -1
	;算出キャラがPTにいる時、PT全員分の補正を見に行く
	FOR LOCAL, 0, 14
		SIF LOCAL > 3 && LOCAL < 10
			CONTINUE
		SIF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
			CONTINUE
		;パーティ補正があるかどうか
		TRYCALLFORM PT編成時ステータス補正_{NO:(BATTLE_STATE:LOCAL:キャラ登録番号)}(対象キャラ)
	NEXT
ENDIF
