;-------------------------------------------------
;いわゆるROUND関数判定
;ARG <= ARG:1 <= ARG:2ならば1を、そうでなければ0を返す
;-------------------------------------------------
@CHK_FOCUS(ARG, ARG:1, ARG:2)
#FUNCTION
;SIF CALC_FOCUS(ARG, ARG:1, ARG:2) != ARG:1
;	RETURNF 0
;RETURNF 1
SIF INRANGE(ARG:1, ARG:0, ARG:2)
	RETURNF 1
SIF ARG > ARG:2
	PRINT ARG:0 > ARG:2 エラー
RETURNF 0
;-------------------------------------------------
;いわゆるROUND関数出力
;-------------------------------------------------
@CALC_FOCUS(ARG, ARG:1, ARG:2)
#FUNCTION
SIF ARG >= ARG:1
	RETURNF ARG
SIF ARG	:1 >= ARG:2
	RETURNF ARG:2
RETURNF ARG:1 

;-------------------------------------------------
;与えられた要素の0~ARG番目のうち、何番目が最大の数値か返す（同値なら番手が少ないほうが優先）
;-------------------------------------------------
@MAXFIND(ARG, 要素:0, 要素:1, 要素:2, 要素:3, 要素:4, 要素:5, 要素:6, 要素:7, 要素:8, 要素:9)
#FUNCTION
#DIM DYNAMIC 要素, 11
SIF ARG < 0
	RETURNF 0
要素:10 = MAXARRAY(要素)
FOR LOCAL, 0, ARG
	SIF 要素:LOCAL == 要素:10
		BREAK
NEXT
RETURNF LOCAL-1

;-------------------------------------------------
;与えられた要素の0~ARG番目のうちのうち、何番目が最小の数値か返す（同値なら番手が少ないほうが優先）
;-------------------------------------------------
@MINFIND(ARG, 要素:0, 要素:1, 要素:2, 要素:3, 要素:4, 要素:5, 要素:6, 要素:7, 要素:8, 要素:9)
#FUNCTION
#DIM DYNAMIC 要素, 11
SIF ARG < 0
	RETURNF 0
要素:10 = MINARRAY(要素)
FOR LOCAL, 0, ARG
	SIF 要素:LOCAL == 要素:10
		BREAK
NEXT
RETURNF LOCAL-1

;-------------------------------------------------
;ARGが、与えられた数値間のうちどの範囲に入るかを返す
;(10, 1, 3, 100, 5, 15)とかだと先に3～100に反応して1を返す
;-------------------------------------------------
@RANGEFIND(ARG, 要素:0, 要素:1, 要素:2, 要素:3, 要素:4, 要素:5, 要素:6, 要素:7, 要素:8, 要素:9)
#FUNCTION
#DIM DYNAMIC 要素, 10
FOR LOCAL, 0, 9
	SIF INRANGE(ARG, 要素:LOCAL, 要素:(LOCAL+1))
		BREAK
NEXT
RETURNF LOCAL-1

@滞在キャラ数算出関数()
#FUNCTION
;モブ、ネームド観光客、定住者、全部ひっくるめた数の算出

RETURNF モブ観光客数 + 滞在キャラ数

@陥落チェック(ARG)
#FUNCTION
IF TALENT:ARG:恋慕
	RETURNF 1
ELSEIF TALENT:ARG:セフレ
	RETURNF 2
ELSE
	RETURNF 0
ENDIF

@従業員人数チェック()

従業員人数 = 0
FOR LOCAL,1,CHARANUM
	IF TALENT:LOCAL:従業員
		従業員人数 += 1
	ENDIF
NEXT

RETURN 従業員人数


@ドロップ判定処理(ドロップ確率, 入手アイテム名)
#DIM ドロップ確率
#DIMS 入手アイテム名

LOCAL = RAND:100

IF 確定ドロップフラグ
	LOCAL = 0
ENDIF

IF LOCAL < ドロップ確率
	WSTR:(K++) = %入手アイテム名%を手に入れた！
	CALL 素材入手処理(入手アイテム名)
ENDIF


@素材入手処理(入手アイテム名)
#DIMS 入手アイテム名

VARSET LOCAL
FOR COUNT, 0, DT_ROW_LENGTH("所持素材データベース")
	IF DT_CELL_GETS("所持素材データベース", COUNT, "素材アイテム名") == 入手アイテム名
		LOCAL:1 = 1
		BREAK
	ENDIF
NEXT
IF LOCAL:1
	LOCAL:1 = DT_CELL_GET("所持素材データベース", COUNT - 1, "所持数")
	DT_CELL_SET "所持素材データベース", COUNT - 1, "所持数", LOCAL:1 + 1
ELSE
	PRINTL
	PRINTL
	PRINTL
	PRINTL
	PRINTL アイテム名が不正です。制作者に連絡してください。
	PRINTL
	PRINTL
	PRINTL
	PRINTL
	FORCEWAIT
ENDIF


