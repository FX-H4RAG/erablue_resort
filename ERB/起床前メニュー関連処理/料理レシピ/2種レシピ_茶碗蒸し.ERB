@特殊料理_2種レシピ_茶碗蒸し(ARGS)

SELECTCASE ARGS
	CASE "レシピ参照"
		;レシピブック用にレシピ文章をRESULTSへ
		RESULTS = 
		RESULTS += "　メイン　：卵系食材<br>"
		RESULTS += "　サブ　　：野菜系食材・なし・なし<br>"
		RESULTS += "　調理器具：蒸し器<br>"

		;メインが卵
		LOCALS:0 = %DT_CELL_GETS("所持素材データベース", 使用食材:0, "食材分類", 1)%
		SIF LOCALS:0 != "卵"
			RETURN 0

		;追加は野菜
		LOCALS:1 = %DT_CELL_GETS("所持素材データベース", 使用食材:1, "食材分類", 1)%
		LOCALS:2 = %DT_CELL_GETS("所持素材データベース", 使用食材:2, "食材分類", 1)%
		LOCALS:3 = %DT_CELL_GETS("所持素材データベース", 使用食材:3, "食材分類", 1)%
		SIF GROUPMATCH("野菜", LOCALS:1, LOCALS:2, LOCALS:3) != 1
			RETURN 0
		
		;調理器具は蒸し器
		SIF 使用食材:9 != 5
			RETURN 0

		;全部抜けてきたら一致
		;料理名と関数名は一致させること！
		料理名受け渡し = 茶碗蒸し
		RETURN 1
	CASE "料理基礎ステータス"
		;レシピブック用に収入をRESULTSへ
		RESULTS = 
		RESULTS += "　ルピ収入：料理ランク ✕ 料理ランク ✕ ２ ＋ ３<br>"
		RESULTS += "　ZP収入　：料理ランク ✕ 料理ランク ÷ １０ ＋ １（最低２）<br>"
		;-----------------------------------------------------
		;ルピ収入
		;基本は「開発料理ランク保存 * 開発料理ランク保存 * 2」に追加食材の数だけ＋した値
		;(追加食材はランク２以下だと１個につき＋１、ランク３以上だと＋２)
		;なので基本よりちょい上になるように設定すること
		RESULT:1 = 開発料理ランク保存 * 開発料理ランク保存 * 2 + 3
		;-----------------------------------------------------
		;ZP収入
		;基本はMAX(開発料理ランク保存 * 開発料理ランク保存 / 10, 1)
		;追加食材を３つ全部埋めたら＋１
		;基本よりちょい上になるように設定すること
		RETURN MAX(開発料理ランク保存 * 開発料理ランク保存 / 10, 1) + 1
		;-----------------------------------------------------
	CASE "料理特殊ステータス"
		詳細文文字列受け渡し変数 = 【なめらかぷるぷるが命！】<br>
		詳細文文字列受け渡し変数 += "　滞在中キャラの風属性攻撃を＋５％強化する。"
		;増加処理は@装備再計算処理に記述
ENDSELECT
